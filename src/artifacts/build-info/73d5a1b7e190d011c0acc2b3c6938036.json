{
  "id": "73d5a1b7e190d011c0acc2b3c6938036",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/interfaces/Controller.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\n\r\nimport { Streamer } from './Streamer.sol';\r\n\r\nimport { ISuperfluid } from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";  \r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Controller is Ownable {\r\n\r\n    Streamer[] streamers;\r\n\r\n    event newStream(address streamAddress, address token, address receiver, int96 flowRate, uint256 amount);\r\n\r\n    function createNewStream(ISuperfluid host, address _receiver, address _token, int96 _flowRate, uint256 _amount) public onlyOwner {\r\n        \r\n        Streamer streamer = new Streamer(host, _receiver, _token, _flowRate, _amount);\r\n        \r\n        streamers.push(streamer);\r\n\r\n        emit newStream(address(streamer), _token, _receiver, _flowRate, _amount);\r\n\r\n    }\r\n\r\n}"
      },
      "contracts/interfaces/Streamer.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\n\r\nimport {\r\n    CFAv1Library\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\";\r\n\r\nimport { \r\n    ISuperfluid,\r\n    ISuperToken,\r\n    ISuperApp,\r\n    ISuperAgreement,\r\n    ContextDefinitions,\r\n    SuperAppDefinitions\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";\r\n\r\nimport {\r\n    IConstantFlowAgreementV1\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\";\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n// interface IStreamer is Ownable {\r\n//     function deposit() public payable;        \r\n//     function withdraw() public;\r\n//     function closeStream(address sender, address receiver, address token) public;\r\n//     function editStream(address receiver, address _token, int96 flowRate) public;\r\n//     function getStreamerETA() external view returns(uint256);\r\n// }\r\n\r\n\r\ncontract Streamer is Ownable {\r\n\r\n    // Global Variables:\r\n    int96 flowRate; // Flow rate in wei per second\r\n    ISuperToken token; // Address of the ERC20-compliant token\r\n    address receiver;  // Address of the receiver\r\n\r\n\r\n    /** SUPERFLUID BOILERPLATE */\r\n    using CFAv1Library for CFAv1Library.InitData;\r\n\r\n    //initialize cfaV1 variable\r\n    CFAv1Library.InitData public cfaV1;\r\n    \r\n    constructor(ISuperfluid host, address _receiver, address _token, int96 _flowRate, uint256 _amount) {\r\n    \r\n        //initialize InitData struct, and set equal to cfaV1\r\n        cfaV1 = CFAv1Library.InitData(\r\n            host,\r\n            //here, we are deriving the address of the CFA using the host contract\r\n            IConstantFlowAgreementV1(\r\n                address(host.getAgreementClass(\r\n                        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\")\r\n                    ))\r\n                )\r\n        );\r\n\r\n        deposit(_amount);\r\n        receiver = _receiver;\r\n        flowRate = _flowRate;\r\n        token = ISuperToken(_token);\r\n\r\n        // cfaV1.cfa.createFlow(token, _receiver,  _flowRate, \"0x\");\r\n        \r\n        cfaV1.createFlow(receiver, token, flowRate);\r\n    }\r\n\r\n    function editStream (address _receiver, address _token, int96 _flowRate) public onlyOwner {\r\n        withdraw(token.balanceOf(address(this)));\r\n\r\n        receiver = _receiver;\r\n        token = ISuperToken(_token);\r\n        flowRate = _flowRate;\r\n        cfaV1.updateFlow(receiver, token, flowRate);\r\n    }\r\n\r\n    function closeStream() public onlyOwner {\r\n        cfaV1.deleteFlow(msg.sender, receiver, token);\r\n        withdraw(token.balanceOf(address(this)));\r\n    }\r\n\r\n    function getStreamerETA() external view returns(uint256) {\r\n\r\n        return token.balanceOf(address(this)) / uint96(flowRate);\r\n    }\r\n    \r\n    function deposit(uint256 _amount) public onlyOwner {\r\n        bool success = token.transfer(address(this), _amount);\r\n        require(success, \"Token transfer failed.\");\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public {\r\n        require(token.balanceOf(address(this)) >= _amount, \"Insufficient funds.\");\r\n        bool success = token.transfer(msg.sender, _amount);\r\n        require(success, \"Token transfer failed.\");\r\n    }\r\n\r\n}"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n// This is required by the batchCall and decodeCtx\npragma experimental ABIEncoderV2;\n\nimport { ISuperfluidGovernance } from \"./ISuperfluidGovernance.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperTokenFactory } from \"./ISuperTokenFactory.sol\";\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperApp } from \"./ISuperApp.sol\";\nimport {\n    SuperAppDefinitions,\n    ContextDefinitions,\n    BatchOperation,\n    SuperfluidGovernanceConfigs\n} from \"./Definitions.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\n\n\n/**\n * @dev Superfluid host interface.\n\n * It is the central contract of the system where super agreement, super app\n * and super token features are connected together.\n *\n * The superfluid host contract is also the entry point for the protocol users,\n * where batch call and meta transaction are provided for UX improvements.\n *\n * @author Superfluid\n */\ninterface ISuperfluid {\n\n    /**************************************************************************\n     * Governance\n     *************************************************************************/\n\n    /**\n     * @dev Get the current governace of the Superfluid host\n     */\n    function getGovernance() external view returns(ISuperfluidGovernance governance);\n\n    event GovernanceReplaced(ISuperfluidGovernance oldGov, ISuperfluidGovernance newGov);\n    /**\n     * @dev Replace the current governance with a new one\n     */\n    function replaceGovernance(ISuperfluidGovernance newGov) external;\n\n    /**************************************************************************\n     * Agreement Whitelisting\n     *************************************************************************/\n\n    event AgreementClassRegistered(bytes32 agreementType, address code);\n    /**\n     * @dev Register a new agreement class to the system\n     * @param agreementClassLogic INitial agreement class code\n     *\n     * Modifiers:\n     *  - onlyGovernance\n     */\n    function registerAgreementClass(ISuperAgreement agreementClassLogic) external;\n\n    event AgreementClassUpdated(bytes32 agreementType, address code);\n    /**\n    * @dev Update code of an agreement class\n    * @param agreementClassLogic New code for the agreement class\n    *\n    * Modifiers:\n    *  - onlyGovernance\n    */\n    function updateAgreementClass(ISuperAgreement agreementClassLogic) external;\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementTypeListed(bytes32 agreementType) external view returns(bool yes);\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementClassListed(ISuperAgreement agreementClass) external view returns(bool yes);\n\n    /**\n    * @dev Get agreement class\n    */\n    function getAgreementClass(bytes32 agreementType) external view returns(ISuperAgreement agreementClass);\n\n    /**\n    * @dev Map list of the agreement classes using a bitmap\n    * @param bitmap Agreement class bitmap\n    */\n    function mapAgreementClasses(uint256 bitmap)\n        external view\n        returns (ISuperAgreement[] memory agreementClasses);\n\n    /**\n    * @dev Create a new bitmask by adding a agreement class to it.\n    * @param bitmap Agreement class bitmap\n    */\n    function addToAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**\n    * @dev Create a new bitmask by removing a agreement class from it.\n    * @param bitmap Agreement class bitmap\n    */\n    function removeFromAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**************************************************************************\n    * Super Token Factory\n    **************************************************************************/\n\n    /**\n     * @dev Get the super token factory\n     * @return factory The factory\n     */\n    function getSuperTokenFactory() external view returns (ISuperTokenFactory factory);\n\n    /**\n     * @dev Get the super token factory logic (applicable to upgradable deployment)\n     * @return logic The factory logic\n     */\n    function getSuperTokenFactoryLogic() external view returns (address logic);\n\n    event SuperTokenFactoryUpdated(ISuperTokenFactory newFactory);\n    /**\n     * @dev Update super token factory\n     * @param newFactory New factory logic\n     */\n    function updateSuperTokenFactory(ISuperTokenFactory newFactory) external;\n\n    event SuperTokenLogicUpdated(ISuperToken indexed token, address code);\n    /**\n     * @dev Update the super token logic to the latest\n     *\n     * NOTE:\n     * - Refer toISuperTokenFactory.Upgradability for expected behaviours.\n     */\n    function updateSuperTokenLogic(ISuperToken token) external;\n\n    /**************************************************************************\n     * App Registry\n     *************************************************************************/\n\n    /**\n     * @dev App registered event\n     */\n    event AppRegistered(ISuperApp indexed app);\n\n    /**\n     * @dev Jail event for the app\n     */\n    event Jail(ISuperApp indexed app, uint256 reason);\n\n    /**\n     * @dev Message sender declares it as a super app\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     */\n    function registerApp(uint256 configWord) external;\n\n    /**\n     * @dev Message sender declares it as a super app, using a registration key\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     * @param registrationKey The registration key issued by the governance\n     */\n    function registerAppWithKey(uint256 configWord, string calldata registrationKey) external;\n\n    /**\n     * @dev Message sender declares app as a super app\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     * NOTE: only factory contracts authorized by governance can register super apps\n     */\n    function registerAppByFactory(ISuperApp app, uint256 configWord) external;\n\n    /**\n     * @dev Query if the app is registered\n     * @param app Super app address\n     */\n    function isApp(ISuperApp app) external view returns(bool);\n\n    /**\n     * @dev Query app level\n     * @param app Super app address\n     */\n    function getAppLevel(ISuperApp app) external view returns(uint8 appLevel);\n\n    /**\n     * @dev Get the manifest of the super app\n     * @param app Super app address\n     */\n    function getAppManifest(\n        ISuperApp app\n    )\n        external view\n        returns (\n            bool isSuperApp,\n            bool isJailed,\n            uint256 noopMask\n        );\n\n    /**\n     * @dev Query if the app has been jailed\n     * @param app Super app address\n     */\n    function isAppJailed(ISuperApp app) external view returns (bool isJail);\n\n    /**\n     * @dev White-list the target app for app composition for the source app (msg.sender)\n     * @param targetApp The taget super app address\n     */\n    function allowCompositeApp(ISuperApp targetApp) external;\n\n    /**\n     * @dev Query if source app  is allowed to call the target app as downstream app.\n     * @param app Super app address\n     * @param targetApp The taget super app address\n     */\n    function isCompositeAppAllowed(\n        ISuperApp app,\n        ISuperApp targetApp\n    )\n        external view\n        returns (bool isAppAllowed);\n\n    /**************************************************************************\n     * Agreement Framework\n     *\n     * Agreements use these function to trigger super app callbacks, updates\n     * app allowance and charge gas fees.\n     *\n     * These functions can only be called by registered agreements.\n     *************************************************************************/\n\n    function callAppBeforeCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // isAppActive(app)\n        returns(bytes memory cbdata);\n\n    function callAppAfterCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // isAppActive(app)\n        returns(bytes memory appCtx);\n\n    function appCallbackPush(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 appAllowanceGranted,\n        int256 appAllowanceUsed,\n        ISuperfluidToken appAllowanceToken\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory appCtx);\n\n    function appCallbackPop(\n        bytes calldata ctx,\n        int256 appAllowanceUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    function ctxUseAllowance(\n        bytes calldata ctx,\n        uint256 appAllowanceWantedMore,\n        int256 appAllowanceUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    function jailApp(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 reason\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    /**************************************************************************\n     * Contextless Call Proxies\n     *\n     * NOTE: For EOAs or non-app contracts, they are the entry points for interacting\n     * with agreements or apps.\n     *\n     * NOTE: The contextual call data should be generated using\n     * abi.encodeWithSelector. The context parameter should be set to \"0x\",\n     * an empty bytes array as a placeholder to be replaced by the host\n     * contract.\n     *************************************************************************/\n\n     /**\n      * @dev Call agreement function\n      * @param callData The contextual call data with placeholder ctx\n      * @param userData Extra user data being sent to the super app callbacks\n      */\n     function callAgreement(\n         ISuperAgreement agreementClass,\n         bytes calldata callData,\n         bytes calldata userData\n     )\n        external\n        //cleanCtx\n        returns(bytes memory returnedData);\n\n    /**\n     * @dev Call app action\n     * @param callData The contextual call data.\n     *\n     * NOTE: See callAgreement about contextual call data.\n     */\n    function callAppAction(\n        ISuperApp app,\n        bytes calldata callData\n    )\n        external\n        //cleanCtx\n        //isAppActive(app)\n        returns(bytes memory returnedData);\n\n    /**************************************************************************\n     * Contextual Call Proxies and Context Utilities\n     *\n     * For apps, they must use context they receive to interact with\n     * agreements or apps.\n     *\n     * The context changes must be saved and returned by the apps in their\n     * callbacks always, any modification to the context will be detected and\n     * the violating app will be jailed.\n     *************************************************************************/\n\n    /**\n     * @dev ABIv2 Encoded memory data of context\n     *\n     * NOTE on backward compatibility:\n     * - Non-dynamic fields are padded to 32bytes and packed\n     * - Dynamic fields are referenced through a 32bytes offset to their \"parents\" field (or root)\n     * - The order of the fields hence should not be rearranged in order to be backward compatible:\n     *    - non-dynamic fields will be parsed at the same memory location,\n     *    - and dynamic fields will simply have a greater offset than it was.\n     */\n    struct Context {\n        //\n        // Call context\n        //\n        // callback level\n        uint8 appLevel;\n        // type of call\n        uint8 callType;\n        // the system timestsamp\n        uint256 timestamp;\n        // The intended message sender for the call\n        address msgSender;\n\n        //\n        // Callback context\n        //\n        // For callbacks it is used to know which agreement function selector is called\n        bytes4 agreementSelector;\n        // User provided data for app callbacks\n        bytes userData;\n\n        //\n        // App context\n        //\n        // app allowance granted\n        uint256 appAllowanceGranted;\n        // app allowance wanted by the app callback\n        uint256 appAllowanceWanted;\n        // app allowance used, allowing negative values over a callback session\n        int256 appAllowanceUsed;\n        // app address\n        address appAddress;\n        // app allowance in super token\n        ISuperfluidToken appAllowanceToken;\n    }\n\n    function callAgreementWithContext(\n        ISuperAgreement agreementClass,\n        bytes calldata callData,\n        bytes calldata userData,\n        bytes calldata ctx\n    )\n        external\n        // validCtx(ctx)\n        // onlyAgreement(agreementClass)\n        returns (bytes memory newCtx, bytes memory returnedData);\n\n    function callAppActionWithContext(\n        ISuperApp app,\n        bytes calldata callData,\n        bytes calldata ctx\n    )\n        external\n        // validCtx(ctx)\n        // isAppActive(app)\n        returns (bytes memory newCtx);\n\n    function decodeCtx(bytes calldata ctx)\n        external pure\n        returns (Context memory context);\n\n    function isCtxValid(bytes calldata ctx) external view returns (bool);\n\n    /**************************************************************************\n    * Batch call\n    **************************************************************************/\n    /**\n     * @dev Batch operation data\n     */\n    struct Operation {\n        // Operation. Defined in BatchOperation (Definitions.sol)\n        uint32 operationType;\n        // Operation target\n        address target;\n        // Data specific to the operation\n        bytes data;\n    }\n\n    /**\n     * @dev Batch call function\n     * @param operations Array of batch operations.\n     */\n    function batchCall(Operation[] memory operations) external;\n\n    /**\n     * @dev Batch call function for trusted forwarders (EIP-2771)\n     * @param operations Array of batch operations.\n     */\n    function forwardBatchCall(Operation[] memory operations) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * TODO: turning these off because solidity-coverage don't like it\n     *************************************************************************/\n\n     /* /// @dev The current superfluid context is clean.\n     modifier cleanCtx() virtual;\n\n     /// @dev The superfluid context is valid.\n     modifier validCtx(bytes memory ctx) virtual;\n\n     /// @dev The agreement is a listed agreement.\n     modifier isAgreement(ISuperAgreement agreementClass) virtual;\n\n     // onlyGovernance\n\n     /// @dev The msg.sender must be a listed agreement.\n     modifier onlyAgreement() virtual;\n\n     /// @dev The app is registered and not jailed.\n     modifier isAppActive(ISuperApp app) virtual; */\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "content": "//SPDX-License-Identifier: AGPLv3\npragma solidity >=0.7.0;\npragma experimental ABIEncoderV2;\n\nimport {\n    ISuperfluid,\n    ISuperfluidToken\n} from \"../interfaces/superfluid/ISuperfluid.sol\";\n\nimport {\n    IConstantFlowAgreementV1\n} from \"../interfaces/agreements/IConstantFlowAgreementV1.sol\";\n\nlibrary CFAv1Library {\n\n    struct InitData {\n        ISuperfluid host;\n        IConstantFlowAgreementV1 cfa;\n    }\n\n    //@dev for working with the constant flow agreement within solidity\n    //the first set of functions are each for callAgreement()\n    //the second set of functions are each for use in callAgreementWithContext()\n\n     //create flow without userData\n    function createFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //create flow with userData\n    function createFlow(\n        InitData storage cfaLibrary, \n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n    //update flow without userData\n    function updateFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //update flow with userData\n    function updateFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n    //delete flow\n    function deleteFlow(\n        InitData storage cfaLibrary,\n        address sender,\n        address receiver,\n        ISuperfluidToken token\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //delete flow with userData \n    function deleteFlow(\n        InitData storage cfaLibrary,\n        address sender,\n        address receiver,\n        ISuperfluidToken token,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n  //create flow with ctx \n    function createFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //create flow with ctx and userData\n    function createFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n\n  //update flow with ctx but without userData \n    function updateFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //update flow with ctx and userData\n    function updateFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n\n  //delete flow with ctx \n    function deleteFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address sender,\n        address receiver,\n        ISuperfluidToken token\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //delete flow with ctx and userData \n    function deleteFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address sender,\n        address receiver,\n        ISuperfluidToken token,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n}"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"../superfluid/ISuperAgreement.sol\";\nimport { ISuperfluidToken } from \"../superfluid/ISuperfluidToken.sol\";\n\n\n/**\n * @dev Superfluid's constant flow agreement interface\n *\n * @author Superfluid\n */\nabstract contract IConstantFlowAgreementV1 is ISuperAgreement {\n\n    /// @dev ISuperAgreement.agreementType implementation\n    function agreementType() external override pure returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\");\n    }\n\n    /**\n     * @dev Get the maximum flow rate allowed with the deposit\n     * @param deposit Deposit amount used for creating the flow\n     */\n    function getMaximumFlowRateFromDeposit(\n        ISuperfluidToken token,\n        uint256 deposit)\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @dev Get the deposit required for creating the flow\n     * @param flowRate Flow rate to be tested\n     * \n     * NOTE: \n     * - if calculated deposit (flowRate * liquidationPeriod) is less\n     *   than the minimum deposit, we use the minimum deposit otherwise\n     *   we use the calculated deposit\n     */\n    function getDepositRequiredForFlowRate(\n        ISuperfluidToken token,\n        int96 flowRate)\n        external view virtual\n        returns (uint256 deposit);\n\n    /**\n     * @dev Create a flow betwen sender and receiver.\n     * @param token Super token address.\n     * @param receiver Flow receiver address.\n     * @param flowRate New flow rate in amount per second.\n     *\n     * # App callbacks\n     *\n     * - AgreementCreated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - A deposit is taken as safety margin for the solvency agents.\n     * - A extra gas fee may be taken to pay for solvency agent liquidations.\n     */\n    function createFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev Update the flow rate between sender and receiver.\n     * @param token Super token address.\n     * @param receiver Flow receiver address.\n     * @param flowRate New flow rate in amount per second.\n     *\n     * # App callbacks\n     *\n     * - AgreementUpdated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - Only the flow sender may update the flow rate.\n     * - Even if the flow rate is zero, the flow is not deleted\n     * from the system.\n     * - Deposit amount will be adjusted accordingly.\n     * - No new gas fee is charged.\n     */\n    function updateFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n\n    /**\n     * @dev Get the flow data between `sender` and `receiver`.\n     * @param token Super token address.\n     * @param sender Flow receiver.\n     * @param receiver Flow sender.\n     * @return timestamp Timestamp of when the flow is updated.\n     * @return flowRate The flow rate.\n     * @return deposit The amount of deposit the flow.\n     * @return owedDeposit The amount of owed deposit of the flow.\n     */\n    function getFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @dev Get flow data using agreement ID\n     * @param token Super token address.\n     * @param agreementId The agreement ID.\n     * @return timestamp Timestamp of when the flow is updated.\n     * @return flowRate The flow rate.\n     * @return deposit The amount of deposit the flow.\n     * @return owedDeposit The amount of owed deposit of the flow.\n     */\n    function getFlowByID(\n       ISuperfluidToken token,\n       bytes32 agreementId\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @dev Get the aggregated flow info of the account\n     * @param token Super token address.\n    * @param account Account for the query.\n    */\n    function getAccountFlowInfo(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /**\n     * @dev Get the net flow rate of the account\n     * @param token Super token address.\n     * @param account Account for the query.\n     * @return flowRate Flow rate.\n     */\n    function getNetFlow(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @dev Delete the flow between sender and receiver\n     * @param token Super token address.\n     * @param ctx Context bytes.\n     * @param receiver Flow receiver address.\n     *\n     * # App callbacks\n     *\n     * - AgreementTerminated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - Both flow sender and receiver may delete the flow.\n     * - If Sender account is insolvent or in critical state, a solvency agent may\n     *   also terminate the agreement.\n     * - Gas fee may be returned to the sender.\n     */\n    function deleteFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n     /**\n      * @dev Flow updated event.\n      * @param token Super token address.\n      * @param sender Flow sender address.\n      * @param receiver Flow recipient address.\n      * @param flowRate Flow rate in amount per second for this flow.\n      * @param flowRate Total flow rate in amount per second for the sender.\n      * @param flowRate Total flow rate in amount per second for the receiver.\n      * @param userData The user provided data.\n      */\n     event FlowUpdated(\n         ISuperfluidToken indexed token,\n         address indexed sender,\n         address indexed receiver,\n         int96 flowRate,\n         int256 totalSenderFlowRate,\n         int256 totalReceiverFlowRate,\n         bytes userData\n     );\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperfluidToken  } from \"./ISuperfluidToken.sol\";\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\n\n\n/**\n * @dev Superfluid's Governance interface\n *\n * @author Superfluid\n */\ninterface ISuperfluidGovernance {\n\n    /**\n     * @dev Replace the current governance with a new governance\n     */\n    function replaceGovernance(\n        ISuperfluid host,\n        address newGov) external;\n\n    /**\n     * @dev Register a new agreement class\n     */\n    function registerAgreementClass(\n        ISuperfluid host,\n        address agreementClass) external;\n\n    /**\n     * @dev Update logics of the contracts\n     *\n     * NOTE:\n     * - Because they might have inter-dependencies, it is good to have one single function to update them all\n     */\n    function updateContracts(\n        ISuperfluid host,\n        address hostNewLogic,\n        address[] calldata agreementClassNewLogics,\n        address superTokenFactoryNewLogic\n    ) external;\n\n    /**\n     * @dev Update supertoken logic contract to the latest that is managed by the super token factory\n     */\n    function batchUpdateSuperTokenLogic(\n        ISuperfluid host,\n        ISuperToken[] calldata tokens) external;\n\n    /// @dev Get configuration as address value\n    function getConfigAsAddress(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (address value);\n\n    /// @dev Get configuration as uint256 value\n    function getConfigAsUint256(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (uint256 value);\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\n\n\n/**\n * @title Superfluid's token interface.\n *\n * @author Superfluid\n */\ninterface ISuperfluidToken {\n\n    /**************************************************************************\n     * Basic information\n     *************************************************************************/\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /**\n     * @dev Encoded liquidation type data mainly used for handling stack to deep errors\n     * \n     * Note:\n     * - version: 1 \n     * - liquidationType key:\n     *    - 0 = reward account receives reward (PIC period)\n     *    - 1 = liquidator account receives reward (Pleb period)\n     *    - 2 = liquidator account receives reward (Pirate period/bailout)\n     */\n    struct LiquidationTypeData {\n        uint256 version;\n        uint8 liquidationType;\n    }\n\n    /**************************************************************************\n     * Real-time balance functions\n     *************************************************************************/\n\n    /**\n    * @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n    * @param account for the query\n    * @param timestamp Time of balance\n    * @return availableBalance Real-time balance\n    * @return deposit Account deposit\n    * @return owedDeposit Account owed Deposit\n    */\n    function realtimeBalanceOf(\n       address account,\n       uint256 timestamp\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /// @dev realtimeBalanceOf with timestamp equals to block timestamp\n    function realtimeBalanceOfNow(\n       address account\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit,\n            uint256 timestamp);\n\n    /**\n    * @dev Check if one account is critical\n    * @param account Account check if is critical by a future time\n    * @param timestamp Time of balance\n    * @return isCritical\n    */\n    function isAccountCritical(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n    * @dev Check if one account is critical now\n    * @param account Account check if is critical by a future time\n    * @return isCritical\n    */\n    function isAccountCriticalNow(\n        address account\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n     * @dev Check if one account is solvent\n     * @param account Account check if is solvent by a future time\n     * @param timestamp Time of balance\n     * @return isSolvent\n     */\n    function isAccountSolvent(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n     * @dev Check if one account is solvent now\n     * @param account Account check if is solvent now\n     * @return isSolvent\n     */\n    function isAccountSolventNow(\n        address account\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n    * @dev Get a list of agreements that is active for the account\n    * @dev An active agreement is one that has state for the account\n    * @param account Account to query\n    * @return activeAgreements List of accounts that have non-zero states for the account\n    */\n    function getAccountActiveAgreements(address account)\n       external view\n       returns(ISuperAgreement[] memory activeAgreements);\n\n\n   /**************************************************************************\n    * Super Agreement hosting functions\n    *************************************************************************/\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function createAgreement(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n\n    /**\n     * @dev Agreement creation event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementCreated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Get data of the agreement\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @return data Data of the agreement\n     */\n    function getAgreementData(\n        address agreementClass,\n        bytes32 id,\n        uint dataLength\n    )\n        external view\n        returns(bytes32[] memory data);\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function updateAgreementData(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n\n    /**\n     * @dev Agreement creation event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementUpdated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Close the agreement\n     * @param id Agreement ID\n     */\n    function terminateAgreement(\n        bytes32 id,\n        uint dataLength\n    )\n        external;\n\n    /**\n     * @dev Agreement termination event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     */\n    event AgreementTerminated(\n        address indexed agreementClass,\n        bytes32 id\n    );\n\n    /**\n     * @dev Update agreement state slot\n     * @param account Account to be updated\n     *\n     * NOTE\n     * - To clear the storage out, provide zero-ed array of intended length\n     */\n    function updateAgreementStateSlot(\n        address account,\n        uint256 slotId,\n        bytes32[] calldata slotData\n    )\n        external;\n\n    /**\n     * @dev Agreement account state updated event\n     * @param agreementClass Contract address of the agreement\n     * @param account Account updated\n     * @param slotId slot id of the agreement state\n     */\n    event AgreementStateUpdated(\n        address indexed agreementClass,\n        address indexed account,\n        uint256 slotId\n    );\n\n    /**\n     * @dev Get data of the slot of the state of a agreement\n     * @param agreementClass Contract address of the agreement\n     * @param account Account to query\n     * @param slotId slot id of the state\n     * @param dataLength length of the state data\n     */\n    function getAgreementStateSlot(\n        address agreementClass,\n        address account,\n        uint256 slotId,\n        uint dataLength\n    )\n        external view\n        returns (bytes32[] memory slotData);\n\n    /**\n     * @dev Settle balance from an account by the agreement.\n     *      The agreement needs to make sure that the balance delta is balanced afterwards\n     * @param account Account to query.\n     * @param delta Amount of balance delta to be settled\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function settleBalance(\n        address account,\n        int256 delta\n    )\n        external;\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAccount Account that collect the reward\n     * @param rewardAmount Amount of liquidation reward\n     */\n    event AgreementLiquidated(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed rewardAccount,\n        uint256 rewardAmount\n    );\n\n    /**\n     * @dev System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\n     * @param bailoutAccount Account that bailout the penalty account\n     * @param bailoutAmount Amount of account bailout\n     */\n    event Bailout(\n        address indexed bailoutAccount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Agreement liquidation event (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Account of the agent that performed the liquidation.\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param bondAccount Account that collect the reward or bailout accounts\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of liquidation bailouot\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if bailout is equal to 0, then\n     *   - the bondAccount will get the rewardAmount,\n     *   - the penaltyAccount will pay for the rewardAmount.\n     * - if bailout is larger than 0, then\n     *   - the liquidatorAccount will get the rewardAmouont,\n     *   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n     *   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\n     */\n    event AgreementLiquidatedBy(\n        address liquidatorAccount,\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed bondAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Make liquidation payouts\n     * @param id Agreement ID\n     * @param liquidator Address of the executer of liquidation\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of account bailout needed\n     *\n     * NOTE:\n     * Liquidation rules:\n     *  - If a bailout is required (bailoutAmount > 0)\n     *     - the actual reward goes to the liquidator,\n     *     - while the reward account becomes the bailout account\n     *     - total bailout include: bailout amount + reward amount\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function makeLiquidationPayouts\n    (\n        bytes32 id,\n        address liquidator,\n        address penaltyAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    )\n        external;\n\n    /**\n     * @dev Agreement liquidation event v2 (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param targetAccount Account of the stream sender\n     * @param rewardAccount Account that collects the reward or bails out insolvent accounts\n     * @param rewardAmount The amount the reward recipient account balance should change by\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     * @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if the agreement is liquidated during the PIC period\n     *   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n     *   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the targetAccount is insolvent\n     *   - the liquidatorAccount will get the rewardAmount (single deposit)\n     *   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n     *   - the targetAccount will receive the bailoutAmount\n     */\n    event AgreementLiquidatedV2(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed liquidatorAccount,\n        address indexed targetAccount,\n        address rewardAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta,\n        bytes liquidationTypeData\n    );\n\n    /**\n     * @dev Make liquidation payouts (v2)\n     * @param id Agreement ID\n     * @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n     * @param targetAccount Account of the stream sender\n     * @param rewardAmount The amount the reward recepient account will receive\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     *\n     * - If a bailout is required (bailoutAmount > 0)\n     *   - the actual reward (single deposit) goes to the executor,\n     *   - while the reward account becomes the bailout account\n     *   - total bailout include: bailout amount + reward amount\n     *   - the targetAccount will be bailed out\n     * - If a bailout is not required\n     *   - the targetAccount will pay the rewardAmount\n     *   - the liquidator (reward account in PIC period) will receive the rewardAmount\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function makeLiquidationPayoutsV2\n    (\n        bytes32 id,\n        bytes memory liquidationTypeData,\n        address liquidatorAccount,\n        bool useDefaultRewardAccount,\n        address targetAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta\n    ) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * NOTE: solidity-coverage not supporting it\n     *************************************************************************/\n\n     /// @dev The msg.sender must be host contract\n     //modifier onlyHost() virtual;\n\n    /// @dev The msg.sender must be a listed agreement.\n    //modifier onlyAgreement() virtual;\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\n *\n * @author Superfluid\n */\ninterface ISuperToken is ISuperfluidToken, TokenInfo, IERC20, IERC777 {\n\n    /// @dev Initialize the contract\n    function initialize(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        string calldata n,\n        string calldata s\n    ) external;\n\n    /**************************************************************************\n    * TokenInfo & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: SuperToken always uses 18 decimals.\n     *\n     * Note: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view override(TokenInfo) returns (uint8);\n\n    /**************************************************************************\n    * ERC20 & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() external view override(IERC777, IERC20) returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address account) external view override(IERC777, IERC20) returns(uint256 balance);\n\n    /**************************************************************************\n    * ERC20\n    *************************************************************************/\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external override(IERC20) view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n     function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**************************************************************************\n    * ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For super token contracts, this value is 1 always\n     */\n    function granularity() external view override(IERC777) returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external override(IERC777) view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external override(IERC777) view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**************************************************************************\n     * SuperToken custom token functions\n     *************************************************************************/\n\n    /**\n     * @dev Mint new tokens for the account\n     *\n     * Modifiers:\n     *  - onlySelf\n     */\n    function selfMint(\n        address account,\n        uint256 amount,\n        bytes memory userData\n    ) external;\n\n   /**\n    * @dev Burn existing tokens for the account\n    *\n    * Modifiers:\n    *  - onlySelf\n    */\n   function selfBurn(\n       address account,\n       uint256 amount,\n       bytes memory userData\n   ) external;\n\n    /**************************************************************************\n     * SuperToken extra functions\n     *************************************************************************/\n\n    /**\n     * @dev Transfer all available balance from `msg.sender` to `recipient`\n     */\n    function transferAll(address recipient) external;\n\n    /**************************************************************************\n     * ERC20 wrapping\n     *************************************************************************/\n\n    /**\n     * @dev Return the underlying token contract\n     * @return tokenAddr Underlying token address\n     */\n    function getUnderlyingToken() external view returns(address tokenAddr);\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken.\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     *\n     * NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n     * function you should ´approve´ this contract\n     */\n    function upgrade(uint256 amount) external;\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken and transfer immediately\n     * @param to The account to received upgraded tokens\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     * @param data User data for the TokensRecipient callback\n     *\n     * NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n     * function you should ´approve´ this contract\n     */\n    function upgradeTo(address to, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Token upgrade event\n     * @param account Account where tokens are upgraded to\n     * @param amount Amount of tokens upgraded (in 18 decimals)\n     */\n    event TokenUpgraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**\n     * @dev Downgrade SuperToken to ERC20.\n     * @dev It will call transfer to send tokens\n     * @param amount Number of tokens to be downgraded\n     */\n    function downgrade(uint256 amount) external;\n\n    /**\n     * @dev Token downgrade event\n     * @param account Account whose tokens are upgraded\n     * @param amount Amount of tokens downgraded\n     */\n    event TokenDowngraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**************************************************************************\n    * Batch Operations\n    *************************************************************************/\n\n    /**\n    * @dev Perform ERC20 approve by host contract.\n    * @param account The account owner to be approved.\n    * @param spender The spender of account owner's funds.\n    * @param amount Number of tokens to be approved.\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationApprove(\n        address account,\n        address spender,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Perform ERC20 transfer from by host contract.\n    * @param account The account to spend sender's funds.\n    * @param spender  The account where the funds is sent from.\n    * @param recipient The recipient of thefunds.\n    * @param amount Number of tokens to be transferred.\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationTransferFrom(\n        address account,\n        address spender,\n        address recipient,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Upgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be upgraded (in 18 decimals)\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationUpgrade(address account, uint256 amount) external;\n\n    /**\n    * @dev Downgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be downgraded (in 18 decimals)\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationDowngrade(address account, uint256 amount) external;\n\n\n    /**************************************************************************\n    * Function modifiers for access control and parameter validations\n    *\n    * While they cannot be explicitly stated in function definitions, they are\n    * listed in function definition comments instead for clarity.\n    *\n    * NOTE: solidity-coverage not supporting it\n    *************************************************************************/\n\n    /// @dev The msg.sender must be the contract itself\n    //modifier onlySelf() virtual\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\nimport {\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../tokens/ERC20WithTokenInfo.sol\";\n\n\ninterface ISuperTokenFactory {\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /// @dev Initialize the contract\n    function initialize() external;\n\n    /**\n     * @dev Get the current super token logic used by the factory\n     */\n    function getSuperTokenLogic() external view returns (ISuperToken superToken);\n\n    /**\n     * @dev Upgradability modes\n     */\n    enum Upgradability {\n        /// Non upgradable super token, `host.updateSuperTokenLogic` will revert\n        NON_UPGRADABLE,\n        /// Upgradable through `host.updateSuperTokenLogic` operation\n        SEMI_UPGRADABLE,\n        /// Always using the latest super token logic\n        FULL_UPGRADABE\n    }\n\n    /**\n     * @dev Create new super token wrapper for the underlying ERC20 token\n     * @param underlyingToken Underlying ERC20 token\n     * @param underlyingDecimals Underlying token decimals\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     */\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @dev Create new super token wrapper for the underlying ERC20 token with extra token info\n     * @param underlyingToken Underlying ERC20 token\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     *\n     * NOTE:\n     * - It assumes token provide the .decimals() function\n     */\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external;\n\n    event SuperTokenLogicCreated(ISuperToken indexed tokenLogic);\n\n    event SuperTokenCreated(ISuperToken indexed token);\n\n    event CustomSuperTokenCreated(ISuperToken indexed token);\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\n\n/**\n * @title Superfluid's agreement interface.\n *\n * @author Superfluid\n */\ninterface ISuperAgreement {\n\n    /**\n     * @dev Initialize the agreement contract\n     */\n    function initialize() external;\n\n    /**\n     * @dev Get the type of the agreement class.\n     */\n    function agreementType() external view returns (bytes32);\n\n    /**\n     * @dev Calculate the real-time balance for the account of this agreement class.\n     * @param account Account the state belongs to\n     * @param time Future time used for the calculation.\n     * @return dynamicBalance Dynamic balance portion of real-time balance of this agreement.\n     * @return deposit Account deposit amount of this agreement.\n     * @return owedDeposit Account owed deposit amount of this agreement.\n     */\n    function realtimeBalanceOf(\n        ISuperfluidToken token,\n        address account,\n        uint256 time\n    )\n        external\n        view\n        returns (\n            int256 dynamicBalance,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\n\n/**\n * @title Superfluid's app interface.\n *\n * NOTE:\n * - Be fearful of the app jail, when the word permitted is used.\n *\n * @author Superfluid\n */\ninterface ISuperApp {\n\n    /**\n     * @dev Callback before a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * NOTE:\n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n     * @dev Callback after a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param cbdata The data returned from the before-hook callback.\n     * @param ctx The context data.\n     * @return newCtx The current context of the transaction.\n     *\n     * NOTE:\n     * - State changes is permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function afterAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Callback before a new agreement is updated.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * NOTE:\n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n\n    /**\n    * @dev Callback after a new agreement is updated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * NOTE:\n    * - State changes is permitted.\n    * - Only revert with a \"reason\" is permitted.\n    */\n    function afterAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n    * @dev Callback before a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param ctx The context data.\n    * @return cbdata A free format in memory data the app can use to pass\n    *          arbitary information to the after-hook callback.\n    *\n    * NOTE:\n    * - It will be invoked with `staticcall`, no state changes are permitted.\n    * - Revert is not permitted.\n    */\n    function beforeAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n    * @dev Callback after a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * NOTE:\n    * - State changes is permitted.\n    * - Revert is not permitted.\n    */\n    function afterAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\n/**\n * @dev Super app definitions library\n */\nlibrary SuperAppDefinitions {\n\n    /**************************************************************************\n    / App manifest config word\n    /**************************************************************************/\n\n    /*\n     * App level is a way to allow the app to whitelist what other app it can\n     * interact with (aka. composite app feature).\n     *\n     * For more details, refer to the technical paper of superfluid protocol.\n     */\n    uint256 constant internal APP_LEVEL_MASK = 0xFF;\n\n    // The app is at the final level, hence it doesn't want to interact with any other app\n    uint256 constant internal APP_LEVEL_FINAL = 1 << 0;\n\n    // The app is at the second level, it may interact with other final level apps if whitelisted\n    uint256 constant internal APP_LEVEL_SECOND = 1 << 1;\n\n    function getAppLevel(uint256 configWord) internal pure returns (uint8) {\n        return uint8(configWord & APP_LEVEL_MASK);\n    }\n\n    uint256 constant internal APP_JAIL_BIT = 1 << 15;\n    function isAppJailed(uint256 configWord) internal pure returns (bool) {\n        return (configWord & SuperAppDefinitions.APP_JAIL_BIT) > 0;\n    }\n\n    /**************************************************************************\n    / Callback implementation bit masks\n    /**************************************************************************/\n    uint256 constant internal AGREEMENT_CALLBACK_NOOP_BITMASKS = 0xFF << 32;\n    uint256 constant internal BEFORE_AGREEMENT_CREATED_NOOP = 1 << (32 + 0);\n    uint256 constant internal AFTER_AGREEMENT_CREATED_NOOP = 1 << (32 + 1);\n    uint256 constant internal BEFORE_AGREEMENT_UPDATED_NOOP = 1 << (32 + 2);\n    uint256 constant internal AFTER_AGREEMENT_UPDATED_NOOP = 1 << (32 + 3);\n    uint256 constant internal BEFORE_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 4);\n    uint256 constant internal AFTER_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 5);\n\n    /**************************************************************************\n    / App Jail Reasons\n    /**************************************************************************/\n\n    uint256 constant internal APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR = 1;\n    uint256 constant internal APP_RULE_NO_REGISTRATION_FOR_EOA = 2;\n    uint256 constant internal APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK = 10;\n    uint256 constant internal APP_RULE_NO_CRITICAL_SENDER_ACCOUNT = 11;\n    uint256 constant internal APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT = 12;\n    uint256 constant internal APP_RULE_CTX_IS_READONLY = 20;\n    uint256 constant internal APP_RULE_CTX_IS_NOT_CLEAN = 21;\n    uint256 constant internal APP_RULE_CTX_IS_MALFORMATED = 22;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED = 30;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_JAILED = 31;\n    uint256 constant internal APP_RULE_MAX_APP_LEVEL_REACHED = 40;\n}\n\n/**\n * @dev Context definitions library\n */\nlibrary ContextDefinitions {\n\n    /**************************************************************************\n    / Call info\n    /**************************************************************************/\n\n    // app level\n    uint256 constant internal CALL_INFO_APP_LEVEL_MASK = 0xFF;\n\n    // call type\n    uint256 constant internal CALL_INFO_CALL_TYPE_SHIFT = 32;\n    uint256 constant internal CALL_INFO_CALL_TYPE_MASK = 0xF << CALL_INFO_CALL_TYPE_SHIFT;\n    uint8 constant internal CALL_INFO_CALL_TYPE_AGREEMENT = 1;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_ACTION = 2;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_CALLBACK = 3;\n\n    function decodeCallInfo(uint256 callInfo)\n        internal pure\n        returns (uint8 appLevel, uint8 callType)\n    {\n        appLevel = uint8(callInfo & CALL_INFO_APP_LEVEL_MASK);\n        callType = uint8((callInfo & CALL_INFO_CALL_TYPE_MASK) >> CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n    function encodeCallInfo(uint8 appLevel, uint8 callType)\n        internal pure\n        returns (uint256 callInfo)\n    {\n        return uint256(appLevel) | (uint256(callType) << CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n}\n\n/**\n * @dev Batch operation library\n */\nlibrary BatchOperation {\n    /**\n     * @dev ERC20.approve batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationApprove(\n     *     abi.decode(data, (address spender, uint256 amount))\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_APPROVE = 1;\n    /**\n     * @dev ERC20.transferFrom batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationTransferFrom(\n     *     abi.decode(data, (address sender, address recipient, uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_TRANSFER_FROM = 2;\n    /**\n     * @dev SuperToken.upgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationUpgrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_UPGRADE = 1 + 100;\n    /**\n     * @dev SuperToken.downgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationDowngrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_DOWNGRADE = 2 + 100;\n    /**\n     * @dev Superfluid.callAgreement batch operation type\n     *\n     * Call spec:\n     * callAgreement(\n     *     ISuperAgreement(target)),\n     *     abi.decode(data, (bytes calldata, bytes userdata)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT = 1 + 200;\n    /**\n     * @dev Superfluid.callAppAction batch operation type\n     *\n     * Call spec:\n     * callAppAction(\n     *     ISuperApp(target)),\n     *     data\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION = 2 + 200;\n}\n\nlibrary SuperfluidGovernanceConfigs {\n\n    bytes32 constant internal SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.rewardAddress\");\n\n    bytes32 constant internal CFAv1_LIQUIDATION_PERIOD_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\");\n\n    bytes32 constant internal SUPERTOKEN_MINIMUM_DEPOSIT_KEY = \n        keccak256(\"org.superfluid-finance.superfluid.superTokenMinimumDeposit\");\n\n    function getTrustedForwarderConfigKey(address forwarder) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.trustedForwarder\",\n            forwarder));\n    }\n\n    function getAppRegistrationConfigKey(address deployer, string memory registrationKey) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\",\n            deployer,\n            registrationKey));\n    }\n\n    function getAppFactoryConfigKey(address factory) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.factory\",\n            factory));\n    }\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.5.0;\n\n/**\n * @dev ERC20 token info interface\n *\n * NOTE: ERC20 standard interface does not specify these functions, but\n * often the token implementations have them.\n *\n */\ninterface TokenInfo {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.5.0;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { TokenInfo } from \"./TokenInfo.sol\";\n\n\n/**\n *\n * @dev Interface for ERC20 token with token info\n *\n * NOTE: Using abstract contract instead of interfaces because old solidity\n * does not support interface inheriting other interfaces\n * solhint-disable-next-line no-empty-blocks\n *\n */\n// solhint-disable-next-line no-empty-blocks\nabstract contract ERC20WithTokenInfo is IERC20, TokenInfo {}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      },
      "contracts/interfaces/ControllerFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\n\r\ncontract ControllerFactory {\r\n\r\n    constructor () public {\r\n        \r\n    }\r\n\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "IERC777": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "AuthorizedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Burned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "RevokedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Sent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "authorizeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultOperators",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "granularity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "isOperatorFor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorSend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "revokeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "send",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "authorizeOperator(address)": "959b8c3f",
              "balanceOf(address)": "70a08231",
              "burn(uint256,bytes)": "fe9d9303",
              "defaultOperators()": "06e48538",
              "granularity()": "556f0dc7",
              "isOperatorFor(address,address)": "d95b6371",
              "name()": "06fdde03",
              "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
              "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
              "revokeOperator(address)": "fad8b32a",
              "send(address,uint256,bytes)": "9bd9bbc6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "CFAv1Library": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806f2298a50e997082caa10dc49a510cbc56531ac5cfbf9a232c5a9bea290b6764736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH16 0x2298A50E997082CAA10DC49A510CBC56 MSTORE8 BYTE 0xC5 0xCF 0xBF SWAP11 0x23 0x2C GAS SWAP12 0xEA 0x29 SIGNEXTEND PUSH8 0x64736F6C63430008 STOP STOP CALLER ",
              "sourceMap": "296:7497:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806f2298a50e997082caa10dc49a510cbc56531ac5cfbf9a232c5a9bea290b6764736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH16 0x2298A50E997082CAA10DC49A510CBC56 MSTORE8 BYTE 0xC5 0xCF 0xBF SWAP11 0x23 0x2C GAS SWAP12 0xEA 0x29 SIGNEXTEND PUSH8 0x64736F6C63430008 STOP STOP CALLER ",
              "sourceMap": "296:7497:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":\"CFAv1Library\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "IConstantFlowAgreementV1": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "totalSenderFlowRate",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "totalReceiverFlowRate",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "FlowUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "agreementType",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "createFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "deleteFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountFlowInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "name": "getDepositRequiredForFlowRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "getFlow",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                }
              ],
              "name": "getFlowByID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                }
              ],
              "name": "getMaximumFlowRateFromDeposit",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getNetFlow",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "dynamicBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "updateFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "agreementType()": "7730599e",
              "createFlow(address,address,int96,bytes)": "62fc305e",
              "deleteFlow(address,address,address,bytes)": "b4b333c6",
              "getAccountFlowInfo(address,address)": "0f1ac495",
              "getDepositRequiredForFlowRate(address,int96)": "8d997f6e",
              "getFlow(address,address,address)": "e6a1e888",
              "getFlowByID(address,bytes32)": "aabd2668",
              "getMaximumFlowRateFromDeposit(address,uint256)": "0602f7db",
              "getNetFlow(address,address)": "e8e7e2d1",
              "initialize()": "8129fc1c",
              "realtimeBalanceOf(address,address,uint256)": "9b2e48bc",
              "updateFlow(address,address,int96,bytes)": "50209a62"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalSenderFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalReceiverFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"FlowUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"name\":\"getDepositRequiredForFlowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"}],\"name\":\"getFlowByID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getMaximumFlowRateFromDeposit\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNetFlow\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid's constant flow agreement interface\",\"events\":{\"FlowUpdated(address,address,address,int96,int256,int256,bytes)\":{\"details\":\"Flow updated event.\",\"params\":{\"flowRate\":\"Total flow rate in amount per second for the receiver.\",\"receiver\":\"Flow recipient address.\",\"sender\":\"Flow sender address.\",\"token\":\"Super token address.\",\"userData\":\"The user provided data.\"}}},\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"ISuperAgreement.agreementType implementation\"},\"createFlow(address,address,int96,bytes)\":{\"details\":\"Create a flow betwen sender and receiver.\",\"params\":{\"flowRate\":\"New flow rate in amount per second. # App callbacks - AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - A deposit is taken as safety margin for the solvency agents. - A extra gas fee may be taken to pay for solvency agent liquidations.\",\"receiver\":\"Flow receiver address.\",\"token\":\"Super token address.\"}},\"deleteFlow(address,address,address,bytes)\":{\"details\":\"Delete the flow between sender and receiver\",\"params\":{\"ctx\":\"Context bytes.\",\"receiver\":\"Flow receiver address. # App callbacks - AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - Both flow sender and receiver may delete the flow. - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement. - Gas fee may be returned to the sender.\",\"token\":\"Super token address.\"}},\"getAccountFlowInfo(address,address)\":{\"details\":\"Get the aggregated flow info of the account\",\"params\":{\"account\":\"Account for the query.\",\"token\":\"Super token address.\"}},\"getDepositRequiredForFlowRate(address,int96)\":{\"details\":\"Get the deposit required for creating the flow\",\"params\":{\"flowRate\":\"Flow rate to be tested  NOTE:  - if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit\"}},\"getFlow(address,address,address)\":{\"details\":\"Get the flow data between `sender` and `receiver`.\",\"params\":{\"receiver\":\"Flow sender.\",\"sender\":\"Flow receiver.\",\"token\":\"Super token address.\"},\"returns\":{\"deposit\":\"The amount of deposit the flow.\",\"flowRate\":\"The flow rate.\",\"owedDeposit\":\"The amount of owed deposit of the flow.\",\"timestamp\":\"Timestamp of when the flow is updated.\"}},\"getFlowByID(address,bytes32)\":{\"details\":\"Get flow data using agreement ID\",\"params\":{\"agreementId\":\"The agreement ID.\",\"token\":\"Super token address.\"},\"returns\":{\"deposit\":\"The amount of deposit the flow.\",\"flowRate\":\"The flow rate.\",\"owedDeposit\":\"The amount of owed deposit of the flow.\",\"timestamp\":\"Timestamp of when the flow is updated.\"}},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"details\":\"Get the maximum flow rate allowed with the deposit\",\"params\":{\"deposit\":\"Deposit amount used for creating the flow\"}},\"getNetFlow(address,address)\":{\"details\":\"Get the net flow rate of the account\",\"params\":{\"account\":\"Account for the query.\",\"token\":\"Super token address.\"},\"returns\":{\"flowRate\":\"Flow rate.\"}},\"initialize()\":{\"details\":\"Initialize the agreement contract\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class.\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Future time used for the calculation.\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement.\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement.\",\"owedDeposit\":\"Account owed deposit amount of this agreement.\"}},\"updateFlow(address,address,int96,bytes)\":{\"details\":\"Update the flow rate between sender and receiver.\",\"params\":{\"flowRate\":\"New flow rate in amount per second. # App callbacks - AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - Only the flow sender may update the flow rate. - Even if the flow rate is zero, the flow is not deleted from the system. - Deposit amount will be adjusted accordingly. - No new gas fee is charged.\",\"receiver\":\"Flow receiver address.\",\"token\":\"Super token address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":\"IConstantFlowAgreementV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "BatchOperation": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cac75ed5e89ae012b7b0688e06283ff0df8a26e66deb6ceb75d5fdc572ed2f1264736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0x5E 0xD5 0xE8 SWAP11 0xE0 SLT 0xB7 0xB0 PUSH9 0x8E06283FF0DF8A26E6 PUSH14 0xEB6CEB75D5FDC572ED2F1264736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "4204:1701:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cac75ed5e89ae012b7b0688e06283ff0df8a26e66deb6ceb75d5fdc572ed2f1264736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0x5E 0xD5 0xE8 SWAP11 0xE0 SLT 0xB7 0xB0 PUSH9 0x8E06283FF0DF8A26E6 PUSH14 0xEB6CEB75D5FDC572ED2F1264736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "4204:1701:6:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Batch operation library\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"OPERATION_TYPE_ERC20_APPROVE\":{\"details\":\"ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )\"},\"OPERATION_TYPE_ERC20_TRANSFER_FROM\":{\"details\":\"ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT\":{\"details\":\"Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION\":{\"details\":\"Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )\"},\"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE\":{\"details\":\"SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )\"},\"OPERATION_TYPE_SUPERTOKEN_UPGRADE\":{\"details\":\"SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"BatchOperation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "ContextDefinitions": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c644bf29ca15905ba342bb2af956b26a8d1bc414810191c1d3185675861a39b964736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIFFICULTY 0xBF 0x29 0xCA ISZERO SWAP1 JUMPDEST LOG3 TIMESTAMP 0xBB 0x2A 0xF9 JUMP 0xB2 PUSH11 0x8D1BC414810191C1D31856 PUSH22 0x861A39B964736F6C6343000800003300000000000000 ",
              "sourceMap": "3006:1156:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c644bf29ca15905ba342bb2af956b26a8d1bc414810191c1d3185675861a39b964736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIFFICULTY 0xBF 0x29 0xCA ISZERO SWAP1 JUMPDEST LOG3 TIMESTAMP 0xBB 0x2A 0xF9 JUMP 0xB2 PUSH11 0x8D1BC414810191C1D31856 PUSH22 0x861A39B964736F6C6343000800003300000000000000 ",
              "sourceMap": "3006:1156:6:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Context definitions library\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"ContextDefinitions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "SuperAppDefinitions": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b420f502b708fb818243141715c576a98035b8b914fde003c717aebcad76048a64736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 KECCAK256 CREATE2 MUL 0xB7 ADDMOD 0xFB DUP2 DUP3 NUMBER EQ OR ISZERO 0xC5 PUSH23 0xA98035B8B914FDE003C717AEBCAD76048A64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "108:2852:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b420f502b708fb818243141715c576a98035b8b914fde003c717aebcad76048a64736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 KECCAK256 CREATE2 MUL 0xB7 ADDMOD 0xFB DUP2 DUP3 NUMBER EQ OR ISZERO 0xC5 PUSH23 0xA98035B8B914FDE003C717AEBCAD76048A64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "108:2852:6:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Super app definitions library\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperAppDefinitions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "SuperfluidGovernanceConfigs": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b7283b9d24eaad03264efc958cf3d1866a09e64158dc7c4001833f1ac07dd0264736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x83B9D24EAAD03264EFC958CF3D1866A09E6415 DUP14 0xC7 0xC4 STOP XOR CALLER CALL 0xAC SMOD 0xDD MUL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "5907:1252:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b7283b9d24eaad03264efc958cf3d1866a09e64158dc7c4001833f1ac07dd0264736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x83B9D24EAAD03264EFC958CF3D1866A09E6415 DUP14 0xC7 0xC4 STOP XOR CALLER CALL 0xAC SMOD 0xDD MUL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "5907:1252:6:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperfluidGovernanceConfigs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "ISuperAgreement": {
          "abi": [
            {
              "inputs": [],
              "name": "agreementType",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "dynamicBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "agreementType()": "7730599e",
              "initialize()": "8129fc1c",
              "realtimeBalanceOf(address,address,uint256)": "9b2e48bc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class.\"},\"initialize()\":{\"details\":\"Initialize the agreement contract\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class.\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Future time used for the calculation.\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement.\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement.\",\"owedDeposit\":\"Account owed deposit amount of this agreement.\"}}},\"title\":\"Superfluid's agreement interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":\"ISuperAgreement\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "ISuperApp": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementCreated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementTerminated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementUpdated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementCreated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementTerminated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementUpdated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": "d86ed3e5",
              "afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": "53c11f99",
              "afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": "230dbd29",
              "beforeAgreementCreated(address,address,bytes32,bytes,bytes)": "30d9c915",
              "beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": "5f9e7d77",
              "beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": "884d1f40"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Revert is not permitted.\"}},\"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"beforeAgreementCreated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.\"}},\"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\"}}},\"title\":\"Superfluid's app interface. NOTE: - Be fearful of the app jail, when the word permitted is used.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":\"ISuperApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "ISuperToken": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bondAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidatedBy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                }
              ],
              "name": "AgreementLiquidatedV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                }
              ],
              "name": "AgreementStateUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "AgreementTerminated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "AuthorizedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bailoutAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "Bailout",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Burned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "RevokedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Sent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenDowngraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "authorizeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "createAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultOperators",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "downgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountActiveAgreements",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "activeAgreements",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementData",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementStateSlot",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getUnderlyingToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "granularity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "underlyingDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "n",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "s",
                  "type": "string"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountCritical",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountCriticalNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountSolvent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountSolventNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "isOperatorFor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "liquidator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "makeLiquidationPayouts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "useDefaultRewardAccount",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                }
              ],
              "name": "makeLiquidationPayoutsV2",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationApprove",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationDowngrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationUpgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorSend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "realtimeBalanceOfNow",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "revokeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "selfBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "selfMint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "send",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "settleBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "terminateAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "transferAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementData",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementStateSlot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "authorizeOperator(address)": "959b8c3f",
              "balanceOf(address)": "70a08231",
              "burn(uint256,bytes)": "fe9d9303",
              "createAgreement(bytes32,bytes32[])": "12a6a3f8",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "defaultOperators()": "06e48538",
              "downgrade(uint256)": "11bcc81e",
              "getAccountActiveAgreements(address)": "386fa221",
              "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
              "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
              "getHost()": "20bc4425",
              "getUnderlyingToken()": "ee719bc8",
              "granularity()": "556f0dc7",
              "increaseAllowance(address,uint256)": "39509351",
              "initialize(address,uint8,string,string)": "42fe0980",
              "isAccountCritical(address,uint256)": "d9d078d6",
              "isAccountCriticalNow(address)": "79359f6f",
              "isAccountSolvent(address,uint256)": "b84cdd4a",
              "isAccountSolventNow(address)": "bb0d196e",
              "isOperatorFor(address,address)": "d95b6371",
              "makeLiquidationPayouts(bytes32,address,address,uint256,uint256)": "8ddd1c0f",
              "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
              "name()": "06fdde03",
              "operationApprove(address,address,uint256)": "62aa5287",
              "operationDowngrade(address,uint256)": "245887fc",
              "operationTransferFrom(address,address,address,uint256)": "16d055d6",
              "operationUpgrade(address,uint256)": "ca789464",
              "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
              "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
              "realtimeBalanceOf(address,uint256)": "eb3537cc",
              "realtimeBalanceOfNow(address)": "2ec8eec7",
              "revokeOperator(address)": "fad8b32a",
              "selfBurn(address,uint256,bytes)": "9d876741",
              "selfMint(address,uint256,bytes)": "c68d4283",
              "send(address,uint256,bytes)": "9bd9bbc6",
              "settleBalance(address,int256)": "cf97256d",
              "symbol()": "95d89b41",
              "terminateAgreement(bytes32,uint256)": "27048397",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAll(address)": "a3a7e7f3",
              "transferFrom(address,address,uint256)": "23b872dd",
              "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
              "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
              "upgrade(uint256)": "45977d03",
              "upgradeTo(address,uint256,bytes)": "5b9d09cc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"makeLiquidationPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are upgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: SuperToken always uses 18 decimals. Note: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"Get a list of agreements that is active for the accountAn active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of a agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For super token contracts, this value is 1 always\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"Check if one account is critical\",\"params\":{\"account\":\"Account check if is critical by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"Check if one account is critical now\",\"params\":{\"account\":\"Account check if is critical by a future time\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"Check if one account is solvent\",\"params\":{\"account\":\"Account check if is solvent by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isAccountSolventNow(address)\":{\"details\":\"Check if one account is solvent now\",\"params\":{\"account\":\"Account check if is solvent now\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayouts(bytes32,address,address,uint256,uint256)\":{\"details\":\"Make liquidation payouts\",\"params\":{\"bailoutAmount\":\"Amount of account bailout needed NOTE: Liquidation rules:  - If a bailout is required (bailoutAmount > 0)     - the actual reward goes to the liquidator,     - while the reward account becomes the bailout account     - total bailout include: bailout amount + reward amount Modifiers:  - onlyAgreement\",\"id\":\"Agreement ID\",\"liquidator\":\"Address of the executer of liquidation\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recepient account will receive\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount Modifiers:  - onlyAgreement\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved. Modifiers:  - onlyHost\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals) Modifiers:  - onlyHost\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transfer from by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred. Modifiers:  - onlyHost\",\"recipient\":\"The recipient of thefunds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals) Modifiers:  - onlyHost\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account Modifiers:  - onlySelf\"},\"selfMint(address,uint256,bytes)\":{\"details\":\"Mint new tokens for the account Modifiers:  - onlySelf\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"settleBalance(address,int256)\":{\"details\":\"Settle balance from an account by the agreement.      The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled Modifiers:  - onlyAgreement\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated NOTE - To clear the storage out, provide zero-ed array of intended length\"}},\"upgrade(uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals) NOTE: It will use \\u00b4transferFrom\\u00b4 to get tokens. Before calling this function you should \\u00b4approve\\u00b4 this contract\"}},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"data\":\"User data for the TokensRecipient callback NOTE: It will use \\u00b4transferFrom\\u00b4 to get tokens. Before calling this function you should \\u00b4approve\\u00b4 this contract\",\"to\":\"The account to received upgraded tokens\"}}},\"title\":\"Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "ISuperTokenFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "CustomSuperTokenCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SuperTokenCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "tokenLogic",
                  "type": "address"
                }
              ],
              "name": "SuperTokenLogicCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ERC20WithTokenInfo",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "enum ISuperTokenFactory.Upgradability",
                  "name": "upgradability",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "name": "createERC20Wrapper",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "underlyingDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "enum ISuperTokenFactory.Upgradability",
                  "name": "upgradability",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "name": "createERC20Wrapper",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenLogic",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "customSuperTokenProxy",
                  "type": "address"
                }
              ],
              "name": "initializeCustomSuperToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createERC20Wrapper(address,uint8,string,string)": "431f1481",
              "createERC20Wrapper(address,uint8,uint8,string,string)": "a6d0c534",
              "getHost()": "20bc4425",
              "getSuperTokenLogic()": "9470a5b2",
              "initialize()": "8129fc1c",
              "initializeCustomSuperToken(address)": "d412d344"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createERC20Wrapper(address,uint8,string,string)\":{\"details\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\",\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol NOTE: - It assumes token provide the .decimals() function\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"details\":\"Create new super token wrapper for the underlying ERC20 token\",\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getSuperTokenLogic()\":{\"details\":\"Get the current super token logic used by the factory\"},\"initialize()\":{\"details\":\"Initialize the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":\"ISuperTokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "ISuperfluid": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "AgreementClassRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "AgreementClassUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "AppRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "oldGov",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "GovernanceReplaced",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reason",
                  "type": "uint256"
                }
              ],
              "name": "Jail",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "contract ISuperTokenFactory",
                  "name": "newFactory",
                  "type": "address"
                }
              ],
              "name": "SuperTokenFactoryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "SuperTokenLogicUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "addToAgreementClassesBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "newBitmap",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "targetApp",
                  "type": "address"
                }
              ],
              "name": "allowCompositeApp",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsedDelta",
                  "type": "int256"
                }
              ],
              "name": "appCallbackPop",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "appAllowanceGranted",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsed",
                  "type": "int256"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "appAllowanceToken",
                  "type": "address"
                }
              ],
              "name": "appCallbackPush",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "appCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operationType",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Operation[]",
                  "name": "operations",
                  "type": "tuple[]"
                }
              ],
              "name": "batchCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "callAgreement",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAgreementWithContext",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ],
              "name": "callAppAction",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppActionWithContext",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isTermination",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppAfterCallback",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "appCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isTermination",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppBeforeCallback",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "appAllowanceWantedMore",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsedDelta",
                  "type": "int256"
                }
              ],
              "name": "ctxUseAllowance",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "decodeCtx",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "appLevel",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "callType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "msgSender",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "agreementSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "appAllowanceGranted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "appAllowanceWanted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "appAllowanceUsed",
                      "type": "int256"
                    },
                    {
                      "internalType": "address",
                      "name": "appAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "contract ISuperfluidToken",
                      "name": "appAllowanceToken",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Context",
                  "name": "context",
                  "type": "tuple"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operationType",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Operation[]",
                  "name": "operations",
                  "type": "tuple[]"
                }
              ],
              "name": "forwardBatchCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "getAgreementClass",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "getAppLevel",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "appLevel",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "getAppManifest",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSuperApp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isJailed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "noopMask",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGovernance",
              "outputs": [
                {
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "governance",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenFactory",
              "outputs": [
                {
                  "internalType": "contract ISuperTokenFactory",
                  "name": "factory",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenFactoryLogic",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "logic",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "name": "isAgreementClassListed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "yes",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "isAgreementTypeListed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "yes",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "isApp",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "isAppJailed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isJail",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "targetApp",
                  "type": "address"
                }
              ],
              "name": "isCompositeAppAllowed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isAppAllowed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "isCtxValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "reason",
                  "type": "uint256"
                }
              ],
              "name": "jailApp",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                }
              ],
              "name": "mapAgreementClasses",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "agreementClasses",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClassLogic",
                  "type": "address"
                }
              ],
              "name": "registerAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                }
              ],
              "name": "registerApp",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                }
              ],
              "name": "registerAppByFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "registrationKey",
                  "type": "string"
                }
              ],
              "name": "registerAppWithKey",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "removeFromAgreementClassesBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "newBitmap",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "replaceGovernance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClassLogic",
                  "type": "address"
                }
              ],
              "name": "updateAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperTokenFactory",
                  "name": "newFactory",
                  "type": "address"
                }
              ],
              "name": "updateSuperTokenFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "updateSuperTokenLogic",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToAgreementClassesBitmap(uint256,bytes32)": "bced3ddc",
              "allowCompositeApp(address)": "57121e0c",
              "appCallbackPop(bytes,int256)": "989b0c3e",
              "appCallbackPush(bytes,address,uint256,int256,address)": "768fabb0",
              "batchCall((uint32,address,bytes)[])": "6ad3ca7d",
              "callAgreement(address,bytes,bytes)": "39255d5b",
              "callAgreementWithContext(address,bytes,bytes,bytes)": "4329d293",
              "callAppAction(address,bytes)": "1e855cf3",
              "callAppActionWithContext(address,bytes,bytes)": "ba48b5f8",
              "callAppAfterCallback(address,bytes,bool,bytes)": "1e6d0a84",
              "callAppBeforeCallback(address,bytes,bool,bytes)": "74041e02",
              "ctxUseAllowance(bytes,uint256,int256)": "0792f20a",
              "decodeCtx(bytes)": "3f6c923a",
              "forwardBatchCall((uint32,address,bytes)[])": "670e77e3",
              "getAgreementClass(bytes32)": "b6d200de",
              "getAppLevel(address)": "13349046",
              "getAppManifest(address)": "f9f522f4",
              "getGovernance()": "289b3c0d",
              "getSuperTokenFactory()": "731aed6e",
              "getSuperTokenFactoryLogic()": "f2e55caf",
              "isAgreementClassListed(address)": "8ca48484",
              "isAgreementTypeListed(bytes32)": "e8dccb7d",
              "isApp(address)": "3ca3ad4e",
              "isAppJailed(address)": "6b4f3335",
              "isCompositeAppAllowed(address,address)": "bb84cfa1",
              "isCtxValid(bytes)": "bf428734",
              "jailApp(bytes,address,uint256)": "b724211e",
              "mapAgreementClasses(uint256)": "c56a069d",
              "registerAgreementClass(address)": "15a024e1",
              "registerApp(uint256)": "ad3915c8",
              "registerAppByFactory(address,uint256)": "f3733052",
              "registerAppWithKey(uint256,string)": "bd1c448b",
              "removeFromAgreementClassesBitmap(uint256,bytes32)": "a5dbbbcd",
              "replaceGovernance(address)": "7283100c",
              "updateAgreementClass(address)": "06cecba8",
              "updateSuperTokenFactory(address)": "54fbc493",
              "updateSuperTokenLogic(address)": "787afde7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"AppRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"oldGov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"GovernanceReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"Jail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"SuperTokenFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"addToAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"allowCompositeApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsedDelta\",\"type\":\"int256\"}],\"name\":\"appCallbackPop\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceGranted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsed\",\"type\":\"int256\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appAllowanceToken\",\"type\":\"address\"}],\"name\":\"appCallbackPush\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"appCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"batchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"callAgreement\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAgreementWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"callAppAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppActionWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppAfterCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"appCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppBeforeCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceWantedMore\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsedDelta\",\"type\":\"int256\"}],\"name\":\"ctxUseAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decodeCtx\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"appLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"callType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"agreementSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceGranted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceWanted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsed\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"appAddress\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appAllowanceToken\",\"type\":\"address\"}],\"internalType\":\"struct ISuperfluid.Context\",\"name\":\"context\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"forwardBatchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"getAgreementClass\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"appLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppManifest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuperApp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isJailed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"noopMask\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactory\",\"outputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactoryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"isAgreementClassListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"isAgreementTypeListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isApp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isAppJailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isJail\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"isCompositeAppAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAppAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"isCtxValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"jailApp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"}],\"name\":\"mapAgreementClasses\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"agreementClasses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerAppByFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registrationKey\",\"type\":\"string\"}],\"name\":\"registerAppWithKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"removeFromAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"updateAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateSuperTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"updateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid host interface. It is the central contract of the system where super agreement, super app and super token features are connected together. The superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.\",\"events\":{\"AppRegistered(address)\":{\"details\":\"App registered event\"},\"Jail(address,uint256)\":{\"details\":\"Jail event for the app\"}},\"kind\":\"dev\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"Create a new bitmask by adding a agreement class to it.\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"allowCompositeApp(address)\":{\"details\":\"White-list the target app for app composition for the source app (msg.sender)\",\"params\":{\"targetApp\":\"The taget super app address\"}},\"batchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function\",\"params\":{\"operations\":\"Array of batch operations.\"}},\"callAgreement(address,bytes,bytes)\":{\"details\":\"Call agreement function\",\"params\":{\"callData\":\"The contextual call data with placeholder ctx\",\"userData\":\"Extra user data being sent to the super app callbacks\"}},\"callAppAction(address,bytes)\":{\"details\":\"Call app action\",\"params\":{\"callData\":\"The contextual call data. NOTE: See callAgreement about contextual call data.\"}},\"forwardBatchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function for trusted forwarders (EIP-2771)\",\"params\":{\"operations\":\"Array of batch operations.\"}},\"getAgreementClass(bytes32)\":{\"details\":\"Get agreement class\"},\"getAppLevel(address)\":{\"details\":\"Query app level\",\"params\":{\"app\":\"Super app address\"}},\"getAppManifest(address)\":{\"details\":\"Get the manifest of the super app\",\"params\":{\"app\":\"Super app address\"}},\"getGovernance()\":{\"details\":\"Get the current governace of the Superfluid host\"},\"getSuperTokenFactory()\":{\"details\":\"Get the super token factory\",\"returns\":{\"factory\":\"The factory\"}},\"getSuperTokenFactoryLogic()\":{\"details\":\"Get the super token factory logic (applicable to upgradable deployment)\",\"returns\":{\"logic\":\"The factory logic\"}},\"isAgreementClassListed(address)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isAgreementTypeListed(bytes32)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isApp(address)\":{\"details\":\"Query if the app is registered\",\"params\":{\"app\":\"Super app address\"}},\"isAppJailed(address)\":{\"details\":\"Query if the app has been jailed\",\"params\":{\"app\":\"Super app address\"}},\"isCompositeAppAllowed(address,address)\":{\"details\":\"Query if source app  is allowed to call the target app as downstream app.\",\"params\":{\"app\":\"Super app address\",\"targetApp\":\"The taget super app address\"}},\"mapAgreementClasses(uint256)\":{\"details\":\"Map list of the agreement classes using a bitmap\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"registerAgreementClass(address)\":{\"details\":\"Register a new agreement class to the system\",\"params\":{\"agreementClassLogic\":\"INitial agreement class code Modifiers:  - onlyGovernance\"}},\"registerApp(uint256)\":{\"details\":\"Message sender declares it as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions`\"}},\"registerAppByFactory(address,uint256)\":{\"details\":\"Message sender declares app as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions` NOTE: only factory contracts authorized by governance can register super apps\"}},\"registerAppWithKey(uint256,string)\":{\"details\":\"Message sender declares it as a super app, using a registration key\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions`\",\"registrationKey\":\"The registration key issued by the governance\"}},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"Create a new bitmask by removing a agreement class from it.\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"replaceGovernance(address)\":{\"details\":\"Replace the current governance with a new one\"},\"updateAgreementClass(address)\":{\"details\":\"Update code of an agreement class\",\"params\":{\"agreementClassLogic\":\"New code for the agreement class Modifiers:  - onlyGovernance\"}},\"updateSuperTokenFactory(address)\":{\"details\":\"Update super token factory\",\"params\":{\"newFactory\":\"New factory logic\"}},\"updateSuperTokenLogic(address)\":{\"details\":\"Update the super token logic to the latest NOTE: - Refer toISuperTokenFactory.Upgradability for expected behaviours.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":\"ISuperfluid\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "ISuperfluidGovernance": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperToken[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "batchUpdateSuperTokenLogic",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "getConfigAsAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "value",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "getConfigAsUint256",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "name": "registerAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "replaceGovernance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "hostNewLogic",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "agreementClassNewLogics",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "superTokenFactoryNewLogic",
                  "type": "address"
                }
              ],
              "name": "updateContracts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "batchUpdateSuperTokenLogic(address,address[])": "42148deb",
              "getConfigAsAddress(address,address,bytes32)": "8369a0f1",
              "getConfigAsUint256(address,address,bytes32)": "80f70cba",
              "registerAgreementClass(address,address)": "cadf8f85",
              "replaceGovernance(address,address)": "44864b25",
              "updateContracts(address,address,address[],address)": "427942a4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchUpdateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostNewLogic\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"agreementClassNewLogics\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"superTokenFactoryNewLogic\",\"type\":\"address\"}],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid's Governance interface\",\"kind\":\"dev\",\"methods\":{\"batchUpdateSuperTokenLogic(address,address[])\":{\"details\":\"Update supertoken logic contract to the latest that is managed by the super token factory\"},\"getConfigAsAddress(address,address,bytes32)\":{\"details\":\"Get configuration as address value\"},\"getConfigAsUint256(address,address,bytes32)\":{\"details\":\"Get configuration as uint256 value\"},\"registerAgreementClass(address,address)\":{\"details\":\"Register a new agreement class\"},\"replaceGovernance(address,address)\":{\"details\":\"Replace the current governance with a new governance\"},\"updateContracts(address,address,address[],address)\":{\"details\":\"Update logics of the contracts NOTE: - Because they might have inter-dependencies, it is good to have one single function to update them all\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":\"ISuperfluidGovernance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "ISuperfluidToken": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bondAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidatedBy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                }
              ],
              "name": "AgreementLiquidatedV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                }
              ],
              "name": "AgreementStateUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "AgreementTerminated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bailoutAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "Bailout",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "createAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountActiveAgreements",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "activeAgreements",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementData",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementStateSlot",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountCritical",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountCriticalNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountSolvent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountSolventNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "liquidator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "makeLiquidationPayouts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "useDefaultRewardAccount",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                }
              ],
              "name": "makeLiquidationPayoutsV2",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "realtimeBalanceOfNow",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "settleBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "terminateAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementData",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementStateSlot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createAgreement(bytes32,bytes32[])": "12a6a3f8",
              "getAccountActiveAgreements(address)": "386fa221",
              "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
              "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
              "getHost()": "20bc4425",
              "isAccountCritical(address,uint256)": "d9d078d6",
              "isAccountCriticalNow(address)": "79359f6f",
              "isAccountSolvent(address,uint256)": "b84cdd4a",
              "isAccountSolventNow(address)": "bb0d196e",
              "makeLiquidationPayouts(bytes32,address,address,uint256,uint256)": "8ddd1c0f",
              "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
              "realtimeBalanceOf(address,uint256)": "eb3537cc",
              "realtimeBalanceOfNow(address)": "2ec8eec7",
              "settleBalance(address,int256)": "cf97256d",
              "terminateAgreement(bytes32,uint256)": "27048397",
              "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
              "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"makeLiquidationPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement creation event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"details\":\"Agreement liquidation event (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot NOTE: Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode) NOTE: Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the liquidatorAccount will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the rewardAccount will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAccount\":\"Account that collects the reward or bails out insolvent accounts\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement termination event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement creation event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"details\":\"System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"Get a list of agreements that is active for the accountAn active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of a agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"Check if one account is critical\",\"params\":{\"account\":\"Account check if is critical by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"Check if one account is critical now\",\"params\":{\"account\":\"Account check if is critical by a future time\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"Check if one account is solvent\",\"params\":{\"account\":\"Account check if is solvent by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isAccountSolventNow(address)\":{\"details\":\"Check if one account is solvent now\",\"params\":{\"account\":\"Account check if is solvent now\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"makeLiquidationPayouts(bytes32,address,address,uint256,uint256)\":{\"details\":\"Make liquidation payouts\",\"params\":{\"bailoutAmount\":\"Amount of account bailout needed NOTE: Liquidation rules:  - If a bailout is required (bailoutAmount > 0)     - the actual reward goes to the liquidator,     - while the reward account becomes the bailout account     - total bailout include: bailout amount + reward amount Modifiers:  - onlyAgreement\",\"id\":\"Agreement ID\",\"liquidator\":\"Address of the executer of liquidation\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recepient account will receive\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount Modifiers:  - onlyAgreement\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\"},\"settleBalance(address,int256)\":{\"details\":\"Settle balance from an account by the agreement.      The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled Modifiers:  - onlyAgreement\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated NOTE - To clear the storage out, provide zero-ed array of intended length\"}}},\"title\":\"Superfluid's token interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "ERC20WithTokenInfo": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for ERC20 token with token info NOTE: Using abstract contract instead of interfaces because old solidity does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":\"ERC20WithTokenInfo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "TokenInfo": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token info interface NOTE: ERC20 standard interface does not specify these functions, but often the token implementations have them.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":\"TokenInfo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/Controller.sol": {
        "Controller": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "streamAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "newStream",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "createNewStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6132288061010d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000525760003560e01c8063455092e41462000057578063715018a614620000775780638da5cb5b1462000083578063f2fde38b14620000a5575b600080fd5b6200007560048036038101906200006f919062000559565b620000c5565b005b6200008162000239565b005b6200008d620002ca565b6040516200009c9190620006c9565b60405180910390f35b620000c36004803603810190620000bd91906200052d565b620002f3565b005b620000cf620003f7565b73ffffffffffffffffffffffffffffffffffffffff16620000ef620002ca565b73ffffffffffffffffffffffffffffffffffffffff161462000148576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013f90620007c2565b60405180910390fd5b600085858585856040516200015d90620004c3565b6200016d95949392919062000743565b604051809103906000f0801580156200018a573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3f0dac050c8dcc7eed96aa013c13a55ccfce67b511faf2417c0bad8c3ceabb0d818587868660405162000229959493929190620006e6565b60405180910390a1505050505050565b62000243620003f7565b73ffffffffffffffffffffffffffffffffffffffff1662000263620002ca565b73ffffffffffffffffffffffffffffffffffffffff1614620002bc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b390620007c2565b60405180910390fd5b620002c86000620003ff565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620002fd620003f7565b73ffffffffffffffffffffffffffffffffffffffff166200031d620002ca565b73ffffffffffffffffffffffffffffffffffffffff161462000376576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200036d90620007c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620003e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e090620007a0565b60405180910390fd5b620003f481620003ff565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61290e80620008e583390190565b600081359050620004e2816200087c565b92915050565b600081359050620004f98162000896565b92915050565b6000813590506200051081620008b0565b92915050565b6000813590506200052781620008ca565b92915050565b6000602082840312156200054057600080fd5b60006200055084828501620004d1565b91505092915050565b600080600080600060a086880312156200057257600080fd5b60006200058288828901620004e8565b95505060206200059588828901620004d1565b9450506040620005a888828901620004d1565b9350506060620005bb88828901620004ff565b9250506080620005ce8882890162000516565b9150509295509295909350565b620005e681620007f5565b82525050565b620005f78162000854565b82525050565b62000608816200081d565b82525050565b60006200061d602683620007e4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062000685602083620007e4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b620006c3816200084a565b82525050565b6000602082019050620006e06000830184620005db565b92915050565b600060a082019050620006fd6000830188620005db565b6200070c6020830187620005db565b6200071b6040830186620005db565b6200072a6060830185620005fd565b620007396080830184620006b8565b9695505050505050565b600060a0820190506200075a6000830188620005ec565b620007696020830187620005db565b620007786040830186620005db565b620007876060830185620005fd565b620007966080830184620006b8565b9695505050505050565b60006020820190508181036000830152620007bb816200060e565b9050919050565b60006020820190508181036000830152620007dd8162000676565b9050919050565b600082825260208201905092915050565b600062000802826200082a565b9050919050565b60006200081682620007f5565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620008618262000868565b9050919050565b600062000875826200082a565b9050919050565b6200088781620007f5565b81146200089357600080fd5b50565b620008a18162000809565b8114620008ad57600080fd5b50565b620008bb816200081d565b8114620008c757600080fd5b50565b620008d5816200084a565b8114620008e157600080fd5b5056fe60806040523480156200001157600080fd5b506040516200290e3803806200290e833981810160405281019062000037919062000913565b620000576200004b6200031d60201b60201c565b6200032560201b60201c565b60405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000d9919062000b2f565b60206040518083038186803b158015620000f257600080fd5b505afa15801562000107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012d9190620008e7565b73ffffffffffffffffffffffffffffffffffffffff16815250600360008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050620001ea81620003e960201b60201c565b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000312600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b60036200057860201b62000b8417909392919060201c565b505050505062000eac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620003f96200031d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200041f6200075160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200046f9062000be9565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b8152600401620004d992919062000b02565b602060405180830381600087803b158015620004f457600080fd5b505af115801562000509573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052f919062000876565b90508062000574576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200056b9062000c0b565b60405180910390fd5b5050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff8111156200062a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156200065d5781602001600182028036833780820191505090505b5060405160240162000673949392919062000b95565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401620006ef92919062000b4c565b600060405180830381600087803b1580156200070a57600080fd5b505af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200074a9190620008a2565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000620007916200078b8462000c61565b62000c2d565b905082815260208101848484011115620007aa57600080fd5b620007b784828562000d9a565b509392505050565b600081519050620007d08162000e10565b92915050565b600081519050620007e78162000e2a565b92915050565b600082601f830112620007ff57600080fd5b8151620008118482602086016200077a565b91505092915050565b6000815190506200082b8162000e44565b92915050565b600081519050620008428162000e5e565b92915050565b600081519050620008598162000e78565b92915050565b600081519050620008708162000e92565b92915050565b6000602082840312156200088957600080fd5b60006200089984828501620007d6565b91505092915050565b600060208284031215620008b557600080fd5b600082015167ffffffffffffffff811115620008d057600080fd5b620008de84828501620007ed565b91505092915050565b600060208284031215620008fa57600080fd5b60006200090a848285016200081a565b91505092915050565b600080600080600060a086880312156200092c57600080fd5b60006200093c8882890162000831565b95505060206200094f88828901620007bf565b94505060406200096288828901620007bf565b9350506060620009758882890162000848565b925050608062000988888289016200085f565b9150509295509295909350565b620009a08162000cc1565b82525050565b620009b18162000ce1565b82525050565b6000620009c48262000c94565b620009d0818562000c9f565b9350620009e281856020860162000d9a565b620009ed8162000dff565b840191505092915050565b62000a038162000d4a565b82525050565b62000a148162000d72565b82525050565b62000a258162000d13565b82525050565b600062000a3a60028362000c9f565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b600062000a7c60208362000cb0565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600062000abe60168362000cb0565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b62000afc8162000d40565b82525050565b600060408201905062000b19600083018562000995565b62000b28602083018462000af1565b9392505050565b600060208201905062000b466000830184620009a6565b92915050565b600060608201905062000b636000830185620009f8565b818103602083015262000b778184620009b7565b9050818103604083015262000b8c8162000a2b565b90509392505050565b600060808201905062000bac600083018762000a09565b62000bbb602083018662000995565b62000bca604083018562000a1a565b818103606083015262000bde8184620009b7565b905095945050505050565b6000602082019050818103600083015262000c048162000a6d565b9050919050565b6000602082019050818103600083015262000c268162000aaf565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000c575762000c5662000dd0565b5b8060405250919050565b600067ffffffffffffffff82111562000c7f5762000c7e62000dd0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000cce8262000d20565b9050919050565b60008115159050919050565b6000819050919050565b600062000cf88262000cc1565b9050919050565b600062000d0c8262000cc1565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000d578262000d5e565b9050919050565b600062000d6b8262000d20565b9050919050565b600062000d7f8262000d86565b9050919050565b600062000d938262000d20565b9050919050565b60005b8381101562000dba57808201518184015260208101905062000d9d565b8381111562000dca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000e1b8162000cc1565b811462000e2757600080fd5b50565b62000e358162000cd5565b811462000e4157600080fd5b50565b62000e4f8162000ceb565b811462000e5b57600080fd5b50565b62000e698162000cff565b811462000e7557600080fd5b50565b62000e838162000d13565b811462000e8f57600080fd5b50565b62000e9d8162000d40565b811462000ea957600080fd5b50565b611a528062000ebc6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639dad9382116100665780639dad9382146100f8578063b6b55f2514610102578063b91461611461011e578063d3112b2e1461013c578063f2fde38b1461015b57610093565b80632484ea2f146100985780632e1a7d4d146100b4578063715018a6146100d05780638da5cb5b146100da575b600080fd5b6100b260048036038101906100ad91906112b7565b610177565b005b6100ce60048036038101906100c99190611370565b6103cc565b005b6100d86105b0565b005b6100e2610638565b6040516100ef91906115bb565b60405180910390f35b610100610661565b005b61011c60048036038101906101179190611370565b6107ee565b005b610126610961565b6040516101339190611783565b60405180910390f35b610144610a3a565b6040516101529291906116da565b60405180910390f35b6101756004803603810190610170919061128e565b610a8c565b005b61017f610d53565b73ffffffffffffffffffffffffffffffffffffffff1661019d610638565b73ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90611723565b60405180910390fd5b6102a6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025191906115bb565b60206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611399565b6103cc565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055506103c7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b6003610d5b909392919063ffffffff16565b505050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042891906115bb565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611399565b10156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090611763565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105189291906115d6565b602060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190611306565b9050806105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390611743565b60405180910390fd5b5050565b6105b8610d53565b73ffffffffffffffffffffffffffffffffffffffff166105d6610638565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611723565b60405180910390fd5b6106366000610f2a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610669610d53565b73ffffffffffffffffffffffffffffffffffffffff16610687610638565b73ffffffffffffffffffffffffffffffffffffffff16146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611723565b60405180910390fd5b61073933600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003610fee909392919063ffffffff16565b6107ec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161079791906115bb565b60206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190611399565b6103cc565b565b6107f6610d53565b73ffffffffffffffffffffffffffffffffffffffff16610814610638565b73ffffffffffffffffffffffffffffffffffffffff161461086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611723565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b81526004016108c99291906115d6565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611306565b90508061095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611743565b60405180910390fd5b5050565b60008060149054906101000a9004600b0b6bffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109db91906115bb565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611399565b610a35919061182c565b905090565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610a94610d53565b73ffffffffffffffffffffffffffffffffffffffff16610ab2610638565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90611723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611703565b60405180910390fd5b610b8181610f2a565b50565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c675781602001600182028036833780820191505090505b50604051602401610c7b949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610cf59291906115ff565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d4c919061132f565b5050505050565b600033905090565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff811115610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e5781602001600182028036833780820191505090505b50604051602401610e52949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610ecc9291906115ff565b600060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f23919061132f565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff81111561109f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110d15781602001600182028036833780820191505090505b506040516024016110e59493929190611642565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040161115f9291906115ff565b600060405180830381600087803b15801561117957600080fd5b505af115801561118d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111b6919061132f565b5050505050565b60006111d06111cb846117cf565b61179e565b9050828152602081018484840111156111e857600080fd5b6111f384828561191e565b509392505050565b60008135905061120a816119c0565b92915050565b60008151905061121f816119d7565b92915050565b600082601f83011261123657600080fd5b81516112468482602086016111bd565b91505092915050565b60008135905061125e816119ee565b92915050565b60008135905061127381611a05565b92915050565b60008151905061128881611a05565b92915050565b6000602082840312156112a057600080fd5b60006112ae848285016111fb565b91505092915050565b6000806000606084860312156112cc57600080fd5b60006112da868287016111fb565b93505060206112eb868287016111fb565b92505060406112fc8682870161124f565b9150509250925092565b60006020828403121561131857600080fd5b600061132684828501611210565b91505092915050565b60006020828403121561134157600080fd5b600082015167ffffffffffffffff81111561135b57600080fd5b61136784828501611225565b91505092915050565b60006020828403121561138257600080fd5b600061139084828501611264565b91505092915050565b6000602082840312156113ab57600080fd5b60006113b984828501611279565b91505092915050565b6113cb8161185d565b82525050565b60006113dc826117ff565b6113e6818561180a565b93506113f681856020860161191e565b6113ff816119af565b840191505092915050565b611413816118b2565b82525050565b611422816118d6565b82525050565b611431816118fa565b82525050565b6114408161187b565b82525050565b600061145360268361181b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114b960028361180a565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006114f960208361181b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061153960168361181b565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b600061157960138361181b565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b6115b5816118a8565b82525050565b60006020820190506115d060008301846113c2565b92915050565b60006040820190506115eb60008301856113c2565b6115f860208301846115ac565b9392505050565b6000606082019050611614600083018561140a565b818103602083015261162681846113d1565b90508181036040830152611639816114ac565b90509392505050565b60006080820190506116576000830187611419565b61166460208301866113c2565b61167160408301856113c2565b818103606083015261168381846113d1565b905095945050505050565b60006080820190506116a36000830187611419565b6116b060208301866113c2565b6116bd6040830185611437565b81810360608301526116cf81846113d1565b905095945050505050565b60006040820190506116ef6000830185611428565b6116fc602083018461140a565b9392505050565b6000602082019050818103600083015261171c81611446565b9050919050565b6000602082019050818103600083015261173c816114ec565b9050919050565b6000602082019050818103600083015261175c8161152c565b9050919050565b6000602082019050818103600083015261177c8161156c565b9050919050565b600060208201905061179860008301846115ac565b92915050565b6000604051905081810181811067ffffffffffffffff821117156117c5576117c4611980565b5b8060405250919050565b600067ffffffffffffffff8211156117ea576117e9611980565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611837826118a8565b9150611842836118a8565b92508261185257611851611951565b5b828204905092915050565b600061186882611888565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118bd826118c4565b9050919050565b60006118cf82611888565b9050919050565b60006118e1826118e8565b9050919050565b60006118f382611888565b9050919050565b60006119058261190c565b9050919050565b600061191782611888565b9050919050565b60005b8381101561193c578082015181840152602081019050611921565b8381111561194b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6119c98161185d565b81146119d457600080fd5b50565b6119e08161186f565b81146119eb57600080fd5b50565b6119f78161187b565b8114611a0257600080fd5b50565b611a0e816118a8565b8114611a1957600080fd5b5056fea2646970667358221220d40dfe86495a0947a0e66de216669e7d15179d2ccd1168a1ae87bef4fd06805164736f6c63430008000033a264697066735822122087352fc5887fc360902a6f8c103937bcc2a671cbdd7b6133603e9b02869be12664736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3228 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x52 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x455092E4 EQ PUSH3 0x57 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x83 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6F SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH3 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x81 PUSH3 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x8D PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x9C SWAP2 SWAP1 PUSH3 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xBD SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH3 0x2F3 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xCF PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xEF PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13F SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x15D SWAP1 PUSH3 0x4C3 JUMP JUMPDEST PUSH3 0x16D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x18A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3F0DAC050C8DCC7EED96AA013C13A55CCFCE67B511FAF2417C0BAD8C3CEABB0D DUP2 DUP6 DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x229 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x243 PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x263 PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2B3 SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2C8 PUSH1 0x0 PUSH3 0x3FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2FD PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x31D PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x376 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x36D SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E0 SWAP1 PUSH3 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3F4 DUP2 PUSH3 0x3FF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x290E DUP1 PUSH3 0x8E5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x4E2 DUP2 PUSH3 0x87C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x4F9 DUP2 PUSH3 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x510 DUP2 PUSH3 0x8B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x527 DUP2 PUSH3 0x8CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x550 DUP5 DUP3 DUP6 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x582 DUP9 DUP3 DUP10 ADD PUSH3 0x4E8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x595 DUP9 DUP3 DUP10 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x5A8 DUP9 DUP3 DUP10 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x5BB DUP9 DUP3 DUP10 ADD PUSH3 0x4FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x5CE DUP9 DUP3 DUP10 ADD PUSH3 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x5E6 DUP2 PUSH3 0x7F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5F7 DUP2 PUSH3 0x854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x608 DUP2 PUSH3 0x81D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61D PUSH1 0x26 DUP4 PUSH3 0x7E4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x685 PUSH1 0x20 DUP4 PUSH3 0x7E4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C3 DUP2 PUSH3 0x84A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x6FD PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x70C PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x71B PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x72A PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x739 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x6B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x75A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x5EC JUMP JUMPDEST PUSH3 0x769 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x778 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x787 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x796 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x6B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7BB DUP2 PUSH3 0x60E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7DD DUP2 PUSH3 0x676 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x802 DUP3 PUSH3 0x82A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x816 DUP3 PUSH3 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x861 DUP3 PUSH3 0x868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x875 DUP3 PUSH3 0x82A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x887 DUP2 PUSH3 0x7F5 JUMP JUMPDEST DUP2 EQ PUSH3 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8A1 DUP2 PUSH3 0x809 JUMP JUMPDEST DUP2 EQ PUSH3 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8BB DUP2 PUSH3 0x81D JUMP JUMPDEST DUP2 EQ PUSH3 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8D5 DUP2 PUSH3 0x84A JUMP JUMPDEST DUP2 EQ PUSH3 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x290E CODESIZE SUB DUP1 PUSH3 0x290E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x913 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x325 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD9 SWAP2 SWAP1 PUSH3 0xB2F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x12D SWAP2 SWAP1 PUSH3 0x8E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH3 0x1EA DUP2 PUSH3 0x3E9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x312 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH3 0x578 PUSH1 0x20 SHL PUSH3 0xB84 OR SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0xEAC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x41F PUSH3 0x751 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x46F SWAP1 PUSH3 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4D9 SWAP3 SWAP2 SWAP1 PUSH3 0xB02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x52F SWAP2 SWAP1 PUSH3 0x876 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x56B SWAP1 PUSH3 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x62A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x673 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6EF SWAP3 SWAP2 SWAP1 PUSH3 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x71F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x74A SWAP2 SWAP1 PUSH3 0x8A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 PUSH3 0x78B DUP5 PUSH3 0xC61 JUMP JUMPDEST PUSH3 0xC2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7B7 DUP5 DUP3 DUP6 PUSH3 0xD9A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7D0 DUP2 PUSH3 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7E7 DUP2 PUSH3 0xE2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x811 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x77A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x82B DUP2 PUSH3 0xE44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x842 DUP2 PUSH3 0xE5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x859 DUP2 PUSH3 0xE78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x870 DUP2 PUSH3 0xE92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x899 DUP5 DUP3 DUP6 ADD PUSH3 0x7D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8DE DUP5 DUP3 DUP6 ADD PUSH3 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x90A DUP5 DUP3 DUP6 ADD PUSH3 0x81A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x93C DUP9 DUP3 DUP10 ADD PUSH3 0x831 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x94F DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x962 DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x975 DUP9 DUP3 DUP10 ADD PUSH3 0x848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x988 DUP9 DUP3 DUP10 ADD PUSH3 0x85F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x9A0 DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9B1 DUP2 PUSH3 0xCE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C4 DUP3 PUSH3 0xC94 JUMP JUMPDEST PUSH3 0x9D0 DUP2 DUP6 PUSH3 0xC9F JUMP JUMPDEST SWAP4 POP PUSH3 0x9E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD9A JUMP JUMPDEST PUSH3 0x9ED DUP2 PUSH3 0xDFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA03 DUP2 PUSH3 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA14 DUP2 PUSH3 0xD72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA25 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA3A PUSH1 0x2 DUP4 PUSH3 0xC9F JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA7C PUSH1 0x20 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABE PUSH1 0x16 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAFC DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xB19 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xB28 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xAF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB46 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB63 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x9F8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xB77 DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xB8C DUP2 PUSH3 0xA2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xBAC PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xA09 JUMP JUMPDEST PUSH3 0xBBB PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xBCA PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xA1A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0xBDE DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC04 DUP2 PUSH3 0xA6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC26 DUP2 PUSH3 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xC57 JUMPI PUSH3 0xC56 PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xC7F JUMPI PUSH3 0xC7E PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCCE DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCF8 DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD0C DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD57 DUP3 PUSH3 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD6B DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD7F DUP3 PUSH3 0xD86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD93 DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0xDCA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE1B DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH3 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE35 DUP2 PUSH3 0xCD5 JUMP JUMPDEST DUP2 EQ PUSH3 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE4F DUP2 PUSH3 0xCEB JUMP JUMPDEST DUP2 EQ PUSH3 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE69 DUP2 PUSH3 0xCFF JUMP JUMPDEST DUP2 EQ PUSH3 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE83 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP2 EQ PUSH3 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE9D DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP2 EQ PUSH3 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A52 DUP1 PUSH3 0xEBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DAD9382 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xB9146161 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2484EA2F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3C7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH2 0xD5B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH1 0x0 PUSH2 0xF2A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x687 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xFEE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7EC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x814 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xF2A JUMP JUMPDEST POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC67 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE3E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH2 0x11CB DUP5 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 DUP3 DUP6 PUSH2 0x191E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120A DUP2 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x121F DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1246 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125E DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1273 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP5 DUP3 DUP6 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12EB DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12FC DUP7 DUP3 DUP8 ADD PUSH2 0x124F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DC DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x13E6 DUP2 DUP6 PUSH2 0x180A JUMP JUMPDEST SWAP4 POP PUSH2 0x13F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x19AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1413 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x18D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x18FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1453 PUSH1 0x26 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 PUSH1 0x2 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 PUSH1 0x20 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x16 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 PUSH1 0x13 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x15F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x1664 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x1671 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1683 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x16B0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1437 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x16FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173C DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175C DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP3 PUSH2 0x18A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1842 DUP4 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1951 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP3 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1921 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C9 DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x186F JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0E DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD INVALID DUP7 0x49 GAS MULMOD SELFBALANCE LOG0 0xE6 PUSH14 0xE216669E7D15179D2CCD1168A1AE DUP8 0xBE DELEGATECALL REVERT MOD DUP1 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 CALLDATALOAD 0x2F 0xC5 DUP9 PUSH32 0xC360902A6F8C103937BCC2A671CBDD7B6133603E9B02869BE12664736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "286:553:16:-:0;;;;;;;;;;;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;286:553:16;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;286:553:16:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7041:19",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:19",
                            "type": ""
                          }
                        ],
                        "src": "7:139:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "224:107:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "234:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "256:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "243:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "243:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "319:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperfluid_$2414",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:46:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "272:53:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "272:53:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperfluid_$2414",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "202:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "210:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "218:5:19",
                            "type": ""
                          }
                        ],
                        "src": "152:179:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "387:85:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "397:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "419:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "406:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "406:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "397:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "460:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:24:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "435:31:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "435:31:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "365:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "373:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "381:5:19",
                            "type": ""
                          }
                        ],
                        "src": "337:135:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "530:87:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "540:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "562:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "540:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "605:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "578:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "578:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "578:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "508:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "516:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "524:5:19",
                            "type": ""
                          }
                        ],
                        "src": "478:139:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "689:196:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "735:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "744:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "747:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "737:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "737:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "737:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "710:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "719:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "706:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "706:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "731:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "702:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "702:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "699:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "761:117:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "776:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "790:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "780:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "805:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "840:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "851:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "836:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "836:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "860:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "815:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "815:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "805:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "659:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "670:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "682:6:19",
                            "type": ""
                          }
                        ],
                        "src": "623:262:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1043:728:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1090:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1099:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1102:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1092:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1092:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1092:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1064:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1073:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1060:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1060:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1085:3:19",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1056:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1056:33:19"
                              },
                              "nodeType": "YulIf",
                              "src": "1053:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1116:137:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1131:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1145:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1135:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1160:83:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1215:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1226:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1211:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1211:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1235:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperfluid_$2414",
                                      "nodeType": "YulIdentifier",
                                      "src": "1170:40:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1170:73:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1160:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1263:118:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1278:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1292:2:19",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1282:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1308:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1343:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1354:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1339:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1339:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1363:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1318:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1318:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1308:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1391:118:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1406:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1420:2:19",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1410:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1436:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1471:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1482:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1467:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1467:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1491:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1446:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1446:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1436:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1519:116:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1534:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1548:2:19",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1538:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1564:61:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1597:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1608:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1593:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1593:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1617:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "1574:18:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1574:51:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1564:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1645:119:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1660:17:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1674:3:19",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1664:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1691:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1726:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1737:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1722:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1722:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1746:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1701:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1701:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1691:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperfluid_$2414t_addresst_addresst_int96t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "981:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "992:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1004:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1012:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1020:6:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1028:6:19",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1036:6:19",
                            "type": ""
                          }
                        ],
                        "src": "891:880:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1842:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1859:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1882:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1864:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1864:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1852:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1852:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1852:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1830:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1837:3:19",
                            "type": ""
                          }
                        ],
                        "src": "1777:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1986:86:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2003:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2059:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluid_$2414_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2008:50:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2008:57:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1996:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1996:70:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1996:70:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1974:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1981:3:19",
                            "type": ""
                          }
                        ],
                        "src": "1901:171:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2139:51:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2156:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2177:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "2161:15:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2161:22:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2149:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2149:35:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2149:35:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int96_to_t_int96_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2127:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2134:3:19",
                            "type": ""
                          }
                        ],
                        "src": "2078:112:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2342:224:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2352:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2418:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2423:2:19",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2359:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2359:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2352:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2447:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2452:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2443:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2443:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2456:34:19",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2436:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2436:55:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2436:55:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2512:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2517:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2508:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2508:12:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2522:8:19",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2501:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2501:30:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2501:30:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2541:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2552:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2557:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2548:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2548:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2541:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2330:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2338:3:19",
                            "type": ""
                          }
                        ],
                        "src": "2196:370:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2718:184:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2728:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2794:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2799:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2735:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2735:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2728:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2823:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2828:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2819:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2819:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2832:34:19",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2812:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2812:55:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2812:55:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2877:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2888:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2893:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2884:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2884:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2877:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2706:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2714:3:19",
                            "type": ""
                          }
                        ],
                        "src": "2572:330:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2973:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2990:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3013:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2995:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2995:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2983:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2983:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2983:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2961:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2968:3:19",
                            "type": ""
                          }
                        ],
                        "src": "2908:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3130:124:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3140:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3152:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3163:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3148:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3148:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3220:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3233:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3244:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3229:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3229:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3176:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3176:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3176:71:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3102:9:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3114:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3125:4:19",
                            "type": ""
                          }
                        ],
                        "src": "3032:222:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3466:450:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3476:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3488:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3499:3:19",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3484:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3484:19:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3476:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3557:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3570:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3581:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3566:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3566:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3513:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3513:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3513:71:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3638:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3651:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3662:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3647:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3647:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3594:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3594:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3594:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3720:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3733:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3744:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3729:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3729:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3676:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3676:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3676:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3798:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3811:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3822:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3807:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3807:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3758:39:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3758:68:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3758:68:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3880:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3893:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3904:3:19",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3889:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3889:19:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3836:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3836:73:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3836:73:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_address_t_int96_t_uint256__to_t_address_t_address_t_address_t_int96_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3406:9:19",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3418:6:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3426:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3434:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3442:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3450:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3461:4:19",
                            "type": ""
                          }
                        ],
                        "src": "3260:656:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4148:470:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4158:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4170:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4181:3:19",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4166:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4166:19:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4158:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4259:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4272:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4283:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4268:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4268:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4195:63:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4195:91:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4195:91:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4340:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4353:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4364:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4349:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4349:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4296:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4296:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4296:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4422:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4435:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4446:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4431:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4431:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4378:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4378:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4378:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4500:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4513:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4524:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4509:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4509:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4460:39:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4460:68:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4460:68:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4582:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4595:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4606:3:19",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4591:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4591:19:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4538:73:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4538:73:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluid_$2414_t_address_t_address_t_int96_t_uint256__to_t_address_t_address_t_address_t_int96_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4088:9:19",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4100:6:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4108:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4116:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4124:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4132:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4143:4:19",
                            "type": ""
                          }
                        ],
                        "src": "3922:696:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4795:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4805:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4817:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4828:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4813:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4813:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4805:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4852:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4863:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4848:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4848:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4871:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4877:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4867:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4867:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4841:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4841:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4841:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4897:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5031:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4905:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4905:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4897:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4775:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4790:4:19",
                            "type": ""
                          }
                        ],
                        "src": "4624:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5220:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5230:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5242:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5253:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5238:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5238:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5230:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5277:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5288:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5273:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5273:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "5296:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5302:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5292:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5292:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5266:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5266:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5266:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5322:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5456:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5330:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5330:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5322:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5200:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5215:4:19",
                            "type": ""
                          }
                        ],
                        "src": "5049:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5570:73:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5587:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5592:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5580:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5580:19:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5580:19:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5608:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5627:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5632:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5623:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5623:14:19"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5608:11:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5542:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5547:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "5558:11:19",
                            "type": ""
                          }
                        ],
                        "src": "5474:169:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5694:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5704:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5733:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "5715:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5715:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5704:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5676:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5686:7:19",
                            "type": ""
                          }
                        ],
                        "src": "5649:96:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5816:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5826:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5855:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5837:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5837:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5826:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperfluid_$2414",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5798:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5808:7:19",
                            "type": ""
                          }
                        ],
                        "src": "5751:116:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5916:48:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5926:32:19",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5948:2:19",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5952:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "5937:10:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5937:21:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5926:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5898:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5908:7:19",
                            "type": ""
                          }
                        ],
                        "src": "5873:91:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6015:81:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6025:65:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6040:5:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6047:42:19",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6036:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6036:54:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6025:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5997:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6007:7:19",
                            "type": ""
                          }
                        ],
                        "src": "5970:126:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6147:32:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6157:16:19",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6168:5:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6157:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6129:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6139:7:19",
                            "type": ""
                          }
                        ],
                        "src": "6102:77:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6265:86:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6275:70:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6339:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluid_$2414_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6288:50:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6288:57:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6275:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2414_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6245:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6255:9:19",
                            "type": ""
                          }
                        ],
                        "src": "6185:166:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6437:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6447:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6478:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6460:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6460:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6447:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2414_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6417:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6427:9:19",
                            "type": ""
                          }
                        ],
                        "src": "6357:133:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6539:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6596:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6605:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6608:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6598:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6598:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6598:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6562:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6587:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "6569:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6569:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6559:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6559:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6552:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6552:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "6549:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6532:5:19",
                            "type": ""
                          }
                        ],
                        "src": "6496:122:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6687:99:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6764:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6773:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6776:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6766:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6766:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6766:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6710:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6755:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperfluid_$2414",
                                          "nodeType": "YulIdentifier",
                                          "src": "6717:37:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6717:44:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6707:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6707:55:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6700:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6700:63:19"
                              },
                              "nodeType": "YulIf",
                              "src": "6697:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperfluid_$2414",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6680:5:19",
                            "type": ""
                          }
                        ],
                        "src": "6624:162:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6833:77:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6888:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6897:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6900:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6890:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6890:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6890:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6856:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6879:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "6863:15:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6863:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6853:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6853:33:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6846:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6846:41:19"
                              },
                              "nodeType": "YulIf",
                              "src": "6843:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6826:5:19",
                            "type": ""
                          }
                        ],
                        "src": "6792:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6959:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7016:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7025:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7028:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7018:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7018:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7018:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6982:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7007:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "6989:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6989:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6979:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6979:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6972:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6972:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "6969:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6952:5:19",
                            "type": ""
                          }
                        ],
                        "src": "6916:122:19"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ISuperfluid_$2414(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ISuperfluid_$2414(value)\n    }\n\n    function abi_decode_t_int96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperfluid_$2414t_addresst_addresst_int96t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperfluid_$2414(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluid_$2414_to_t_address(value))\n    }\n\n    function abi_encode_t_int96_to_t_int96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int96(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_int96_t_uint256__to_t_address_t_address_t_address_t_int96_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluid_$2414_t_address_t_address_t_int96_t_uint256__to_t_address_t_address_t_address_t_int96_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISuperfluid_$2414(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ISuperfluid_$2414_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluid_$2414_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2414_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperfluid_$2414(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperfluid_$2414(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 19,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060043610620000525760003560e01c8063455092e41462000057578063715018a614620000775780638da5cb5b1462000083578063f2fde38b14620000a5575b600080fd5b6200007560048036038101906200006f919062000559565b620000c5565b005b6200008162000239565b005b6200008d620002ca565b6040516200009c9190620006c9565b60405180910390f35b620000c36004803603810190620000bd91906200052d565b620002f3565b005b620000cf620003f7565b73ffffffffffffffffffffffffffffffffffffffff16620000ef620002ca565b73ffffffffffffffffffffffffffffffffffffffff161462000148576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013f90620007c2565b60405180910390fd5b600085858585856040516200015d90620004c3565b6200016d95949392919062000743565b604051809103906000f0801580156200018a573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3f0dac050c8dcc7eed96aa013c13a55ccfce67b511faf2417c0bad8c3ceabb0d818587868660405162000229959493929190620006e6565b60405180910390a1505050505050565b62000243620003f7565b73ffffffffffffffffffffffffffffffffffffffff1662000263620002ca565b73ffffffffffffffffffffffffffffffffffffffff1614620002bc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b390620007c2565b60405180910390fd5b620002c86000620003ff565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b620002fd620003f7565b73ffffffffffffffffffffffffffffffffffffffff166200031d620002ca565b73ffffffffffffffffffffffffffffffffffffffff161462000376576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200036d90620007c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620003e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e090620007a0565b60405180910390fd5b620003f481620003ff565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61290e80620008e583390190565b600081359050620004e2816200087c565b92915050565b600081359050620004f98162000896565b92915050565b6000813590506200051081620008b0565b92915050565b6000813590506200052781620008ca565b92915050565b6000602082840312156200054057600080fd5b60006200055084828501620004d1565b91505092915050565b600080600080600060a086880312156200057257600080fd5b60006200058288828901620004e8565b95505060206200059588828901620004d1565b9450506040620005a888828901620004d1565b9350506060620005bb88828901620004ff565b9250506080620005ce8882890162000516565b9150509295509295909350565b620005e681620007f5565b82525050565b620005f78162000854565b82525050565b62000608816200081d565b82525050565b60006200061d602683620007e4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062000685602083620007e4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b620006c3816200084a565b82525050565b6000602082019050620006e06000830184620005db565b92915050565b600060a082019050620006fd6000830188620005db565b6200070c6020830187620005db565b6200071b6040830186620005db565b6200072a6060830185620005fd565b620007396080830184620006b8565b9695505050505050565b600060a0820190506200075a6000830188620005ec565b620007696020830187620005db565b620007786040830186620005db565b620007876060830185620005fd565b620007966080830184620006b8565b9695505050505050565b60006020820190508181036000830152620007bb816200060e565b9050919050565b60006020820190508181036000830152620007dd8162000676565b9050919050565b600082825260208201905092915050565b600062000802826200082a565b9050919050565b60006200081682620007f5565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620008618262000868565b9050919050565b600062000875826200082a565b9050919050565b6200088781620007f5565b81146200089357600080fd5b50565b620008a18162000809565b8114620008ad57600080fd5b50565b620008bb816200081d565b8114620008c757600080fd5b50565b620008d5816200084a565b8114620008e157600080fd5b5056fe60806040523480156200001157600080fd5b506040516200290e3803806200290e833981810160405281019062000037919062000913565b620000576200004b6200031d60201b60201c565b6200032560201b60201c565b60405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000d9919062000b2f565b60206040518083038186803b158015620000f257600080fd5b505afa15801562000107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012d9190620008e7565b73ffffffffffffffffffffffffffffffffffffffff16815250600360008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050620001ea81620003e960201b60201c565b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000312600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b60036200057860201b62000b8417909392919060201c565b505050505062000eac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620003f96200031d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200041f6200075160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200046f9062000be9565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b8152600401620004d992919062000b02565b602060405180830381600087803b158015620004f457600080fd5b505af115801562000509573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052f919062000876565b90508062000574576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200056b9062000c0b565b60405180910390fd5b5050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff8111156200062a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156200065d5781602001600182028036833780820191505090505b5060405160240162000673949392919062000b95565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401620006ef92919062000b4c565b600060405180830381600087803b1580156200070a57600080fd5b505af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200074a9190620008a2565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000620007916200078b8462000c61565b62000c2d565b905082815260208101848484011115620007aa57600080fd5b620007b784828562000d9a565b509392505050565b600081519050620007d08162000e10565b92915050565b600081519050620007e78162000e2a565b92915050565b600082601f830112620007ff57600080fd5b8151620008118482602086016200077a565b91505092915050565b6000815190506200082b8162000e44565b92915050565b600081519050620008428162000e5e565b92915050565b600081519050620008598162000e78565b92915050565b600081519050620008708162000e92565b92915050565b6000602082840312156200088957600080fd5b60006200089984828501620007d6565b91505092915050565b600060208284031215620008b557600080fd5b600082015167ffffffffffffffff811115620008d057600080fd5b620008de84828501620007ed565b91505092915050565b600060208284031215620008fa57600080fd5b60006200090a848285016200081a565b91505092915050565b600080600080600060a086880312156200092c57600080fd5b60006200093c8882890162000831565b95505060206200094f88828901620007bf565b94505060406200096288828901620007bf565b9350506060620009758882890162000848565b925050608062000988888289016200085f565b9150509295509295909350565b620009a08162000cc1565b82525050565b620009b18162000ce1565b82525050565b6000620009c48262000c94565b620009d0818562000c9f565b9350620009e281856020860162000d9a565b620009ed8162000dff565b840191505092915050565b62000a038162000d4a565b82525050565b62000a148162000d72565b82525050565b62000a258162000d13565b82525050565b600062000a3a60028362000c9f565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b600062000a7c60208362000cb0565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600062000abe60168362000cb0565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b62000afc8162000d40565b82525050565b600060408201905062000b19600083018562000995565b62000b28602083018462000af1565b9392505050565b600060208201905062000b466000830184620009a6565b92915050565b600060608201905062000b636000830185620009f8565b818103602083015262000b778184620009b7565b9050818103604083015262000b8c8162000a2b565b90509392505050565b600060808201905062000bac600083018762000a09565b62000bbb602083018662000995565b62000bca604083018562000a1a565b818103606083015262000bde8184620009b7565b905095945050505050565b6000602082019050818103600083015262000c048162000a6d565b9050919050565b6000602082019050818103600083015262000c268162000aaf565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000c575762000c5662000dd0565b5b8060405250919050565b600067ffffffffffffffff82111562000c7f5762000c7e62000dd0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000cce8262000d20565b9050919050565b60008115159050919050565b6000819050919050565b600062000cf88262000cc1565b9050919050565b600062000d0c8262000cc1565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000d578262000d5e565b9050919050565b600062000d6b8262000d20565b9050919050565b600062000d7f8262000d86565b9050919050565b600062000d938262000d20565b9050919050565b60005b8381101562000dba57808201518184015260208101905062000d9d565b8381111562000dca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000e1b8162000cc1565b811462000e2757600080fd5b50565b62000e358162000cd5565b811462000e4157600080fd5b50565b62000e4f8162000ceb565b811462000e5b57600080fd5b50565b62000e698162000cff565b811462000e7557600080fd5b50565b62000e838162000d13565b811462000e8f57600080fd5b50565b62000e9d8162000d40565b811462000ea957600080fd5b50565b611a528062000ebc6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639dad9382116100665780639dad9382146100f8578063b6b55f2514610102578063b91461611461011e578063d3112b2e1461013c578063f2fde38b1461015b57610093565b80632484ea2f146100985780632e1a7d4d146100b4578063715018a6146100d05780638da5cb5b146100da575b600080fd5b6100b260048036038101906100ad91906112b7565b610177565b005b6100ce60048036038101906100c99190611370565b6103cc565b005b6100d86105b0565b005b6100e2610638565b6040516100ef91906115bb565b60405180910390f35b610100610661565b005b61011c60048036038101906101179190611370565b6107ee565b005b610126610961565b6040516101339190611783565b60405180910390f35b610144610a3a565b6040516101529291906116da565b60405180910390f35b6101756004803603810190610170919061128e565b610a8c565b005b61017f610d53565b73ffffffffffffffffffffffffffffffffffffffff1661019d610638565b73ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90611723565b60405180910390fd5b6102a6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025191906115bb565b60206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611399565b6103cc565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055506103c7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b6003610d5b909392919063ffffffff16565b505050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042891906115bb565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611399565b10156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090611763565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105189291906115d6565b602060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190611306565b9050806105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390611743565b60405180910390fd5b5050565b6105b8610d53565b73ffffffffffffffffffffffffffffffffffffffff166105d6610638565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611723565b60405180910390fd5b6106366000610f2a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610669610d53565b73ffffffffffffffffffffffffffffffffffffffff16610687610638565b73ffffffffffffffffffffffffffffffffffffffff16146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611723565b60405180910390fd5b61073933600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003610fee909392919063ffffffff16565b6107ec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161079791906115bb565b60206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190611399565b6103cc565b565b6107f6610d53565b73ffffffffffffffffffffffffffffffffffffffff16610814610638565b73ffffffffffffffffffffffffffffffffffffffff161461086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611723565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b81526004016108c99291906115d6565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611306565b90508061095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611743565b60405180910390fd5b5050565b60008060149054906101000a9004600b0b6bffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109db91906115bb565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611399565b610a35919061182c565b905090565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610a94610d53565b73ffffffffffffffffffffffffffffffffffffffff16610ab2610638565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90611723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611703565b60405180910390fd5b610b8181610f2a565b50565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c675781602001600182028036833780820191505090505b50604051602401610c7b949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610cf59291906115ff565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d4c919061132f565b5050505050565b600033905090565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff811115610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e5781602001600182028036833780820191505090505b50604051602401610e52949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610ecc9291906115ff565b600060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f23919061132f565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff81111561109f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110d15781602001600182028036833780820191505090505b506040516024016110e59493929190611642565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040161115f9291906115ff565b600060405180830381600087803b15801561117957600080fd5b505af115801561118d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111b6919061132f565b5050505050565b60006111d06111cb846117cf565b61179e565b9050828152602081018484840111156111e857600080fd5b6111f384828561191e565b509392505050565b60008135905061120a816119c0565b92915050565b60008151905061121f816119d7565b92915050565b600082601f83011261123657600080fd5b81516112468482602086016111bd565b91505092915050565b60008135905061125e816119ee565b92915050565b60008135905061127381611a05565b92915050565b60008151905061128881611a05565b92915050565b6000602082840312156112a057600080fd5b60006112ae848285016111fb565b91505092915050565b6000806000606084860312156112cc57600080fd5b60006112da868287016111fb565b93505060206112eb868287016111fb565b92505060406112fc8682870161124f565b9150509250925092565b60006020828403121561131857600080fd5b600061132684828501611210565b91505092915050565b60006020828403121561134157600080fd5b600082015167ffffffffffffffff81111561135b57600080fd5b61136784828501611225565b91505092915050565b60006020828403121561138257600080fd5b600061139084828501611264565b91505092915050565b6000602082840312156113ab57600080fd5b60006113b984828501611279565b91505092915050565b6113cb8161185d565b82525050565b60006113dc826117ff565b6113e6818561180a565b93506113f681856020860161191e565b6113ff816119af565b840191505092915050565b611413816118b2565b82525050565b611422816118d6565b82525050565b611431816118fa565b82525050565b6114408161187b565b82525050565b600061145360268361181b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114b960028361180a565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006114f960208361181b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061153960168361181b565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b600061157960138361181b565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b6115b5816118a8565b82525050565b60006020820190506115d060008301846113c2565b92915050565b60006040820190506115eb60008301856113c2565b6115f860208301846115ac565b9392505050565b6000606082019050611614600083018561140a565b818103602083015261162681846113d1565b90508181036040830152611639816114ac565b90509392505050565b60006080820190506116576000830187611419565b61166460208301866113c2565b61167160408301856113c2565b818103606083015261168381846113d1565b905095945050505050565b60006080820190506116a36000830187611419565b6116b060208301866113c2565b6116bd6040830185611437565b81810360608301526116cf81846113d1565b905095945050505050565b60006040820190506116ef6000830185611428565b6116fc602083018461140a565b9392505050565b6000602082019050818103600083015261171c81611446565b9050919050565b6000602082019050818103600083015261173c816114ec565b9050919050565b6000602082019050818103600083015261175c8161152c565b9050919050565b6000602082019050818103600083015261177c8161156c565b9050919050565b600060208201905061179860008301846115ac565b92915050565b6000604051905081810181811067ffffffffffffffff821117156117c5576117c4611980565b5b8060405250919050565b600067ffffffffffffffff8211156117ea576117e9611980565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611837826118a8565b9150611842836118a8565b92508261185257611851611951565b5b828204905092915050565b600061186882611888565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118bd826118c4565b9050919050565b60006118cf82611888565b9050919050565b60006118e1826118e8565b9050919050565b60006118f382611888565b9050919050565b60006119058261190c565b9050919050565b600061191782611888565b9050919050565b60005b8381101561193c578082015181840152602081019050611921565b8381111561194b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6119c98161185d565b81146119d457600080fd5b50565b6119e08161186f565b81146119eb57600080fd5b50565b6119f78161187b565b8114611a0257600080fd5b50565b611a0e816118a8565b8114611a1957600080fd5b5056fea2646970667358221220d40dfe86495a0947a0e66de216669e7d15179d2ccd1168a1ae87bef4fd06805164736f6c63430008000033a264697066735822122087352fc5887fc360902a6f8c103937bcc2a671cbdd7b6133603e9b02869be12664736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x52 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x455092E4 EQ PUSH3 0x57 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x77 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x83 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x6F SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH3 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x81 PUSH3 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH3 0x8D PUSH3 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x9C SWAP2 SWAP1 PUSH3 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xBD SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH3 0x2F3 JUMP JUMPDEST STOP JUMPDEST PUSH3 0xCF PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xEF PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x148 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x13F SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x15D SWAP1 PUSH3 0x4C3 JUMP JUMPDEST PUSH3 0x16D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x18A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3F0DAC050C8DCC7EED96AA013C13A55CCFCE67B511FAF2417C0BAD8C3CEABB0D DUP2 DUP6 DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH3 0x229 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x243 PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x263 PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2B3 SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x2C8 PUSH1 0x0 PUSH3 0x3FF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x2FD PUSH3 0x3F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x31D PUSH3 0x2CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x376 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x36D SWAP1 PUSH3 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3E0 SWAP1 PUSH3 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x3F4 DUP2 PUSH3 0x3FF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x290E DUP1 PUSH3 0x8E5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x4E2 DUP2 PUSH3 0x87C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x4F9 DUP2 PUSH3 0x896 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x510 DUP2 PUSH3 0x8B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x527 DUP2 PUSH3 0x8CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x550 DUP5 DUP3 DUP6 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x582 DUP9 DUP3 DUP10 ADD PUSH3 0x4E8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x595 DUP9 DUP3 DUP10 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x5A8 DUP9 DUP3 DUP10 ADD PUSH3 0x4D1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x5BB DUP9 DUP3 DUP10 ADD PUSH3 0x4FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x5CE DUP9 DUP3 DUP10 ADD PUSH3 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x5E6 DUP2 PUSH3 0x7F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x5F7 DUP2 PUSH3 0x854 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x608 DUP2 PUSH3 0x81D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61D PUSH1 0x26 DUP4 PUSH3 0x7E4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x685 PUSH1 0x20 DUP4 PUSH3 0x7E4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C3 DUP2 PUSH3 0x84A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x5DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x6FD PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x70C PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x71B PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x72A PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x739 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x6B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x75A PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x5EC JUMP JUMPDEST PUSH3 0x769 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x778 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x787 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x5FD JUMP JUMPDEST PUSH3 0x796 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x6B8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7BB DUP2 PUSH3 0x60E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7DD DUP2 PUSH3 0x676 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x802 DUP3 PUSH3 0x82A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x816 DUP3 PUSH3 0x7F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x861 DUP3 PUSH3 0x868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x875 DUP3 PUSH3 0x82A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x887 DUP2 PUSH3 0x7F5 JUMP JUMPDEST DUP2 EQ PUSH3 0x893 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8A1 DUP2 PUSH3 0x809 JUMP JUMPDEST DUP2 EQ PUSH3 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8BB DUP2 PUSH3 0x81D JUMP JUMPDEST DUP2 EQ PUSH3 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x8D5 DUP2 PUSH3 0x84A JUMP JUMPDEST DUP2 EQ PUSH3 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x290E CODESIZE SUB DUP1 PUSH3 0x290E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x913 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x325 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD9 SWAP2 SWAP1 PUSH3 0xB2F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x12D SWAP2 SWAP1 PUSH3 0x8E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH3 0x1EA DUP2 PUSH3 0x3E9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x312 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH3 0x578 PUSH1 0x20 SHL PUSH3 0xB84 OR SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0xEAC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x41F PUSH3 0x751 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x46F SWAP1 PUSH3 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4D9 SWAP3 SWAP2 SWAP1 PUSH3 0xB02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x52F SWAP2 SWAP1 PUSH3 0x876 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x56B SWAP1 PUSH3 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x62A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x673 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6EF SWAP3 SWAP2 SWAP1 PUSH3 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x71F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x74A SWAP2 SWAP1 PUSH3 0x8A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 PUSH3 0x78B DUP5 PUSH3 0xC61 JUMP JUMPDEST PUSH3 0xC2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7B7 DUP5 DUP3 DUP6 PUSH3 0xD9A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7D0 DUP2 PUSH3 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7E7 DUP2 PUSH3 0xE2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x811 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x77A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x82B DUP2 PUSH3 0xE44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x842 DUP2 PUSH3 0xE5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x859 DUP2 PUSH3 0xE78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x870 DUP2 PUSH3 0xE92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x899 DUP5 DUP3 DUP6 ADD PUSH3 0x7D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8DE DUP5 DUP3 DUP6 ADD PUSH3 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x90A DUP5 DUP3 DUP6 ADD PUSH3 0x81A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x93C DUP9 DUP3 DUP10 ADD PUSH3 0x831 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x94F DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x962 DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x975 DUP9 DUP3 DUP10 ADD PUSH3 0x848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x988 DUP9 DUP3 DUP10 ADD PUSH3 0x85F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x9A0 DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9B1 DUP2 PUSH3 0xCE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C4 DUP3 PUSH3 0xC94 JUMP JUMPDEST PUSH3 0x9D0 DUP2 DUP6 PUSH3 0xC9F JUMP JUMPDEST SWAP4 POP PUSH3 0x9E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD9A JUMP JUMPDEST PUSH3 0x9ED DUP2 PUSH3 0xDFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA03 DUP2 PUSH3 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA14 DUP2 PUSH3 0xD72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA25 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA3A PUSH1 0x2 DUP4 PUSH3 0xC9F JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA7C PUSH1 0x20 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABE PUSH1 0x16 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAFC DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xB19 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xB28 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xAF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB46 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB63 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x9F8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xB77 DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xB8C DUP2 PUSH3 0xA2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xBAC PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xA09 JUMP JUMPDEST PUSH3 0xBBB PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xBCA PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xA1A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0xBDE DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC04 DUP2 PUSH3 0xA6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC26 DUP2 PUSH3 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xC57 JUMPI PUSH3 0xC56 PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xC7F JUMPI PUSH3 0xC7E PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCCE DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCF8 DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD0C DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD57 DUP3 PUSH3 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD6B DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD7F DUP3 PUSH3 0xD86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD93 DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0xDCA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE1B DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH3 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE35 DUP2 PUSH3 0xCD5 JUMP JUMPDEST DUP2 EQ PUSH3 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE4F DUP2 PUSH3 0xCEB JUMP JUMPDEST DUP2 EQ PUSH3 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE69 DUP2 PUSH3 0xCFF JUMP JUMPDEST DUP2 EQ PUSH3 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE83 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP2 EQ PUSH3 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE9D DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP2 EQ PUSH3 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A52 DUP1 PUSH3 0xEBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DAD9382 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xB9146161 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2484EA2F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3C7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH2 0xD5B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH1 0x0 PUSH2 0xF2A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x687 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xFEE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7EC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x814 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xF2A JUMP JUMPDEST POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC67 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE3E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH2 0x11CB DUP5 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 DUP3 DUP6 PUSH2 0x191E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120A DUP2 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x121F DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1246 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125E DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1273 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP5 DUP3 DUP6 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12EB DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12FC DUP7 DUP3 DUP8 ADD PUSH2 0x124F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DC DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x13E6 DUP2 DUP6 PUSH2 0x180A JUMP JUMPDEST SWAP4 POP PUSH2 0x13F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x19AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1413 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x18D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x18FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1453 PUSH1 0x26 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 PUSH1 0x2 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 PUSH1 0x20 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x16 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 PUSH1 0x13 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x15F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x1664 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x1671 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1683 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x16B0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1437 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x16FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173C DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175C DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP3 PUSH2 0x18A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1842 DUP4 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1951 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP3 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1921 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C9 DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x186F JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0E DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD INVALID DUP7 0x49 GAS MULMOD SELFBALANCE LOG0 0xE6 PUSH14 0xE216669E7D15179D2CCD1168A1AE DUP8 0xBE DELEGATECALL REVERT MOD DUP1 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 CALLDATALOAD 0x2F 0xC5 DUP9 PUSH32 0xC360902A6F8C103937BCC2A671CBDD7B6133603E9B02869BE12664736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "286:553:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:367;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;467:367:16;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;617:17:16::1;650:4;656:9;667:6;675:9;686:7;637:57;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;617:77;;715:9;730:8;715:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:67;775:8;786:6;794:9;805;816:7;757:67;;;;;;;;;;:::i;:::-;;;;;;;;1318:1:0;467:367:16::0;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;1918:198::-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:19:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:179::-;;256:6;243:20;234:29;;272:53;319:5;272:53;:::i;:::-;224:107;;;;:::o;337:135::-;;419:6;406:20;397:29;;435:31;460:5;435:31;:::i;:::-;387:85;;;;:::o;478:139::-;;562:6;549:20;540:29;;578:33;605:5;578:33;:::i;:::-;530:87;;;;:::o;623:262::-;;731:2;719:9;710:7;706:23;702:32;699:2;;;747:1;744;737:12;699:2;790:1;815:53;860:7;851:6;840:9;836:22;815:53;:::i;:::-;805:63;;761:117;689:196;;;;:::o;891:880::-;;;;;;1085:3;1073:9;1064:7;1060:23;1056:33;1053:2;;;1102:1;1099;1092:12;1053:2;1145:1;1170:73;1235:7;1226:6;1215:9;1211:22;1170:73;:::i;:::-;1160:83;;1116:137;1292:2;1318:53;1363:7;1354:6;1343:9;1339:22;1318:53;:::i;:::-;1308:63;;1263:118;1420:2;1446:53;1491:7;1482:6;1471:9;1467:22;1446:53;:::i;:::-;1436:63;;1391:118;1548:2;1574:51;1617:7;1608:6;1597:9;1593:22;1574:51;:::i;:::-;1564:61;;1519:116;1674:3;1701:53;1746:7;1737:6;1726:9;1722:22;1701:53;:::i;:::-;1691:63;;1645:119;1043:728;;;;;;;;:::o;1777:118::-;1864:24;1882:5;1864:24;:::i;:::-;1859:3;1852:37;1842:53;;:::o;1901:171::-;2008:57;2059:5;2008:57;:::i;:::-;2003:3;1996:70;1986:86;;:::o;2078:112::-;2161:22;2177:5;2161:22;:::i;:::-;2156:3;2149:35;2139:51;;:::o;2196:370::-;;2359:67;2423:2;2418:3;2359:67;:::i;:::-;2352:74;;2456:34;2452:1;2447:3;2443:11;2436:55;2522:8;2517:2;2512:3;2508:12;2501:30;2557:2;2552:3;2548:12;2541:19;;2342:224;;;:::o;2572:330::-;;2735:67;2799:2;2794:3;2735:67;:::i;:::-;2728:74;;2832:34;2828:1;2823:3;2819:11;2812:55;2893:2;2888:3;2884:12;2877:19;;2718:184;;;:::o;2908:118::-;2995:24;3013:5;2995:24;:::i;:::-;2990:3;2983:37;2973:53;;:::o;3032:222::-;;3163:2;3152:9;3148:18;3140:26;;3176:71;3244:1;3233:9;3229:17;3220:6;3176:71;:::i;:::-;3130:124;;;;:::o;3260:656::-;;3499:3;3488:9;3484:19;3476:27;;3513:71;3581:1;3570:9;3566:17;3557:6;3513:71;:::i;:::-;3594:72;3662:2;3651:9;3647:18;3638:6;3594:72;:::i;:::-;3676;3744:2;3733:9;3729:18;3720:6;3676:72;:::i;:::-;3758:68;3822:2;3811:9;3807:18;3798:6;3758:68;:::i;:::-;3836:73;3904:3;3893:9;3889:19;3880:6;3836:73;:::i;:::-;3466:450;;;;;;;;:::o;3922:696::-;;4181:3;4170:9;4166:19;4158:27;;4195:91;4283:1;4272:9;4268:17;4259:6;4195:91;:::i;:::-;4296:72;4364:2;4353:9;4349:18;4340:6;4296:72;:::i;:::-;4378;4446:2;4435:9;4431:18;4422:6;4378:72;:::i;:::-;4460:68;4524:2;4513:9;4509:18;4500:6;4460:68;:::i;:::-;4538:73;4606:3;4595:9;4591:19;4582:6;4538:73;:::i;:::-;4148:470;;;;;;;;:::o;4624:419::-;;4828:2;4817:9;4813:18;4805:26;;4877:9;4871:4;4867:20;4863:1;4852:9;4848:17;4841:47;4905:131;5031:4;4905:131;:::i;:::-;4897:139;;4795:248;;;:::o;5049:419::-;;5253:2;5242:9;5238:18;5230:26;;5302:9;5296:4;5292:20;5288:1;5277:9;5273:17;5266:47;5330:131;5456:4;5330:131;:::i;:::-;5322:139;;5220:248;;;:::o;5474:169::-;;5592:6;5587:3;5580:19;5632:4;5627:3;5623:14;5608:29;;5570:73;;;;:::o;5649:96::-;;5715:24;5733:5;5715:24;:::i;:::-;5704:35;;5694:51;;;:::o;5751:116::-;;5837:24;5855:5;5837:24;:::i;:::-;5826:35;;5816:51;;;:::o;5873:91::-;;5952:5;5948:2;5937:21;5926:32;;5916:48;;;:::o;5970:126::-;;6047:42;6040:5;6036:54;6025:65;;6015:81;;;:::o;6102:77::-;;6168:5;6157:16;;6147:32;;;:::o;6185:166::-;;6288:57;6339:5;6288:57;:::i;:::-;6275:70;;6265:86;;;:::o;6357:133::-;;6460:24;6478:5;6460:24;:::i;:::-;6447:37;;6437:53;;;:::o;6496:122::-;6569:24;6587:5;6569:24;:::i;:::-;6562:5;6559:35;6549:2;;6608:1;6605;6598:12;6549:2;6539:79;:::o;6624:162::-;6717:44;6755:5;6717:44;:::i;:::-;6710:5;6707:55;6697:2;;6776:1;6773;6766:12;6697:2;6687:99;:::o;6792:118::-;6863:22;6879:5;6863:22;:::i;:::-;6856:5;6853:33;6843:2;;6900:1;6897;6890:12;6843:2;6833:77;:::o;6916:122::-;6989:24;7007:5;6989:24;:::i;:::-;6982:5;6979:35;6969:2;;7028:1;7025;7018:12;6969:2;6959:79;:::o"
            },
            "methodIdentifiers": {
              "createNewStream(address,address,address,int96,uint256)": "455092e4",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"newStream\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"createNewStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Controller.sol\":\"Controller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]},\"contracts/interfaces/Controller.sol\":{\"keccak256\":\"0xcbdc7ada20789d10814bdc380c5b1fc72aa0567927fa49fee9f295276092c301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://794f9143e50a3c726e3fbb0f2ce39b23dd57c73b9886eb4efccad0d3e85702f0\",\"dweb:/ipfs/QmYSWydQQGFzVkj6AZBTy6ASioHszgLiiz7YWHRNtbfLn1\"]},\"contracts/interfaces/Streamer.sol\":{\"keccak256\":\"0x6769a6868a1acf2f3bc24b12b4f0e4151a5a75e6a44956a5a019b1fa4c8f6802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8956c8c49bddbf0d2fa136ee0ae69906c9dcb5e58a6ac53816ce8b4f4fd1924\",\"dweb:/ipfs/QmdEYdBJtcPt2gZ2uCYGGfbFMqJxmTQywXnyoSNZUe19j3\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ControllerFactory.sol": {
        "ControllerFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c28bf30984ed48677d170400e78b58040bc73e6e5acf781fc229001f11da207f64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 DUP12 RETURN MULMOD DUP5 0xED 0x48 PUSH8 0x7D170400E78B5804 SIGNEXTEND 0xC7 RETURNDATACOPY PUSH15 0x5ACF781FC229001F11DA207F64736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "61:81:17:-:0;;;97:40;;;;;;;;;;61:81;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea2646970667358221220c28bf30984ed48677d170400e78b58040bc73e6e5acf781fc229001f11da207f64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 DUP12 RETURN MULMOD DUP5 0xED 0x48 PUSH8 0x7D170400E78B5804 SIGNEXTEND 0xC7 RETURNDATACOPY PUSH15 0x5ACF781FC229001F11DA207F64736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "61:81:17:-:0;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ControllerFactory.sol\":\"ControllerFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ControllerFactory.sol\":{\"keccak256\":\"0x43b8c9ff5f5445a8041d46dd021ccfb99d4d8f2268fbd506b634bbb398e112f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://706d5b7f3607c9644969d3be08371a471e339fb0f177b81c7087c3be431eb2a4\",\"dweb:/ipfs/QmeS7oYkUTLs1vijvC4TMgZYfekMGEGsBgC2eLbVL6z2fW\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/Streamer.sol": {
        "Streamer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "cfaV1",
              "outputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract IConstantFlowAgreementV1",
                  "name": "cfa",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closeStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                }
              ],
              "name": "editStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStreamerETA",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:12766:19",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "101:257:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "111:73:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "176:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "135:40:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "135:48:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:14:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:64:19"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "200:5:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "207:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "193:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "193:21:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "193:21:19"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "223:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "238:5:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "245:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:16:19"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "227:3:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "288:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "297:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "300:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "290:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "290:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "290:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "269:3:19"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:16:19"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:3:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "262:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "262:25:19"
                              },
                              "nodeType": "YulIf",
                              "src": "259:2:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:3:19"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "345:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "313:21:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "313:39:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "313:39:19"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "74:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "79:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "87:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "95:5:19",
                            "type": ""
                          }
                        ],
                        "src": "7:351:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "427:80:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "437:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "437:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "495:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "468:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "468:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "468:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "405:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "413:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "421:5:19",
                            "type": ""
                          }
                        ],
                        "src": "364:143:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "573:77:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "583:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "598:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "592:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "592:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "583:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "638:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:23:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:30:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "614:30:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "551:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "559:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "567:5:19",
                            "type": ""
                          }
                        ],
                        "src": "513:137:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "741:214:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "790:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "799:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "802:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "792:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "792:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "792:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "769:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "777:4:19",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "765:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "765:17:19"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "784:3:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "761:27:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "754:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "754:35:19"
                              },
                              "nodeType": "YulIf",
                              "src": "751:2:19"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "815:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "835:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "829:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "829:13:19"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "819:6:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "851:98:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "922:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "930:4:19",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "918:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "918:17:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "937:6:19"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "945:3:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "860:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "860:89:19"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "851:5:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "719:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "727:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "735:5:19",
                            "type": ""
                          }
                        ],
                        "src": "669:286:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1048:104:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1058:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1073:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1067:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1067:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1058:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1140:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperAgreement_$1403",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:50:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1089:57:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1089:57:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperAgreement_$1403_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1026:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1034:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1042:5:19",
                            "type": ""
                          }
                        ],
                        "src": "961:191:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1241:100:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1251:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1266:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1260:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1260:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1329:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperfluid_$2414",
                                  "nodeType": "YulIdentifier",
                                  "src": "1282:46:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1282:53:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1282:53:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperfluid_$2414_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1219:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1227:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1235:5:19",
                            "type": ""
                          }
                        ],
                        "src": "1158:183:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1408:78:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1418:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1433:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1427:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1427:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1418:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1474:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:24:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1449:31:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1449:31:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1386:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1394:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1402:5:19",
                            "type": ""
                          }
                        ],
                        "src": "1347:139:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1555:80:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1565:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1580:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1574:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1574:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1565:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1623:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1596:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1596:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1596:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1533:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1541:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1549:5:19",
                            "type": ""
                          }
                        ],
                        "src": "1492:143:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1715:204:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1761:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1770:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1773:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1763:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1763:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1763:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1736:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1745:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1732:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1732:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1757:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1728:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1728:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "1725:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1787:125:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1802:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1816:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1806:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1831:71:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1874:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1885:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1870:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1870:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1894:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1841:28:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1841:61:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1831:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1685:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1696:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1708:6:19",
                            "type": ""
                          }
                        ],
                        "src": "1641:278:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2011:302:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2057:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2066:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2069:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2059:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2059:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2059:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2032:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2041:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2028:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2028:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2053:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2024:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2024:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2021:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2083:223:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2098:38:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2122:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2133:1:19",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2118:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2118:17:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2112:5:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2112:24:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2102:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2183:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2192:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2195:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2185:6:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2185:12:19"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2185:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2155:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2163:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2152:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2152:30:19"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "2149:2:19"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2213:83:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2268:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2279:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2264:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2264:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2288:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2223:40:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2223:73:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2213:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1981:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1992:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2004:6:19",
                            "type": ""
                          }
                        ],
                        "src": "1925:388:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2420:231:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2466:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2475:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2478:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2468:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2468:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2468:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2441:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2450:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2437:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2437:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2462:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2433:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2433:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2430:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2492:152:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2507:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2521:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2511:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2536:98:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2606:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2617:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2602:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2602:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2626:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperAgreement_$1403_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2546:55:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2546:88:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2536:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperAgreement_$1403_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2390:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2401:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2413:6:19",
                            "type": ""
                          }
                        ],
                        "src": "2319:332:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2820:783:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2867:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2876:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2879:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2869:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2869:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2869:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2841:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2850:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2837:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2837:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2862:3:19",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2833:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2833:33:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2830:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2893:148:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2908:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2922:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2912:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2937:94:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3003:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3014:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2999:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2999:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3023:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperfluid_$2414_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2947:51:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2947:84:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2937:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3051:129:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3066:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3080:2:19",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3070:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3096:74:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3142:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3153:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3138:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3138:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3162:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3106:31:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3106:64:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3096:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3190:129:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3205:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3219:2:19",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3209:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3235:74:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3281:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3292:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3277:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3277:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3301:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3245:31:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3245:64:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3235:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3329:127:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3344:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3358:2:19",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3348:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3374:72:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3418:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3429:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3414:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3414:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3438:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3384:29:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3384:62:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3374:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3466:130:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3481:17:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3495:3:19",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3485:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3512:74:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3558:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3569:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3554:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3554:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3578:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3522:31:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3522:64:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "3512:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperfluid_$2414t_addresst_addresst_int96t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2758:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2769:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2781:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2789:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2797:6:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2805:6:19",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2813:6:19",
                            "type": ""
                          }
                        ],
                        "src": "2657:946:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3674:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3691:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3714:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3696:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3696:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3684:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3684:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3684:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3662:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3669:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3609:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3798:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3815:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3838:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "3820:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3820:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3808:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3808:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3808:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3786:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3793:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3733:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3947:270:19",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3957:52:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4003:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3971:31:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3971:38:19"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3961:6:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4018:77:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4083:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4088:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4025:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4025:70:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4018:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4130:5:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4137:4:19",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4126:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4126:16:19"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4144:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4149:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4104:21:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4104:52:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4104:52:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4165:46:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4176:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4203:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "4181:21:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4181:29:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4172:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4172:39:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4165:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3928:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3935:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3943:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3857:360:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4321:99:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4338:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4407:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4343:63:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4343:70:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4331:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4331:83:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4331:83:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4309:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4316:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4223:197:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4516:91:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4533:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4594:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4538:55:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4538:62:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4526:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4526:75:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4526:75:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4504:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4511:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4426:181:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4674:51:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4691:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4712:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "4696:15:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4696:22:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4684:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4684:35:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4684:35:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int96_to_t_int96_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4662:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4669:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4613:112:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4876:152:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4886:72:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4951:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4956:1:19",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4893:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4893:65:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4886:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4979:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4984:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4975:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4975:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4988:4:19",
                                    "type": "",
                                    "value": "0x"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4968:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4968:25:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4968:25:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5003:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5014:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5019:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5010:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5010:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4864:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4872:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4731:297:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5180:184:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5190:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5256:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5261:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5197:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5197:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5190:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5285:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5290:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5281:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5281:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5294:34:19",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5274:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5274:55:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5274:55:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5339:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5350:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5355:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5346:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5346:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5339:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5168:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5176:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5034:330:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5516:174:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5526:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5592:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5597:2:19",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5533:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5533:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5526:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5621:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5626:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5617:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5617:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5630:24:19",
                                    "type": "",
                                    "value": "Token transfer failed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5610:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5610:45:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5610:45:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5665:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5676:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5681:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5672:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5672:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5665:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5504:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5512:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5370:320:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5761:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5778:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5801:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5783:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5783:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5771:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5771:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5771:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5749:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5756:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5696:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5946:206:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5956:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5968:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5979:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5964:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5964:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5956:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6036:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6049:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6060:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6045:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6045:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5992:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5992:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5992:71:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6117:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6130:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6141:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6126:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6126:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6073:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6073:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6073:72:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5910:9:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5922:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5930:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5941:4:19",
                            "type": ""
                          }
                        ],
                        "src": "5820:332:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6256:124:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6266:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6278:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6289:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6274:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6274:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6266:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6346:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6359:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6370:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6355:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6355:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6302:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6302:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6302:71:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6228:9:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6240:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6251:4:19",
                            "type": ""
                          }
                        ],
                        "src": "6158:222:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6663:513:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6673:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6685:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6696:2:19",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6681:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6681:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6673:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6786:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6799:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6810:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6795:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6795:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6709:76:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6709:104:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6709:104:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6834:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6845:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6830:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6830:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "6854:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6860:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6850:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6850:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6823:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6823:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6823:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6880:84:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6950:6:19"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "6959:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6888:61:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6888:76:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6880:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6985:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6996:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6981:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6981:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7005:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7011:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7001:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7001:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6974:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6974:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6974:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7031:138:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7164:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7039:123:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7039:130:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$1054_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6627:9:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6639:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6647:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6658:4:19",
                            "type": ""
                          }
                        ],
                        "src": "6386:790:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7403:461:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7413:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7425:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7436:3:19",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7421:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7421:19:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7413:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7519:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7532:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7543:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7528:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7528:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7450:68:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7450:96:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7450:96:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7600:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7613:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7624:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7609:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7609:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7556:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7556:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7556:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7678:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7691:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7702:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7687:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7687:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7638:39:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7638:68:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7638:68:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7727:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7738:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7723:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7723:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7747:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7753:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7743:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7743:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7716:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7716:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7716:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7773:84:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7843:6:19"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7852:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7781:61:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7781:76:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7773:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7351:9:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7363:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7371:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7379:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7387:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7398:4:19",
                            "type": ""
                          }
                        ],
                        "src": "7182:682:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8041:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8051:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8063:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8074:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8059:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8059:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8051:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8098:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8109:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8094:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8094:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "8117:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8123:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8113:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8113:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8087:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8087:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8087:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8143:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "8277:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8151:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8151:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8143:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8021:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8036:4:19",
                            "type": ""
                          }
                        ],
                        "src": "7870:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8466:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8476:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8488:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8499:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8484:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8484:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8476:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8523:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8534:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8519:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8519:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "8542:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8548:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8538:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8538:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8512:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8512:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8512:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8568:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "8702:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8576:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8576:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8568:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8446:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8461:4:19",
                            "type": ""
                          }
                        ],
                        "src": "8295:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8760:243:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8770:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8786:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8780:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8780:9:19"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8770:6:19"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8798:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8820:6:19"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "8828:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8816:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8816:17:19"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "8802:10:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8944:22:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "8946:16:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8946:18:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8946:18:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8887:10:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8899:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8884:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8884:34:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8923:10:19"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "8935:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8920:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8920:22:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "8881:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8881:62:19"
                              },
                              "nodeType": "YulIf",
                              "src": "8878:2:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8982:2:19",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "8986:10:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8975:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8975:22:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8975:22:19"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "8744:4:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "8753:6:19",
                            "type": ""
                          }
                        ],
                        "src": "8720:283:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9075:265:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9180:22:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "9182:16:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9182:18:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9182:18:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9152:6:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9160:18:19",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9149:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9149:30:19"
                              },
                              "nodeType": "YulIf",
                              "src": "9146:2:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9232:41:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "9248:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9256:4:19",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9244:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9244:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9267:4:19",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "9263:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9263:9:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "9240:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9240:33:19"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "9232:4:19"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9310:23:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "9322:4:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9328:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9318:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9318:15:19"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "9310:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "9059:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "9070:4:19",
                            "type": ""
                          }
                        ],
                        "src": "9009:331:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9404:40:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9415:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9431:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9425:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9425:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9415:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9387:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "9397:6:19",
                            "type": ""
                          }
                        ],
                        "src": "9346:98:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9545:73:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9562:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9567:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9555:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9555:19:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9555:19:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9583:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9602:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9607:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9598:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9598:14:19"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9583:11:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9517:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "9522:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "9533:11:19",
                            "type": ""
                          }
                        ],
                        "src": "9450:168:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9720:73:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9737:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9742:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9730:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9730:19:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9730:19:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9758:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9777:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9782:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9773:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9773:14:19"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9758:11:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9692:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "9697:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "9708:11:19",
                            "type": ""
                          }
                        ],
                        "src": "9624:169:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9844:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9854:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9883:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "9865:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9865:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "9854:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9826:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "9836:7:19",
                            "type": ""
                          }
                        ],
                        "src": "9799:96:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9943:48:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9953:32:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9978:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "9971:6:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9971:13:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9964:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9964:21:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "9953:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9925:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "9935:7:19",
                            "type": ""
                          }
                        ],
                        "src": "9901:90:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10042:32:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10052:16:19",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10063:5:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10052:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10024:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10034:7:19",
                            "type": ""
                          }
                        ],
                        "src": "9997:77:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10149:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10159:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10188:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "10170:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10170:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10159:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperAgreement_$1403",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10131:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10141:7:19",
                            "type": ""
                          }
                        ],
                        "src": "10080:120:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10271:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10281:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10310:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "10292:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10292:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10281:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperfluid_$2414",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10253:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10263:7:19",
                            "type": ""
                          }
                        ],
                        "src": "10206:116:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10371:48:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10381:32:19",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10403:2:19",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10407:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "10392:10:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10392:21:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10381:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10353:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10363:7:19",
                            "type": ""
                          }
                        ],
                        "src": "10328:91:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10470:81:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10480:65:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10495:5:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10502:42:19",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10491:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10491:54:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10480:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10452:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10462:7:19",
                            "type": ""
                          }
                        ],
                        "src": "10425:126:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10602:32:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10612:16:19",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10623:5:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "10612:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10584:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "10594:7:19",
                            "type": ""
                          }
                        ],
                        "src": "10557:77:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10733:99:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10743:83:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10820:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "10756:63:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10756:70:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "10743:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10713:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "10723:9:19",
                            "type": ""
                          }
                        ],
                        "src": "10640:192:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10931:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10941:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10972:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "10954:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10954:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "10941:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10911:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "10921:9:19",
                            "type": ""
                          }
                        ],
                        "src": "10838:146:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11075:91:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11085:75:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11154:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "11098:55:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11098:62:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "11085:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11055:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "11065:9:19",
                            "type": ""
                          }
                        ],
                        "src": "10990:176:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11257:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11267:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11298:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "11280:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11280:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "11267:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11237:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "11247:9:19",
                            "type": ""
                          }
                        ],
                        "src": "11172:138:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11365:258:19",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11375:10:19",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11384:1:19",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "11379:1:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11444:63:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "11469:3:19"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "11474:1:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11465:3:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11465:11:19"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11488:3:19"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11493:1:19"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "11484:3:19"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11484:11:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "11478:5:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11478:18:19"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11458:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11458:39:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11458:39:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "11405:1:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11408:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11402:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11402:13:19"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "11416:19:19",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "11418:15:19",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "11427:1:19"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11430:2:19",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "11423:3:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11423:10:19"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "11418:1:19"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "11398:3:19",
                                "statements": []
                              },
                              "src": "11394:113:19"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11541:76:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "11591:3:19"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "11596:6:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "11587:3:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11587:16:19"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11605:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "11580:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11580:27:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11580:27:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "11522:1:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11525:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11519:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11519:13:19"
                              },
                              "nodeType": "YulIf",
                              "src": "11516:2:19"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "11347:3:19",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "11352:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11357:6:19",
                            "type": ""
                          }
                        ],
                        "src": "11316:307:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11657:152:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11674:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11677:77:19",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11667:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11667:88:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11667:88:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11771:1:19",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11774:4:19",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11764:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11764:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11764:15:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11795:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11798:4:19",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11788:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11788:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11788:15:19"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "11629:180:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11863:54:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11873:38:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11891:5:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11898:2:19",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11887:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11887:14:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11907:2:19",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "11903:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11903:7:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11883:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11883:28:19"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "11873:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11846:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "11856:6:19",
                            "type": ""
                          }
                        ],
                        "src": "11815:102:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11966:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12023:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12032:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12035:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12025:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12025:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12025:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11989:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12014:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "11996:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11996:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "11986:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11986:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11979:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11979:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "11976:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11959:5:19",
                            "type": ""
                          }
                        ],
                        "src": "11923:122:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12091:76:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12145:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12154:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12157:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12147:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12147:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12147:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12114:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12136:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "12121:14:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12121:21:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12111:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12111:32:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12104:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12104:40:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12101:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12084:5:19",
                            "type": ""
                          }
                        ],
                        "src": "12051:116:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12240:103:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12321:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12330:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12333:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12323:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12323:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12323:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12263:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12312:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperAgreement_$1403",
                                          "nodeType": "YulIdentifier",
                                          "src": "12270:41:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12270:48:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12260:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12260:59:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12253:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12253:67:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12250:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperAgreement_$1403",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12233:5:19",
                            "type": ""
                          }
                        ],
                        "src": "12173:170:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12412:99:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12489:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12498:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12501:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12491:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12491:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12491:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12435:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12480:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperfluid_$2414",
                                          "nodeType": "YulIdentifier",
                                          "src": "12442:37:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12442:44:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12432:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12432:55:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12425:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12425:63:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12422:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperfluid_$2414",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12405:5:19",
                            "type": ""
                          }
                        ],
                        "src": "12349:162:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12558:77:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12613:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12622:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12625:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12615:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12615:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12615:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12581:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12604:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "12588:15:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12588:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12578:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12578:33:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12571:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12571:41:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12568:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12551:5:19",
                            "type": ""
                          }
                        ],
                        "src": "12517:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12684:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12741:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12750:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12753:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12743:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12743:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12743:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12707:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "12732:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "12714:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12714:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "12704:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12704:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12697:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12697:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12694:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12677:5:19",
                            "type": ""
                          }
                        ],
                        "src": "12641:122:19"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_ISuperAgreement_$1403_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISuperAgreement_$1403(value)\n    }\n\n    function abi_decode_t_contract$_ISuperfluid_$2414_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISuperfluid_$2414(value)\n    }\n\n    function abi_decode_t_int96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperAgreement_$1403_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperAgreement_$1403_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperfluid_$2414t_addresst_addresst_int96t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperfluid_$2414_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluidToken_$2785_to_t_address(value))\n    }\n\n    function abi_encode_t_int96_to_t_int96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int96(value))\n    }\n\n    function abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 2)\n\n        mstore(add(pos, 0), \"0x\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"Token transfer failed.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$1054_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_contract$_ISuperAgreement_$1403(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_ISuperfluid_$2414(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2785_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperAgreement_$1403(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperAgreement_$1403(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperfluid_$2414(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperfluid_$2414(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 19,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b506040516200290e3803806200290e833981810160405281019062000037919062000913565b620000576200004b6200031d60201b60201c565b6200032560201b60201c565b60405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000d9919062000b2f565b60206040518083038186803b158015620000f257600080fd5b505afa15801562000107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012d9190620008e7565b73ffffffffffffffffffffffffffffffffffffffff16815250600360008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050620001ea81620003e960201b60201c565b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000312600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b60036200057860201b62000b8417909392919060201c565b505050505062000eac565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620003f96200031d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff166200041f6200075160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200046f9062000be9565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b8152600401620004d992919062000b02565b602060405180830381600087803b158015620004f457600080fd5b505af115801562000509573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200052f919062000876565b90508062000574576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200056b9062000c0b565b60405180910390fd5b5050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff8111156200062a577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156200065d5781602001600182028036833780820191505090505b5060405160240162000673949392919062000b95565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401620006ef92919062000b4c565b600060405180830381600087803b1580156200070a57600080fd5b505af11580156200071f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906200074a9190620008a2565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000620007916200078b8462000c61565b62000c2d565b905082815260208101848484011115620007aa57600080fd5b620007b784828562000d9a565b509392505050565b600081519050620007d08162000e10565b92915050565b600081519050620007e78162000e2a565b92915050565b600082601f830112620007ff57600080fd5b8151620008118482602086016200077a565b91505092915050565b6000815190506200082b8162000e44565b92915050565b600081519050620008428162000e5e565b92915050565b600081519050620008598162000e78565b92915050565b600081519050620008708162000e92565b92915050565b6000602082840312156200088957600080fd5b60006200089984828501620007d6565b91505092915050565b600060208284031215620008b557600080fd5b600082015167ffffffffffffffff811115620008d057600080fd5b620008de84828501620007ed565b91505092915050565b600060208284031215620008fa57600080fd5b60006200090a848285016200081a565b91505092915050565b600080600080600060a086880312156200092c57600080fd5b60006200093c8882890162000831565b95505060206200094f88828901620007bf565b94505060406200096288828901620007bf565b9350506060620009758882890162000848565b925050608062000988888289016200085f565b9150509295509295909350565b620009a08162000cc1565b82525050565b620009b18162000ce1565b82525050565b6000620009c48262000c94565b620009d0818562000c9f565b9350620009e281856020860162000d9a565b620009ed8162000dff565b840191505092915050565b62000a038162000d4a565b82525050565b62000a148162000d72565b82525050565b62000a258162000d13565b82525050565b600062000a3a60028362000c9f565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b600062000a7c60208362000cb0565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600062000abe60168362000cb0565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b62000afc8162000d40565b82525050565b600060408201905062000b19600083018562000995565b62000b28602083018462000af1565b9392505050565b600060208201905062000b466000830184620009a6565b92915050565b600060608201905062000b636000830185620009f8565b818103602083015262000b778184620009b7565b9050818103604083015262000b8c8162000a2b565b90509392505050565b600060808201905062000bac600083018762000a09565b62000bbb602083018662000995565b62000bca604083018562000a1a565b818103606083015262000bde8184620009b7565b905095945050505050565b6000602082019050818103600083015262000c048162000a6d565b9050919050565b6000602082019050818103600083015262000c268162000aaf565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000c575762000c5662000dd0565b5b8060405250919050565b600067ffffffffffffffff82111562000c7f5762000c7e62000dd0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000cce8262000d20565b9050919050565b60008115159050919050565b6000819050919050565b600062000cf88262000cc1565b9050919050565b600062000d0c8262000cc1565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000d578262000d5e565b9050919050565b600062000d6b8262000d20565b9050919050565b600062000d7f8262000d86565b9050919050565b600062000d938262000d20565b9050919050565b60005b8381101562000dba57808201518184015260208101905062000d9d565b8381111562000dca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000e1b8162000cc1565b811462000e2757600080fd5b50565b62000e358162000cd5565b811462000e4157600080fd5b50565b62000e4f8162000ceb565b811462000e5b57600080fd5b50565b62000e698162000cff565b811462000e7557600080fd5b50565b62000e838162000d13565b811462000e8f57600080fd5b50565b62000e9d8162000d40565b811462000ea957600080fd5b50565b611a528062000ebc6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639dad9382116100665780639dad9382146100f8578063b6b55f2514610102578063b91461611461011e578063d3112b2e1461013c578063f2fde38b1461015b57610093565b80632484ea2f146100985780632e1a7d4d146100b4578063715018a6146100d05780638da5cb5b146100da575b600080fd5b6100b260048036038101906100ad91906112b7565b610177565b005b6100ce60048036038101906100c99190611370565b6103cc565b005b6100d86105b0565b005b6100e2610638565b6040516100ef91906115bb565b60405180910390f35b610100610661565b005b61011c60048036038101906101179190611370565b6107ee565b005b610126610961565b6040516101339190611783565b60405180910390f35b610144610a3a565b6040516101529291906116da565b60405180910390f35b6101756004803603810190610170919061128e565b610a8c565b005b61017f610d53565b73ffffffffffffffffffffffffffffffffffffffff1661019d610638565b73ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90611723565b60405180910390fd5b6102a6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025191906115bb565b60206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611399565b6103cc565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055506103c7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b6003610d5b909392919063ffffffff16565b505050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042891906115bb565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611399565b10156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090611763565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105189291906115d6565b602060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190611306565b9050806105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390611743565b60405180910390fd5b5050565b6105b8610d53565b73ffffffffffffffffffffffffffffffffffffffff166105d6610638565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611723565b60405180910390fd5b6106366000610f2a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610669610d53565b73ffffffffffffffffffffffffffffffffffffffff16610687610638565b73ffffffffffffffffffffffffffffffffffffffff16146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611723565b60405180910390fd5b61073933600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003610fee909392919063ffffffff16565b6107ec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161079791906115bb565b60206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190611399565b6103cc565b565b6107f6610d53565b73ffffffffffffffffffffffffffffffffffffffff16610814610638565b73ffffffffffffffffffffffffffffffffffffffff161461086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611723565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b81526004016108c99291906115d6565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611306565b90508061095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611743565b60405180910390fd5b5050565b60008060149054906101000a9004600b0b6bffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109db91906115bb565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611399565b610a35919061182c565b905090565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610a94610d53565b73ffffffffffffffffffffffffffffffffffffffff16610ab2610638565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90611723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611703565b60405180910390fd5b610b8181610f2a565b50565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c675781602001600182028036833780820191505090505b50604051602401610c7b949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610cf59291906115ff565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d4c919061132f565b5050505050565b600033905090565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff811115610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e5781602001600182028036833780820191505090505b50604051602401610e52949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610ecc9291906115ff565b600060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f23919061132f565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff81111561109f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110d15781602001600182028036833780820191505090505b506040516024016110e59493929190611642565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040161115f9291906115ff565b600060405180830381600087803b15801561117957600080fd5b505af115801561118d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111b6919061132f565b5050505050565b60006111d06111cb846117cf565b61179e565b9050828152602081018484840111156111e857600080fd5b6111f384828561191e565b509392505050565b60008135905061120a816119c0565b92915050565b60008151905061121f816119d7565b92915050565b600082601f83011261123657600080fd5b81516112468482602086016111bd565b91505092915050565b60008135905061125e816119ee565b92915050565b60008135905061127381611a05565b92915050565b60008151905061128881611a05565b92915050565b6000602082840312156112a057600080fd5b60006112ae848285016111fb565b91505092915050565b6000806000606084860312156112cc57600080fd5b60006112da868287016111fb565b93505060206112eb868287016111fb565b92505060406112fc8682870161124f565b9150509250925092565b60006020828403121561131857600080fd5b600061132684828501611210565b91505092915050565b60006020828403121561134157600080fd5b600082015167ffffffffffffffff81111561135b57600080fd5b61136784828501611225565b91505092915050565b60006020828403121561138257600080fd5b600061139084828501611264565b91505092915050565b6000602082840312156113ab57600080fd5b60006113b984828501611279565b91505092915050565b6113cb8161185d565b82525050565b60006113dc826117ff565b6113e6818561180a565b93506113f681856020860161191e565b6113ff816119af565b840191505092915050565b611413816118b2565b82525050565b611422816118d6565b82525050565b611431816118fa565b82525050565b6114408161187b565b82525050565b600061145360268361181b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114b960028361180a565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006114f960208361181b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061153960168361181b565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b600061157960138361181b565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b6115b5816118a8565b82525050565b60006020820190506115d060008301846113c2565b92915050565b60006040820190506115eb60008301856113c2565b6115f860208301846115ac565b9392505050565b6000606082019050611614600083018561140a565b818103602083015261162681846113d1565b90508181036040830152611639816114ac565b90509392505050565b60006080820190506116576000830187611419565b61166460208301866113c2565b61167160408301856113c2565b818103606083015261168381846113d1565b905095945050505050565b60006080820190506116a36000830187611419565b6116b060208301866113c2565b6116bd6040830185611437565b81810360608301526116cf81846113d1565b905095945050505050565b60006040820190506116ef6000830185611428565b6116fc602083018461140a565b9392505050565b6000602082019050818103600083015261171c81611446565b9050919050565b6000602082019050818103600083015261173c816114ec565b9050919050565b6000602082019050818103600083015261175c8161152c565b9050919050565b6000602082019050818103600083015261177c8161156c565b9050919050565b600060208201905061179860008301846115ac565b92915050565b6000604051905081810181811067ffffffffffffffff821117156117c5576117c4611980565b5b8060405250919050565b600067ffffffffffffffff8211156117ea576117e9611980565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611837826118a8565b9150611842836118a8565b92508261185257611851611951565b5b828204905092915050565b600061186882611888565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118bd826118c4565b9050919050565b60006118cf82611888565b9050919050565b60006118e1826118e8565b9050919050565b60006118f382611888565b9050919050565b60006119058261190c565b9050919050565b600061191782611888565b9050919050565b60005b8381101561193c578082015181840152602081019050611921565b8381111561194b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6119c98161185d565b81146119d457600080fd5b50565b6119e08161186f565b81146119eb57600080fd5b50565b6119f78161187b565b8114611a0257600080fd5b50565b611a0e816118a8565b8114611a1957600080fd5b5056fea2646970667358221220d40dfe86495a0947a0e66de216669e7d15179d2ccd1168a1ae87bef4fd06805164736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x290E CODESIZE SUB DUP1 PUSH3 0x290E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x913 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x325 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xD9 SWAP2 SWAP1 PUSH3 0xB2F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x12D SWAP2 SWAP1 PUSH3 0x8E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH3 0x1EA DUP2 PUSH3 0x3E9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x312 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH3 0x578 PUSH1 0x20 SHL PUSH3 0xB84 OR SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP PUSH3 0xEAC JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x3F9 PUSH3 0x31D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x41F PUSH3 0x751 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x478 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x46F SWAP1 PUSH3 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4D9 SWAP3 SWAP2 SWAP1 PUSH3 0xB02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x52F SWAP2 SWAP1 PUSH3 0x876 JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x574 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x56B SWAP1 PUSH3 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x62A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x673 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x6EF SWAP3 SWAP2 SWAP1 PUSH3 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x70A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x71F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x74A SWAP2 SWAP1 PUSH3 0x8A2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x791 PUSH3 0x78B DUP5 PUSH3 0xC61 JUMP JUMPDEST PUSH3 0xC2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x7AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7B7 DUP5 DUP3 DUP6 PUSH3 0xD9A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7D0 DUP2 PUSH3 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x7E7 DUP2 PUSH3 0xE2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x811 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x77A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x82B DUP2 PUSH3 0xE44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x842 DUP2 PUSH3 0xE5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x859 DUP2 PUSH3 0xE78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x870 DUP2 PUSH3 0xE92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x899 DUP5 DUP3 DUP6 ADD PUSH3 0x7D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8DE DUP5 DUP3 DUP6 ADD PUSH3 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x90A DUP5 DUP3 DUP6 ADD PUSH3 0x81A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x93C DUP9 DUP3 DUP10 ADD PUSH3 0x831 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x94F DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x962 DUP9 DUP3 DUP10 ADD PUSH3 0x7BF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x975 DUP9 DUP3 DUP10 ADD PUSH3 0x848 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x988 DUP9 DUP3 DUP10 ADD PUSH3 0x85F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x9A0 DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x9B1 DUP2 PUSH3 0xCE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C4 DUP3 PUSH3 0xC94 JUMP JUMPDEST PUSH3 0x9D0 DUP2 DUP6 PUSH3 0xC9F JUMP JUMPDEST SWAP4 POP PUSH3 0x9E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xD9A JUMP JUMPDEST PUSH3 0x9ED DUP2 PUSH3 0xDFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA03 DUP2 PUSH3 0xD4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA14 DUP2 PUSH3 0xD72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xA25 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA3A PUSH1 0x2 DUP4 PUSH3 0xC9F JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA7C PUSH1 0x20 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xABE PUSH1 0x16 DUP4 PUSH3 0xCB0 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xAFC DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xB19 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xB28 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0xAF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB46 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x9A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xB63 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x9F8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xB77 DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH3 0xB8C DUP2 PUSH3 0xA2B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH3 0xBAC PUSH1 0x0 DUP4 ADD DUP8 PUSH3 0xA09 JUMP JUMPDEST PUSH3 0xBBB PUSH1 0x20 DUP4 ADD DUP7 PUSH3 0x995 JUMP JUMPDEST PUSH3 0xBCA PUSH1 0x40 DUP4 ADD DUP6 PUSH3 0xA1A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH3 0xBDE DUP2 DUP5 PUSH3 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC04 DUP2 PUSH3 0xA6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xC26 DUP2 PUSH3 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xC57 JUMPI PUSH3 0xC56 PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xC7F JUMPI PUSH3 0xC7E PUSH3 0xDD0 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCCE DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCF8 DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD0C DUP3 PUSH3 0xCC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD57 DUP3 PUSH3 0xD5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD6B DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD7F DUP3 PUSH3 0xD86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD93 DUP3 PUSH3 0xD20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xDBA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xD9D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0xDCA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE1B DUP2 PUSH3 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH3 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE35 DUP2 PUSH3 0xCD5 JUMP JUMPDEST DUP2 EQ PUSH3 0xE41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE4F DUP2 PUSH3 0xCEB JUMP JUMPDEST DUP2 EQ PUSH3 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE69 DUP2 PUSH3 0xCFF JUMP JUMPDEST DUP2 EQ PUSH3 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE83 DUP2 PUSH3 0xD13 JUMP JUMPDEST DUP2 EQ PUSH3 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0xE9D DUP2 PUSH3 0xD40 JUMP JUMPDEST DUP2 EQ PUSH3 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A52 DUP1 PUSH3 0xEBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DAD9382 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xB9146161 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2484EA2F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3C7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH2 0xD5B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH1 0x0 PUSH2 0xF2A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x687 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xFEE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7EC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x814 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xF2A JUMP JUMPDEST POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC67 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE3E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH2 0x11CB DUP5 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 DUP3 DUP6 PUSH2 0x191E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120A DUP2 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x121F DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1246 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125E DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1273 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP5 DUP3 DUP6 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12EB DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12FC DUP7 DUP3 DUP8 ADD PUSH2 0x124F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DC DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x13E6 DUP2 DUP6 PUSH2 0x180A JUMP JUMPDEST SWAP4 POP PUSH2 0x13F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x19AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1413 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x18D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x18FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1453 PUSH1 0x26 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 PUSH1 0x2 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 PUSH1 0x20 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x16 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 PUSH1 0x13 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x15F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x1664 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x1671 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1683 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x16B0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1437 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x16FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173C DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175C DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP3 PUSH2 0x18A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1842 DUP4 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1951 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP3 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1921 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C9 DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x186F JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0E DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD INVALID DUP7 0x49 GAS MULMOD SELFBALANCE LOG0 0xE6 PUSH14 0xE216669E7D15179D2CCD1168A1AE DUP8 0xBE DELEGATECALL REVERT MOD DUP1 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "989:2293:18:-:0;;;1392:823;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1578:364:18;;;;;;;;1614:4;1578:364;;;;;;1768:4;:22;;;1817:71;1768:143;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1578:364;;;;;1570:5;:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:16;1963:7;1955;;;:16;;:::i;:::-;1993:9;1982:8;;:20;;;;;;;;;;;;;;;;;;2024:9;2013:8;;:20;;;;;;;;;;;;;;;;;;;;2064:6;2044:5;;:27;;;;;;;;;;;;;;;;;;2164:43;2181:8;;;;;;;;;;;2191:5;;;;;;;;;;;2198:8;;;;;;;;;;;2164:5;:16;;;;;;:43;;;;;;:::i;:::-;1392:823;;;;;989:2293;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;2845:176:18:-;1259:12:0;:10;;;:12;;:::i;:::-;1248:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2907:12:18::1;2922:5;;;;;;;;;;;:14;;;2945:4;2952:7;2922:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2907:53;;2979:7;2971:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1318:1:0;2845:176:18::0;:::o;669:496:4:-;833:10;:15;;;;;;;;;;;;:29;;;876:10;:14;;;;;;;;;;;;944:34;;;996:5;1019:8;1045;1081:1;1071:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:208;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:325;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;669:496;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;7:351:19:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:143::-;;452:6;446:13;437:22;;468:33;495:5;468:33;:::i;:::-;427:80;;;;:::o;513:137::-;;598:6;592:13;583:22;;614:30;638:5;614:30;:::i;:::-;573:77;;;;:::o;669:286::-;;784:3;777:4;769:6;765:17;761:27;751:2;;802:1;799;792:12;751:2;835:6;829:13;860:89;945:3;937:6;930:4;922:6;918:17;860:89;:::i;:::-;851:98;;741:214;;;;;:::o;961:191::-;;1073:6;1067:13;1058:22;;1089:57;1140:5;1089:57;:::i;:::-;1048:104;;;;:::o;1158:183::-;;1266:6;1260:13;1251:22;;1282:53;1329:5;1282:53;:::i;:::-;1241:100;;;;:::o;1347:139::-;;1433:6;1427:13;1418:22;;1449:31;1474:5;1449:31;:::i;:::-;1408:78;;;;:::o;1492:143::-;;1580:6;1574:13;1565:22;;1596:33;1623:5;1596:33;:::i;:::-;1555:80;;;;:::o;1641:278::-;;1757:2;1745:9;1736:7;1732:23;1728:32;1725:2;;;1773:1;1770;1763:12;1725:2;1816:1;1841:61;1894:7;1885:6;1874:9;1870:22;1841:61;:::i;:::-;1831:71;;1787:125;1715:204;;;;:::o;1925:388::-;;2053:2;2041:9;2032:7;2028:23;2024:32;2021:2;;;2069:1;2066;2059:12;2021:2;2133:1;2122:9;2118:17;2112:24;2163:18;2155:6;2152:30;2149:2;;;2195:1;2192;2185:12;2149:2;2223:73;2288:7;2279:6;2268:9;2264:22;2223:73;:::i;:::-;2213:83;;2083:223;2011:302;;;;:::o;2319:332::-;;2462:2;2450:9;2441:7;2437:23;2433:32;2430:2;;;2478:1;2475;2468:12;2430:2;2521:1;2546:88;2626:7;2617:6;2606:9;2602:22;2546:88;:::i;:::-;2536:98;;2492:152;2420:231;;;;:::o;2657:946::-;;;;;;2862:3;2850:9;2841:7;2837:23;2833:33;2830:2;;;2879:1;2876;2869:12;2830:2;2922:1;2947:84;3023:7;3014:6;3003:9;2999:22;2947:84;:::i;:::-;2937:94;;2893:148;3080:2;3106:64;3162:7;3153:6;3142:9;3138:22;3106:64;:::i;:::-;3096:74;;3051:129;3219:2;3245:64;3301:7;3292:6;3281:9;3277:22;3245:64;:::i;:::-;3235:74;;3190:129;3358:2;3384:62;3438:7;3429:6;3418:9;3414:22;3384:62;:::i;:::-;3374:72;;3329:127;3495:3;3522:64;3578:7;3569:6;3558:9;3554:22;3522:64;:::i;:::-;3512:74;;3466:130;2820:783;;;;;;;;:::o;3609:118::-;3696:24;3714:5;3696:24;:::i;:::-;3691:3;3684:37;3674:53;;:::o;3733:118::-;3820:24;3838:5;3820:24;:::i;:::-;3815:3;3808:37;3798:53;;:::o;3857:360::-;;3971:38;4003:5;3971:38;:::i;:::-;4025:70;4088:6;4083:3;4025:70;:::i;:::-;4018:77;;4104:52;4149:6;4144:3;4137:4;4130:5;4126:16;4104:52;:::i;:::-;4181:29;4203:6;4181:29;:::i;:::-;4176:3;4172:39;4165:46;;3947:270;;;;;:::o;4223:197::-;4343:70;4407:5;4343:70;:::i;:::-;4338:3;4331:83;4321:99;;:::o;4426:181::-;4538:62;4594:5;4538:62;:::i;:::-;4533:3;4526:75;4516:91;;:::o;4613:112::-;4696:22;4712:5;4696:22;:::i;:::-;4691:3;4684:35;4674:51;;:::o;4731:297::-;;4893:65;4956:1;4951:3;4893:65;:::i;:::-;4886:72;;4988:4;4984:1;4979:3;4975:11;4968:25;5019:2;5014:3;5010:12;5003:19;;4876:152;;;:::o;5034:330::-;;5197:67;5261:2;5256:3;5197:67;:::i;:::-;5190:74;;5294:34;5290:1;5285:3;5281:11;5274:55;5355:2;5350:3;5346:12;5339:19;;5180:184;;;:::o;5370:320::-;;5533:67;5597:2;5592:3;5533:67;:::i;:::-;5526:74;;5630:24;5626:1;5621:3;5617:11;5610:45;5681:2;5676:3;5672:12;5665:19;;5516:174;;;:::o;5696:118::-;5783:24;5801:5;5783:24;:::i;:::-;5778:3;5771:37;5761:53;;:::o;5820:332::-;;5979:2;5968:9;5964:18;5956:26;;5992:71;6060:1;6049:9;6045:17;6036:6;5992:71;:::i;:::-;6073:72;6141:2;6130:9;6126:18;6117:6;6073:72;:::i;:::-;5946:206;;;;;:::o;6158:222::-;;6289:2;6278:9;6274:18;6266:26;;6302:71;6370:1;6359:9;6355:17;6346:6;6302:71;:::i;:::-;6256:124;;;;:::o;6386:790::-;;6696:2;6685:9;6681:18;6673:26;;6709:104;6810:1;6799:9;6795:17;6786:6;6709:104;:::i;:::-;6860:9;6854:4;6850:20;6845:2;6834:9;6830:18;6823:48;6888:76;6959:4;6950:6;6888:76;:::i;:::-;6880:84;;7011:9;7005:4;7001:20;6996:2;6985:9;6981:18;6974:48;7039:130;7164:4;7039:130;:::i;:::-;7031:138;;6663:513;;;;;:::o;7182:682::-;;7436:3;7425:9;7421:19;7413:27;;7450:96;7543:1;7532:9;7528:17;7519:6;7450:96;:::i;:::-;7556:72;7624:2;7613:9;7609:18;7600:6;7556:72;:::i;:::-;7638:68;7702:2;7691:9;7687:18;7678:6;7638:68;:::i;:::-;7753:9;7747:4;7743:20;7738:2;7727:9;7723:18;7716:48;7781:76;7852:4;7843:6;7781:76;:::i;:::-;7773:84;;7403:461;;;;;;;:::o;7870:419::-;;8074:2;8063:9;8059:18;8051:26;;8123:9;8117:4;8113:20;8109:1;8098:9;8094:17;8087:47;8151:131;8277:4;8151:131;:::i;:::-;8143:139;;8041:248;;;:::o;8295:419::-;;8499:2;8488:9;8484:18;8476:26;;8548:9;8542:4;8538:20;8534:1;8523:9;8519:17;8512:47;8576:131;8702:4;8576:131;:::i;:::-;8568:139;;8466:248;;;:::o;8720:283::-;;8786:2;8780:9;8770:19;;8828:4;8820:6;8816:17;8935:6;8923:10;8920:22;8899:18;8887:10;8884:34;8881:62;8878:2;;;8946:18;;:::i;:::-;8878:2;8986:10;8982:2;8975:22;8760:243;;;;:::o;9009:331::-;;9160:18;9152:6;9149:30;9146:2;;;9182:18;;:::i;:::-;9146:2;9267:4;9263:9;9256:4;9248:6;9244:17;9240:33;9232:41;;9328:4;9322;9318:15;9310:23;;9075:265;;;:::o;9346:98::-;;9431:5;9425:12;9415:22;;9404:40;;;:::o;9450:168::-;;9567:6;9562:3;9555:19;9607:4;9602:3;9598:14;9583:29;;9545:73;;;;:::o;9624:169::-;;9742:6;9737:3;9730:19;9782:4;9777:3;9773:14;9758:29;;9720:73;;;;:::o;9799:96::-;;9865:24;9883:5;9865:24;:::i;:::-;9854:35;;9844:51;;;:::o;9901:90::-;;9978:5;9971:13;9964:21;9953:32;;9943:48;;;:::o;9997:77::-;;10063:5;10052:16;;10042:32;;;:::o;10080:120::-;;10170:24;10188:5;10170:24;:::i;:::-;10159:35;;10149:51;;;:::o;10206:116::-;;10292:24;10310:5;10292:24;:::i;:::-;10281:35;;10271:51;;;:::o;10328:91::-;;10407:5;10403:2;10392:21;10381:32;;10371:48;;;:::o;10425:126::-;;10502:42;10495:5;10491:54;10480:65;;10470:81;;;:::o;10557:77::-;;10623:5;10612:16;;10602:32;;;:::o;10640:192::-;;10756:70;10820:5;10756:70;:::i;:::-;10743:83;;10733:99;;;:::o;10838:146::-;;10954:24;10972:5;10954:24;:::i;:::-;10941:37;;10931:53;;;:::o;10990:176::-;;11098:62;11154:5;11098:62;:::i;:::-;11085:75;;11075:91;;;:::o;11172:138::-;;11280:24;11298:5;11280:24;:::i;:::-;11267:37;;11257:53;;;:::o;11316:307::-;11384:1;11394:113;11408:6;11405:1;11402:13;11394:113;;;11493:1;11488:3;11484:11;11478:18;11474:1;11469:3;11465:11;11458:39;11430:2;11427:1;11423:10;11418:15;;11394:113;;;11525:6;11522:1;11519:13;11516:2;;;11605:1;11596:6;11591:3;11587:16;11580:27;11516:2;11365:258;;;;:::o;11629:180::-;11677:77;11674:1;11667:88;11774:4;11771:1;11764:15;11798:4;11795:1;11788:15;11815:102;;11907:2;11903:7;11898:2;11891:5;11887:14;11883:28;11873:38;;11863:54;;;:::o;11923:122::-;11996:24;12014:5;11996:24;:::i;:::-;11989:5;11986:35;11976:2;;12035:1;12032;12025:12;11976:2;11966:79;:::o;12051:116::-;12121:21;12136:5;12121:21;:::i;:::-;12114:5;12111:32;12101:2;;12157:1;12154;12147:12;12101:2;12091:76;:::o;12173:170::-;12270:48;12312:5;12270:48;:::i;:::-;12263:5;12260:59;12250:2;;12333:1;12330;12323:12;12250:2;12240:103;:::o;12349:162::-;12442:44;12480:5;12442:44;:::i;:::-;12435:5;12432:55;12422:2;;12501:1;12498;12491:12;12422:2;12412:99;:::o;12517:118::-;12588:22;12604:5;12588:22;:::i;:::-;12581:5;12578:33;12568:2;;12625:1;12622;12615:12;12568:2;12558:77;:::o;12641:122::-;12714:24;12732:5;12714:24;:::i;:::-;12707:5;12704:35;12694:2;;12753:1;12750;12743:12;12694:2;12684:79;:::o;989:2293:18:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15776:19",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "101:257:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "111:73:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "176:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "135:40:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "135:48:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:14:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:64:19"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "200:5:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "207:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "193:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "193:21:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "193:21:19"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "223:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "238:5:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "245:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:16:19"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "227:3:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "288:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "297:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "300:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "290:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "290:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "290:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "269:3:19"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:16:19"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:3:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "262:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "262:25:19"
                              },
                              "nodeType": "YulIf",
                              "src": "259:2:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:3:19"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "345:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "313:21:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "313:39:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "313:39:19"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "74:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "79:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "87:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "95:5:19",
                            "type": ""
                          }
                        ],
                        "src": "7:351:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "416:87:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "426:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "448:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "435:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "426:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "491:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "464:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "464:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "464:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "394:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "402:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "410:5:19",
                            "type": ""
                          }
                        ],
                        "src": "364:139:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "569:77:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "579:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "594:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "588:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "588:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "610:23:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "610:30:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "610:30:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "547:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "555:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "563:5:19",
                            "type": ""
                          }
                        ],
                        "src": "509:137:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "737:214:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "786:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "795:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "798:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "788:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "788:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "765:6:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "773:4:19",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "761:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "761:17:19"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "780:3:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "757:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "757:27:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "750:35:19"
                              },
                              "nodeType": "YulIf",
                              "src": "747:2:19"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "811:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "831:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "825:13:19"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "815:6:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "847:98:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "918:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "926:4:19",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "914:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "914:17:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "933:6:19"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "941:3:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "856:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "856:89:19"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "847:5:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "715:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "723:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "731:5:19",
                            "type": ""
                          }
                        ],
                        "src": "665:286:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1007:85:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1017:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1039:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1026:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1026:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1080:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "1055:24:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1055:31:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1055:31:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "985:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "993:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1001:5:19",
                            "type": ""
                          }
                        ],
                        "src": "957:135:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1150:87:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1160:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1182:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1169:12:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1169:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1160:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1225:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1198:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1198:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1198:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1128:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1136:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1144:5:19",
                            "type": ""
                          }
                        ],
                        "src": "1098:139:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1306:80:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1316:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1331:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1325:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1325:13:19"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1316:5:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1374:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1347:26:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1347:33:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1347:33:19"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1284:6:19",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1292:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1300:5:19",
                            "type": ""
                          }
                        ],
                        "src": "1243:143:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1458:196:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1504:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1513:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1516:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1506:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1506:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1506:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1479:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1488:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1475:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1475:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1500:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1471:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "1468:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1530:117:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1545:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1559:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1549:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1574:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1609:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1620:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1605:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1605:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1629:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1584:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1584:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1574:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1428:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1439:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1451:6:19",
                            "type": ""
                          }
                        ],
                        "src": "1392:262:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1758:450:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1804:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1813:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1816:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1806:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1806:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1806:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1779:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1788:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1775:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1775:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1800:2:19",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1771:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1771:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "1768:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1830:117:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1845:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1859:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1849:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1874:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1909:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1920:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1905:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1905:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1929:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1884:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1884:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1874:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1957:118:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1972:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:2:19",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1976:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2002:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2037:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2048:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2033:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2033:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2057:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2012:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2012:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2002:6:19"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2085:116:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2100:16:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2114:2:19",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2104:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2130:61:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2163:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2174:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2159:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2159:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2183:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "2140:18:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2140:51:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2130:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1712:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1723:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1735:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1743:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1751:6:19",
                            "type": ""
                          }
                        ],
                        "src": "1660:548:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2288:204:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2334:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2343:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2346:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2336:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2336:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2336:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2309:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2318:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2305:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2305:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2330:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2301:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2301:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2298:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2360:125:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2375:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2389:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2379:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2404:71:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2447:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2458:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2443:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2443:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2467:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2414:28:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2414:61:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2404:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2258:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2269:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2281:6:19",
                            "type": ""
                          }
                        ],
                        "src": "2214:278:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2584:302:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2630:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2639:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2642:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2632:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2632:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2605:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2614:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2601:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2601:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2626:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2597:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2597:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2594:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2656:223:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2671:38:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2695:9:19"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2706:1:19",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2691:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2691:17:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2685:5:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2685:24:19"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2675:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2756:16:19",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2765:1:19",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2768:1:19",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2758:6:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2758:12:19"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2758:12:19"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2728:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2736:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2725:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2725:30:19"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "2722:2:19"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2786:83:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2841:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2852:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2837:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2837:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2861:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2796:40:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2796:73:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2786:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2554:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2565:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2577:6:19",
                            "type": ""
                          }
                        ],
                        "src": "2498:388:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2958:196:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3004:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3013:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3016:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3006:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3006:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3006:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2979:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2988:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2975:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2975:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3000:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2971:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2971:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "2968:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3030:117:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3045:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3059:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3049:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3074:63:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3109:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3120:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3105:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3105:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3129:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3084:20:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3084:53:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3074:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2928:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2939:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2951:6:19",
                            "type": ""
                          }
                        ],
                        "src": "2892:262:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3237:207:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3283:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3292:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3295:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3285:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3285:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3285:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3258:7:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3267:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3254:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3254:23:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3279:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3250:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3250:32:19"
                              },
                              "nodeType": "YulIf",
                              "src": "3247:2:19"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3309:128:19",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3324:15:19",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3338:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3328:6:19",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3353:74:19",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3399:9:19"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3410:6:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3395:3:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3395:22:19"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3419:7:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3363:31:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3363:64:19"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3353:6:19"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3207:9:19",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3218:7:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3230:6:19",
                            "type": ""
                          }
                        ],
                        "src": "3160:284:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3515:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3532:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3555:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3537:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3537:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3525:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3525:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3525:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3503:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3510:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3450:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3664:270:19",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3674:52:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3720:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3688:31:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3688:38:19"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3678:6:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3735:77:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3800:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3805:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3742:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3742:70:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3735:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3847:5:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3854:4:19",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3843:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3843:16:19"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3861:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3866:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3821:21:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3821:52:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3821:52:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3882:46:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3893:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3920:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "3898:21:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3898:29:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3889:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3889:39:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3882:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3645:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3652:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3660:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3574:360:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4038:99:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4055:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4124:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4060:63:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4060:70:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4048:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4048:83:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4048:83:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4026:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4033:3:19",
                            "type": ""
                          }
                        ],
                        "src": "3940:197:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4233:91:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4250:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4311:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4255:55:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4255:62:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4243:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4243:75:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4243:75:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4221:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4228:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4143:181:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4415:86:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4432:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4488:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluid_$2414_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:50:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4437:57:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4425:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4425:70:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4425:70:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4403:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4410:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4330:171:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4568:51:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4585:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4606:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "4590:15:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4590:22:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4578:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4578:35:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4578:35:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int96_to_t_int96_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4556:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4563:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4507:112:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4771:224:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4781:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4847:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4852:2:19",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4788:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4788:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4781:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4876:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4881:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4872:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4872:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4885:34:19",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4865:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4865:55:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4865:55:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4941:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4946:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4937:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4937:12:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4951:8:19",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4930:30:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4930:30:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4970:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4981:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4986:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4977:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4977:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4970:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4759:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4767:3:19",
                            "type": ""
                          }
                        ],
                        "src": "4625:370:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5146:152:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5156:72:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5221:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5226:1:19",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5163:57:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5163:65:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5156:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5249:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5254:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5245:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5245:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5258:4:19",
                                    "type": "",
                                    "value": "0x"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5238:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5238:25:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5238:25:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5273:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5284:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5289:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5280:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5280:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5273:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5134:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5142:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5001:297:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5450:184:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5460:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5526:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5531:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5467:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5467:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5460:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5555:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5560:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5551:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5551:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5564:34:19",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5544:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5544:55:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5544:55:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5609:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5620:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5625:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5616:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5616:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5609:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5438:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5446:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5304:330:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5786:174:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5796:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5862:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5867:2:19",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5803:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5803:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5796:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5891:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5896:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5887:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5887:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5900:24:19",
                                    "type": "",
                                    "value": "Token transfer failed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5880:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5880:45:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5880:45:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5935:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5946:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5951:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5942:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5942:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5935:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5774:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5782:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5640:320:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6112:171:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6122:74:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6188:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6193:2:19",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6129:58:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6129:67:19"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6122:3:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6217:3:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6222:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6213:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6213:11:19"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6226:21:19",
                                    "type": "",
                                    "value": "Insufficient funds."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6206:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6206:42:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6206:42:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6258:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6269:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6274:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6265:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6265:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6258:3:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6100:3:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6108:3:19",
                            "type": ""
                          }
                        ],
                        "src": "5966:317:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6354:53:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6371:3:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6394:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "6376:17:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6376:24:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6364:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6364:37:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6364:37:19"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6342:5:19",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6349:3:19",
                            "type": ""
                          }
                        ],
                        "src": "6289:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6511:124:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6521:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6533:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6544:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6529:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6529:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6521:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6601:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6614:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6625:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6610:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6610:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6557:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6557:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6557:71:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6483:9:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6495:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6506:4:19",
                            "type": ""
                          }
                        ],
                        "src": "6413:222:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6767:206:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6777:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6789:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6800:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6785:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6785:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6777:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6857:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6870:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6881:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6866:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6866:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6813:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6813:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6813:71:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6938:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6951:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6962:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6947:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6947:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6894:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6894:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6894:72:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6731:9:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6743:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6751:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6762:4:19",
                            "type": ""
                          }
                        ],
                        "src": "6641:332:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7256:513:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7266:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7278:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7289:2:19",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7274:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7274:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7266:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7379:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7392:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7403:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7388:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7388:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7302:76:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7302:104:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7302:104:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7427:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7438:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7423:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7423:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7447:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7453:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7443:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7443:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7416:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7416:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7416:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7473:84:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7543:6:19"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7552:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7481:61:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7481:76:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7473:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7578:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7589:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7574:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7574:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "7598:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7604:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7594:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7594:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7567:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7567:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7567:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7624:138:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7757:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7632:123:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7632:130:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7624:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$1054_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7220:9:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7232:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7240:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7251:4:19",
                            "type": ""
                          }
                        ],
                        "src": "6979:790:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8000:465:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8010:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8022:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8033:3:19",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8018:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8018:19:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8010:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8116:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8129:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8140:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8125:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8125:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8047:68:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8047:96:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8047:96:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8197:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8210:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8221:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8206:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8206:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8153:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8153:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8153:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8279:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8292:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8303:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8288:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8288:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8235:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8235:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8235:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8328:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8339:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8324:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8324:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "8348:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8354:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8344:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8344:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8317:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8317:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8317:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8374:84:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "8444:6:19"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "8453:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8382:61:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8382:76:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8374:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7948:9:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "7960:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7968:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7976:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7984:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7995:4:19",
                            "type": ""
                          }
                        ],
                        "src": "7775:690:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8692:461:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8702:27:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8714:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8725:3:19",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8710:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8710:19:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8702:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8808:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8821:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8832:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8817:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8817:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8739:68:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8739:96:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8739:96:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8889:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8902:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8913:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8898:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8898:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8845:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8845:72:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8845:72:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8967:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8980:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8991:2:19",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8976:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8976:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8927:39:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8927:68:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8927:68:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9016:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9027:2:19",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9012:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9012:18:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9036:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9042:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9032:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9032:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9005:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9005:48:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9005:48:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9062:84:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "9132:6:19"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9141:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9070:61:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9070:76:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9062:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8640:9:19",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "8652:6:19",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8660:6:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8668:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8676:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8687:4:19",
                            "type": ""
                          }
                        ],
                        "src": "8471:682:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9338:259:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9348:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9360:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9371:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9356:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9356:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9348:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9448:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9461:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9472:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9457:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9457:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9384:63:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9384:91:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9384:91:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9562:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9575:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9586:2:19",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9571:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9571:18:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9485:76:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9485:105:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9485:105:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluid_$2414_t_contract$_IConstantFlowAgreementV1_$1054__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9302:9:19",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9314:6:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9322:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9333:4:19",
                            "type": ""
                          }
                        ],
                        "src": "9159:438:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9774:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9784:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9796:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9807:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9792:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9792:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9784:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9831:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9842:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9827:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9827:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9850:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9856:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9846:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9846:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9820:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9820:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9876:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10010:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9884:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9884:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9876:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9754:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9769:4:19",
                            "type": ""
                          }
                        ],
                        "src": "9603:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10199:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10209:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10221:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10232:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10217:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10217:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10256:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10267:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10252:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10252:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10275:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10281:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10271:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10271:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10245:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10245:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10245:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10301:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10435:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10309:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10309:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10301:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10179:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10194:4:19",
                            "type": ""
                          }
                        ],
                        "src": "10028:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10624:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10634:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10646:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10657:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10642:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10642:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10634:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10681:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10692:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10677:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10677:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10700:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10706:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10696:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10696:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10670:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10670:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10670:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10726:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10860:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10734:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10734:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10726:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10604:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10619:4:19",
                            "type": ""
                          }
                        ],
                        "src": "10453:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11049:248:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11059:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11071:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11082:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11067:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11067:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11059:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11106:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11117:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11102:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11102:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11125:4:19"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11131:9:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11121:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11121:20:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11095:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11095:47:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11095:47:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11151:139:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11285:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11159:124:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11159:131:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11151:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11029:9:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11044:4:19",
                            "type": ""
                          }
                        ],
                        "src": "10878:419:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11401:124:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11411:26:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11423:9:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11434:2:19",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11419:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11419:18:19"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11411:4:19"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11491:6:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11504:9:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11515:1:19",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11500:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11500:17:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11447:43:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11447:71:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11447:71:19"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11373:9:19",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11385:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11396:4:19",
                            "type": ""
                          }
                        ],
                        "src": "11303:222:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11571:243:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11581:19:19",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11597:2:19",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11591:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11591:9:19"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "11581:6:19"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11609:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11631:6:19"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "11639:4:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11627:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11627:17:19"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "11613:10:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11755:22:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "11757:16:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11757:18:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11757:18:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11698:10:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11710:18:19",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "11695:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11695:34:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11734:10:19"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11746:6:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "11731:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11731:22:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "11692:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11692:62:19"
                              },
                              "nodeType": "YulIf",
                              "src": "11689:2:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11793:2:19",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11797:10:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11786:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11786:22:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11786:22:19"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11555:4:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "11564:6:19",
                            "type": ""
                          }
                        ],
                        "src": "11531:283:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11886:265:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11991:22:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "11993:16:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11993:18:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11993:18:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11963:6:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11971:18:19",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11960:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11960:30:19"
                              },
                              "nodeType": "YulIf",
                              "src": "11957:2:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12043:41:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "12059:6:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12067:4:19",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12055:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12055:17:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12078:4:19",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "12074:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12074:9:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12051:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12051:33:19"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "12043:4:19"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12121:23:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "12133:4:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12139:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12129:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12129:15:19"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "12121:4:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11870:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11881:4:19",
                            "type": ""
                          }
                        ],
                        "src": "11820:331:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12215:40:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12226:22:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12242:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12236:5:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12236:12:19"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12226:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12198:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12208:6:19",
                            "type": ""
                          }
                        ],
                        "src": "12157:98:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12356:73:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12373:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12378:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12366:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12366:19:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12366:19:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12394:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12413:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12418:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12409:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12409:14:19"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12394:11:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12328:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12333:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "12344:11:19",
                            "type": ""
                          }
                        ],
                        "src": "12261:168:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12531:73:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12548:3:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12553:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12541:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12541:19:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12541:19:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12569:29:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12588:3:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12593:4:19",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12584:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12584:14:19"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12569:11:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12503:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "12508:6:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "12519:11:19",
                            "type": ""
                          }
                        ],
                        "src": "12435:169:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12652:143:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12662:25:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12685:1:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12667:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12667:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "12662:1:19"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12696:25:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12719:1:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "12701:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12701:20:19"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "12696:1:19"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12743:22:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12745:16:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12745:18:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12745:18:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12740:1:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12733:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12733:9:19"
                              },
                              "nodeType": "YulIf",
                              "src": "12730:2:19"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12775:14:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12784:1:19"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12787:1:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12780:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12780:9:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "12775:1:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12641:1:19",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12644:1:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "12650:1:19",
                            "type": ""
                          }
                        ],
                        "src": "12610:185:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12846:51:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12856:35:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12885:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "12867:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12867:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12856:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12828:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12838:7:19",
                            "type": ""
                          }
                        ],
                        "src": "12801:96:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12945:48:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12955:32:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12980:5:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "12973:6:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12973:13:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12966:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12966:21:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12955:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12927:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "12937:7:19",
                            "type": ""
                          }
                        ],
                        "src": "12903:90:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13042:48:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13052:32:19",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13074:2:19",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13078:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "13063:10:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13063:21:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13052:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13024:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13034:7:19",
                            "type": ""
                          }
                        ],
                        "src": "12999:91:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13141:81:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13151:65:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13166:5:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13173:42:19",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13162:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13162:54:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13151:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13123:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13133:7:19",
                            "type": ""
                          }
                        ],
                        "src": "13096:126:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13273:32:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13283:16:19",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13294:5:19"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "13283:7:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13255:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "13265:7:19",
                            "type": ""
                          }
                        ],
                        "src": "13228:77:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13404:99:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13414:83:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13491:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13427:63:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13427:70:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13414:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13384:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13394:9:19",
                            "type": ""
                          }
                        ],
                        "src": "13311:192:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13602:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13612:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13643:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13625:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13625:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13612:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13582:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13592:9:19",
                            "type": ""
                          }
                        ],
                        "src": "13509:146:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13746:91:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13756:75:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13825:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13769:55:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13769:62:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13756:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13726:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13736:9:19",
                            "type": ""
                          }
                        ],
                        "src": "13661:176:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13928:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13938:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "13969:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "13951:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13951:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "13938:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "13908:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "13918:9:19",
                            "type": ""
                          }
                        ],
                        "src": "13843:138:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14067:86:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14077:70:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14141:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluid_$2414_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14090:50:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14090:57:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14077:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2414_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14047:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14057:9:19",
                            "type": ""
                          }
                        ],
                        "src": "13987:166:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14239:53:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14249:37:19",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14280:5:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "14262:17:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14262:24:19"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "14249:9:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2414_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14219:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "14229:9:19",
                            "type": ""
                          }
                        ],
                        "src": "14159:133:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14347:258:19",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14357:10:19",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14366:1:19",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "14361:1:19",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14426:63:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "14451:3:19"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "14456:1:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "14447:3:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14447:11:19"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14470:3:19"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14475:1:19"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "14466:3:19"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "14466:11:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "14460:5:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14460:18:19"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14440:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14440:39:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14440:39:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "14387:1:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14390:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14384:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14384:13:19"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "14398:19:19",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "14400:15:19",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "14409:1:19"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14412:2:19",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14405:3:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14405:10:19"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "14400:1:19"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "14380:3:19",
                                "statements": []
                              },
                              "src": "14376:113:19"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14523:76:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "14573:3:19"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "14578:6:19"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "14569:3:19"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14569:16:19"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14587:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14562:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14562:27:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14562:27:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "14504:1:19"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "14507:6:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14501:2:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14501:13:19"
                              },
                              "nodeType": "YulIf",
                              "src": "14498:2:19"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "14329:3:19",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "14334:3:19",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "14339:6:19",
                            "type": ""
                          }
                        ],
                        "src": "14298:307:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14639:152:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14656:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14659:77:19",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14649:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14649:88:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14649:88:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14753:1:19",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14756:4:19",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14746:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14746:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14746:15:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14777:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14780:4:19",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14770:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14770:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14770:15:19"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14611:180:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14825:152:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14842:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14845:77:19",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14835:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14835:88:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14835:88:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14939:1:19",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14942:4:19",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14932:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14932:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14932:15:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14963:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14966:4:19",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14956:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14956:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14956:15:19"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14797:180:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15011:152:19",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15028:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15031:77:19",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15021:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15021:88:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15021:88:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15125:1:19",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15128:4:19",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15118:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15118:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15118:15:19"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15149:1:19",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15152:4:19",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15142:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15142:15:19"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15142:15:19"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14983:180:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15217:54:19",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15227:38:19",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15245:5:19"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15252:2:19",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15241:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15241:14:19"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15261:2:19",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15257:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15257:7:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15237:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15237:28:19"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "15227:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15200:5:19",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "15210:6:19",
                            "type": ""
                          }
                        ],
                        "src": "15169:102:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15320:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15377:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15386:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15389:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15379:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15379:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15379:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15343:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15368:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "15350:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15350:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15340:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15340:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15333:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15333:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "15330:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15313:5:19",
                            "type": ""
                          }
                        ],
                        "src": "15277:122:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15445:76:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15499:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15508:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15511:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15501:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15501:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15501:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15468:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15490:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "15475:14:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15475:21:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15465:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15465:32:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15458:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15458:40:19"
                              },
                              "nodeType": "YulIf",
                              "src": "15455:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15438:5:19",
                            "type": ""
                          }
                        ],
                        "src": "15405:116:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15568:77:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15623:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15632:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15635:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15625:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15625:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15625:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15591:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15614:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "15598:15:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15598:22:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15588:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15588:33:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15581:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15581:41:19"
                              },
                              "nodeType": "YulIf",
                              "src": "15578:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15561:5:19",
                            "type": ""
                          }
                        ],
                        "src": "15527:118:19"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15694:79:19",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15751:16:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15760:1:19",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15763:1:19",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15753:6:19"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15753:12:19"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15753:12:19"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15717:5:19"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15742:5:19"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "15724:17:19"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15724:24:19"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15714:2:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15714:35:19"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15707:6:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15707:43:19"
                              },
                              "nodeType": "YulIf",
                              "src": "15704:2:19"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15687:5:19",
                            "type": ""
                          }
                        ],
                        "src": "15651:122:19"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_int96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_int96(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluidToken_$2785_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluid_$2414_to_t_address(value))\n    }\n\n    function abi_encode_t_int96_to_t_int96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int96(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 2)\n\n        mstore(add(pos, 0), \"0x\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"Token transfer failed.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Insufficient funds.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$1054_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluidToken_$2785_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ISuperfluidToken_$2785_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluid_$2414_t_contract$_IConstantFlowAgreementV1_$1054__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_ISuperfluid_$2414_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$1054_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2785_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2785_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2414_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluid_$2414_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2414_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 19,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80639dad9382116100665780639dad9382146100f8578063b6b55f2514610102578063b91461611461011e578063d3112b2e1461013c578063f2fde38b1461015b57610093565b80632484ea2f146100985780632e1a7d4d146100b4578063715018a6146100d05780638da5cb5b146100da575b600080fd5b6100b260048036038101906100ad91906112b7565b610177565b005b6100ce60048036038101906100c99190611370565b6103cc565b005b6100d86105b0565b005b6100e2610638565b6040516100ef91906115bb565b60405180910390f35b610100610661565b005b61011c60048036038101906101179190611370565b6107ee565b005b610126610961565b6040516101339190611783565b60405180910390f35b610144610a3a565b6040516101529291906116da565b60405180910390f35b6101756004803603810190610170919061128e565b610a8c565b005b61017f610d53565b73ffffffffffffffffffffffffffffffffffffffff1661019d610638565b73ffffffffffffffffffffffffffffffffffffffff16146101f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ea90611723565b60405180910390fd5b6102a6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161025191906115bb565b60206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611399565b6103cc565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060146101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055506103c7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a9004600b0b6003610d5b909392919063ffffffff16565b505050565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161042891906115bb565b60206040518083038186803b15801561044057600080fd5b505afa158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190611399565b10156104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090611763565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105189291906115d6565b602060405180830381600087803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190611306565b9050806105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a390611743565b60405180910390fd5b5050565b6105b8610d53565b73ffffffffffffffffffffffffffffffffffffffff166105d6610638565b73ffffffffffffffffffffffffffffffffffffffff161461062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390611723565b60405180910390fd5b6106366000610f2a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610669610d53565b73ffffffffffffffffffffffffffffffffffffffff16610687610638565b73ffffffffffffffffffffffffffffffffffffffff16146106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611723565b60405180910390fd5b61073933600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003610fee909392919063ffffffff16565b6107ec600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161079791906115bb565b60206040518083038186803b1580156107af57600080fd5b505afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e79190611399565b6103cc565b565b6107f6610d53565b73ffffffffffffffffffffffffffffffffffffffff16610814610638565b73ffffffffffffffffffffffffffffffffffffffff161461086a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086190611723565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b81526004016108c99291906115d6565b602060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091b9190611306565b90508061095d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095490611743565b60405180910390fd5b5050565b60008060149054906101000a9004600b0b6bffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109db91906115bb565b60206040518083038186803b1580156109f357600080fd5b505afa158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611399565b610a35919061182c565b905090565b60038060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b610a94610d53565b73ffffffffffffffffffffffffffffffffffffffff16610ab2610638565b73ffffffffffffffffffffffffffffffffffffffff1614610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff90611723565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90611703565b60405180910390fd5b610b8181610f2a565b50565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c675781602001600182028036833780820191505090505b50604051602401610c7b949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610cf59291906115ff565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d4c919061132f565b5050505050565b600033905090565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff811115610e0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e5781602001600182028036833780820191505090505b50604051602401610e52949392919061168e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401610ecc9291906115ff565b600060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610f23919061132f565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff81111561109f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156110d15781602001600182028036833780820191505090505b506040516024016110e59493929190611642565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b815260040161115f9291906115ff565b600060405180830381600087803b15801561117957600080fd5b505af115801561118d573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906111b6919061132f565b5050505050565b60006111d06111cb846117cf565b61179e565b9050828152602081018484840111156111e857600080fd5b6111f384828561191e565b509392505050565b60008135905061120a816119c0565b92915050565b60008151905061121f816119d7565b92915050565b600082601f83011261123657600080fd5b81516112468482602086016111bd565b91505092915050565b60008135905061125e816119ee565b92915050565b60008135905061127381611a05565b92915050565b60008151905061128881611a05565b92915050565b6000602082840312156112a057600080fd5b60006112ae848285016111fb565b91505092915050565b6000806000606084860312156112cc57600080fd5b60006112da868287016111fb565b93505060206112eb868287016111fb565b92505060406112fc8682870161124f565b9150509250925092565b60006020828403121561131857600080fd5b600061132684828501611210565b91505092915050565b60006020828403121561134157600080fd5b600082015167ffffffffffffffff81111561135b57600080fd5b61136784828501611225565b91505092915050565b60006020828403121561138257600080fd5b600061139084828501611264565b91505092915050565b6000602082840312156113ab57600080fd5b60006113b984828501611279565b91505092915050565b6113cb8161185d565b82525050565b60006113dc826117ff565b6113e6818561180a565b93506113f681856020860161191e565b6113ff816119af565b840191505092915050565b611413816118b2565b82525050565b611422816118d6565b82525050565b611431816118fa565b82525050565b6114408161187b565b82525050565b600061145360268361181b565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114b960028361180a565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006114f960208361181b565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061153960168361181b565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b600061157960138361181b565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b6115b5816118a8565b82525050565b60006020820190506115d060008301846113c2565b92915050565b60006040820190506115eb60008301856113c2565b6115f860208301846115ac565b9392505050565b6000606082019050611614600083018561140a565b818103602083015261162681846113d1565b90508181036040830152611639816114ac565b90509392505050565b60006080820190506116576000830187611419565b61166460208301866113c2565b61167160408301856113c2565b818103606083015261168381846113d1565b905095945050505050565b60006080820190506116a36000830187611419565b6116b060208301866113c2565b6116bd6040830185611437565b81810360608301526116cf81846113d1565b905095945050505050565b60006040820190506116ef6000830185611428565b6116fc602083018461140a565b9392505050565b6000602082019050818103600083015261171c81611446565b9050919050565b6000602082019050818103600083015261173c816114ec565b9050919050565b6000602082019050818103600083015261175c8161152c565b9050919050565b6000602082019050818103600083015261177c8161156c565b9050919050565b600060208201905061179860008301846115ac565b92915050565b6000604051905081810181811067ffffffffffffffff821117156117c5576117c4611980565b5b8060405250919050565b600067ffffffffffffffff8211156117ea576117e9611980565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611837826118a8565b9150611842836118a8565b92508261185257611851611951565b5b828204905092915050565b600061186882611888565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118bd826118c4565b9050919050565b60006118cf82611888565b9050919050565b60006118e1826118e8565b9050919050565b60006118f382611888565b9050919050565b60006119058261190c565b9050919050565b600061191782611888565b9050919050565b60005b8381101561193c578082015181840152602081019050611921565b8381111561194b576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6119c98161185d565b81146119d457600080fd5b50565b6119e08161186f565b81146119eb57600080fd5b50565b6119f78161187b565b8114611a0257600080fd5b50565b611a0e816118a8565b8114611a1957600080fd5b5056fea2646970667358221220d40dfe86495a0947a0e66de216669e7d15179d2ccd1168a1ae87bef4fd06805164736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DAD9382 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xB9146161 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x15B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2484EA2F EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD8 PUSH2 0x5B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x100 PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x126 PUSH2 0x961 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19D PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3C7 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x3 PUSH2 0xD5B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x454 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B0 SWAP1 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x546 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5B8 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5D6 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 PUSH1 0x0 PUSH2 0xF2A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x669 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x687 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH2 0xFEE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7EC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7F6 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x814 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x861 SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP3 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91B SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DB SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2B SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xA94 PUSH2 0xD53 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAB2 PUSH2 0x638 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFF SWAP1 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB81 DUP2 PUSH2 0xF2A JUMP JUMPDEST POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC35 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC67 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF5 SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE3E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE52 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECC SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115F SWAP3 SWAP2 SWAP1 PUSH2 0x15FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B6 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D0 PUSH2 0x11CB DUP5 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x179E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F3 DUP5 DUP3 DUP6 PUSH2 0x191E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x120A DUP2 PUSH2 0x19C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x121F DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1246 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125E DUP2 PUSH2 0x19EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1273 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1288 DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AE DUP5 DUP3 DUP6 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12EB DUP7 DUP3 DUP8 ADD PUSH2 0x11FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12FC DUP7 DUP3 DUP8 ADD PUSH2 0x124F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1326 DUP5 DUP3 DUP6 ADD PUSH2 0x1210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1367 DUP5 DUP3 DUP6 ADD PUSH2 0x1225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1390 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP5 DUP3 DUP6 ADD PUSH2 0x1279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13CB DUP2 PUSH2 0x185D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13DC DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x13E6 DUP2 DUP6 PUSH2 0x180A JUMP JUMPDEST SWAP4 POP PUSH2 0x13F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191E JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x19AF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1413 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x18D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1431 DUP2 PUSH2 0x18FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1440 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1453 PUSH1 0x26 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14B9 PUSH1 0x2 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F9 PUSH1 0x20 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1539 PUSH1 0x16 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 PUSH1 0x13 DUP4 PUSH2 0x181B JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15EB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x15F8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1614 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1626 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1639 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1657 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x1664 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x1671 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13C2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1683 DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16A3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1419 JUMP JUMPDEST PUSH2 0x16B0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x16BD PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1437 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 DUP5 PUSH2 0x13D1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x16FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x171C DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x173C DUP2 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x175C DUP2 PUSH2 0x152C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177C DUP2 PUSH2 0x156C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1798 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17EA JUMPI PUSH2 0x17E9 PUSH2 0x1980 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1837 DUP3 PUSH2 0x18A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1842 DUP4 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x1951 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BD DUP3 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CF DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0x18E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x190C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1917 DUP3 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x193C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1921 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C9 DUP2 PUSH2 0x185D JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19E0 DUP2 PUSH2 0x186F JUMP JUMPDEST DUP2 EQ PUSH2 0x19EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x19F7 DUP2 PUSH2 0x187B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A0E DUP2 PUSH2 0x18A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD INVALID DUP7 0x49 GAS MULMOD SELFBALANCE LOG0 0xE6 PUSH14 0xE216669E7D15179D2CCD1168A1AE DUP8 0xBE DELEGATECALL REVERT MOD DUP1 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "989:2293:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3029:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2536:155:18;;;:::i;:::-;;2845:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2699:134;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1345:34;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2223:305:18;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2324:40:18::1;2333:5;;;;;;;;;;;:15;;;2357:4;2333:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2324:8;:40::i;:::-;2388:9;2377:8;;:20;;;;;;;;;;;;;;;;;;2428:6;2408:5;;:27;;;;;;;;;;;;;;;;;;2457:9;2446:8;;:20;;;;;;;;;;;;;;;;;;;;2477:43;2494:8;;;;;;;;;;;2504:5;;;;;;;;;;;2511:8;;;;;;;;;;;2477:5;:16;;:43;;;;;;:::i;:::-;2223:305:::0;;;:::o;3029:248::-;3124:7;3090:5;;;;;;;;;;;:15;;;3114:4;3090:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;3082:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3166:12;3181:5;;;;;;;;;;;:14;;;3196:10;3208:7;3181:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3166:50;;3235:7;3227:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3029:248;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2536:155:18:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2587:45:18::1;2604:10;2616:8;;;;;;;;;;;2626:5;;;;;;;;;;;2587;:16;;:45;;;;;;:::i;:::-;2643:40;2652:5;;;;;;;;;;;:15;;;2676:4;2652:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2643:8;:40::i;:::-;2536:155::o:0;2845:176::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2907:12:18::1;2922:5;;;;;;;;;;;:14;;;2945:4;2952:7;2922:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2907:53;;2979:7;2971:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1318:1:0;2845:176:18::0;:::o;2699:134::-;2747:7;2816:8;;;;;;;;;;;2776:49;;:5;;;;;;;;;;;:15;;;2800:4;2776:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;2769:56;;2699:134;:::o;1345:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;669:496:4:-;833:10;:15;;;;;;;;;;;;:29;;;876:10;:14;;;;;;;;;;;;944:34;;;996:5;1019:8;1045;1081:1;1071:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:208;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:325;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;669:496;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;1763:496:4:-;1927:10;:15;;;;;;;;;;;;:29;;;1970:10;:14;;;;;;;;;;;;2038:34;;;2090:5;2113:8;2139;2175:1;2165:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:208;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:325;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1763:496;;;;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;2839:494:4:-;3003:10;:15;;;;;;;;;;;;:29;;;3046:10;:14;;;;;;;;;;;;3114:34;;;3166:5;3189:6;3213:8;3249:1;3239:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:206;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:323;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2839:494;;;;:::o;7:351:19:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:139::-;;448:6;435:20;426:29;;464:33;491:5;464:33;:::i;:::-;416:87;;;;:::o;509:137::-;;594:6;588:13;579:22;;610:30;634:5;610:30;:::i;:::-;569:77;;;;:::o;665:286::-;;780:3;773:4;765:6;761:17;757:27;747:2;;798:1;795;788:12;747:2;831:6;825:13;856:89;941:3;933:6;926:4;918:6;914:17;856:89;:::i;:::-;847:98;;737:214;;;;;:::o;957:135::-;;1039:6;1026:20;1017:29;;1055:31;1080:5;1055:31;:::i;:::-;1007:85;;;;:::o;1098:139::-;;1182:6;1169:20;1160:29;;1198:33;1225:5;1198:33;:::i;:::-;1150:87;;;;:::o;1243:143::-;;1331:6;1325:13;1316:22;;1347:33;1374:5;1347:33;:::i;:::-;1306:80;;;;:::o;1392:262::-;;1500:2;1488:9;1479:7;1475:23;1471:32;1468:2;;;1516:1;1513;1506:12;1468:2;1559:1;1584:53;1629:7;1620:6;1609:9;1605:22;1584:53;:::i;:::-;1574:63;;1530:117;1458:196;;;;:::o;1660:548::-;;;;1800:2;1788:9;1779:7;1775:23;1771:32;1768:2;;;1816:1;1813;1806:12;1768:2;1859:1;1884:53;1929:7;1920:6;1909:9;1905:22;1884:53;:::i;:::-;1874:63;;1830:117;1986:2;2012:53;2057:7;2048:6;2037:9;2033:22;2012:53;:::i;:::-;2002:63;;1957:118;2114:2;2140:51;2183:7;2174:6;2163:9;2159:22;2140:51;:::i;:::-;2130:61;;2085:116;1758:450;;;;;:::o;2214:278::-;;2330:2;2318:9;2309:7;2305:23;2301:32;2298:2;;;2346:1;2343;2336:12;2298:2;2389:1;2414:61;2467:7;2458:6;2447:9;2443:22;2414:61;:::i;:::-;2404:71;;2360:125;2288:204;;;;:::o;2498:388::-;;2626:2;2614:9;2605:7;2601:23;2597:32;2594:2;;;2642:1;2639;2632:12;2594:2;2706:1;2695:9;2691:17;2685:24;2736:18;2728:6;2725:30;2722:2;;;2768:1;2765;2758:12;2722:2;2796:73;2861:7;2852:6;2841:9;2837:22;2796:73;:::i;:::-;2786:83;;2656:223;2584:302;;;;:::o;2892:262::-;;3000:2;2988:9;2979:7;2975:23;2971:32;2968:2;;;3016:1;3013;3006:12;2968:2;3059:1;3084:53;3129:7;3120:6;3109:9;3105:22;3084:53;:::i;:::-;3074:63;;3030:117;2958:196;;;;:::o;3160:284::-;;3279:2;3267:9;3258:7;3254:23;3250:32;3247:2;;;3295:1;3292;3285:12;3247:2;3338:1;3363:64;3419:7;3410:6;3399:9;3395:22;3363:64;:::i;:::-;3353:74;;3309:128;3237:207;;;;:::o;3450:118::-;3537:24;3555:5;3537:24;:::i;:::-;3532:3;3525:37;3515:53;;:::o;3574:360::-;;3688:38;3720:5;3688:38;:::i;:::-;3742:70;3805:6;3800:3;3742:70;:::i;:::-;3735:77;;3821:52;3866:6;3861:3;3854:4;3847:5;3843:16;3821:52;:::i;:::-;3898:29;3920:6;3898:29;:::i;:::-;3893:3;3889:39;3882:46;;3664:270;;;;;:::o;3940:197::-;4060:70;4124:5;4060:70;:::i;:::-;4055:3;4048:83;4038:99;;:::o;4143:181::-;4255:62;4311:5;4255:62;:::i;:::-;4250:3;4243:75;4233:91;;:::o;4330:171::-;4437:57;4488:5;4437:57;:::i;:::-;4432:3;4425:70;4415:86;;:::o;4507:112::-;4590:22;4606:5;4590:22;:::i;:::-;4585:3;4578:35;4568:51;;:::o;4625:370::-;;4788:67;4852:2;4847:3;4788:67;:::i;:::-;4781:74;;4885:34;4881:1;4876:3;4872:11;4865:55;4951:8;4946:2;4941:3;4937:12;4930:30;4986:2;4981:3;4977:12;4970:19;;4771:224;;;:::o;5001:297::-;;5163:65;5226:1;5221:3;5163:65;:::i;:::-;5156:72;;5258:4;5254:1;5249:3;5245:11;5238:25;5289:2;5284:3;5280:12;5273:19;;5146:152;;;:::o;5304:330::-;;5467:67;5531:2;5526:3;5467:67;:::i;:::-;5460:74;;5564:34;5560:1;5555:3;5551:11;5544:55;5625:2;5620:3;5616:12;5609:19;;5450:184;;;:::o;5640:320::-;;5803:67;5867:2;5862:3;5803:67;:::i;:::-;5796:74;;5900:24;5896:1;5891:3;5887:11;5880:45;5951:2;5946:3;5942:12;5935:19;;5786:174;;;:::o;5966:317::-;;6129:67;6193:2;6188:3;6129:67;:::i;:::-;6122:74;;6226:21;6222:1;6217:3;6213:11;6206:42;6274:2;6269:3;6265:12;6258:19;;6112:171;;;:::o;6289:118::-;6376:24;6394:5;6376:24;:::i;:::-;6371:3;6364:37;6354:53;;:::o;6413:222::-;;6544:2;6533:9;6529:18;6521:26;;6557:71;6625:1;6614:9;6610:17;6601:6;6557:71;:::i;:::-;6511:124;;;;:::o;6641:332::-;;6800:2;6789:9;6785:18;6777:26;;6813:71;6881:1;6870:9;6866:17;6857:6;6813:71;:::i;:::-;6894:72;6962:2;6951:9;6947:18;6938:6;6894:72;:::i;:::-;6767:206;;;;;:::o;6979:790::-;;7289:2;7278:9;7274:18;7266:26;;7302:104;7403:1;7392:9;7388:17;7379:6;7302:104;:::i;:::-;7453:9;7447:4;7443:20;7438:2;7427:9;7423:18;7416:48;7481:76;7552:4;7543:6;7481:76;:::i;:::-;7473:84;;7604:9;7598:4;7594:20;7589:2;7578:9;7574:18;7567:48;7632:130;7757:4;7632:130;:::i;:::-;7624:138;;7256:513;;;;;:::o;7775:690::-;;8033:3;8022:9;8018:19;8010:27;;8047:96;8140:1;8129:9;8125:17;8116:6;8047:96;:::i;:::-;8153:72;8221:2;8210:9;8206:18;8197:6;8153:72;:::i;:::-;8235;8303:2;8292:9;8288:18;8279:6;8235:72;:::i;:::-;8354:9;8348:4;8344:20;8339:2;8328:9;8324:18;8317:48;8382:76;8453:4;8444:6;8382:76;:::i;:::-;8374:84;;8000:465;;;;;;;:::o;8471:682::-;;8725:3;8714:9;8710:19;8702:27;;8739:96;8832:1;8821:9;8817:17;8808:6;8739:96;:::i;:::-;8845:72;8913:2;8902:9;8898:18;8889:6;8845:72;:::i;:::-;8927:68;8991:2;8980:9;8976:18;8967:6;8927:68;:::i;:::-;9042:9;9036:4;9032:20;9027:2;9016:9;9012:18;9005:48;9070:76;9141:4;9132:6;9070:76;:::i;:::-;9062:84;;8692:461;;;;;;;:::o;9159:438::-;;9371:2;9360:9;9356:18;9348:26;;9384:91;9472:1;9461:9;9457:17;9448:6;9384:91;:::i;:::-;9485:105;9586:2;9575:9;9571:18;9562:6;9485:105;:::i;:::-;9338:259;;;;;:::o;9603:419::-;;9807:2;9796:9;9792:18;9784:26;;9856:9;9850:4;9846:20;9842:1;9831:9;9827:17;9820:47;9884:131;10010:4;9884:131;:::i;:::-;9876:139;;9774:248;;;:::o;10028:419::-;;10232:2;10221:9;10217:18;10209:26;;10281:9;10275:4;10271:20;10267:1;10256:9;10252:17;10245:47;10309:131;10435:4;10309:131;:::i;:::-;10301:139;;10199:248;;;:::o;10453:419::-;;10657:2;10646:9;10642:18;10634:26;;10706:9;10700:4;10696:20;10692:1;10681:9;10677:17;10670:47;10734:131;10860:4;10734:131;:::i;:::-;10726:139;;10624:248;;;:::o;10878:419::-;;11082:2;11071:9;11067:18;11059:26;;11131:9;11125:4;11121:20;11117:1;11106:9;11102:17;11095:47;11159:131;11285:4;11159:131;:::i;:::-;11151:139;;11049:248;;;:::o;11303:222::-;;11434:2;11423:9;11419:18;11411:26;;11447:71;11515:1;11504:9;11500:17;11491:6;11447:71;:::i;:::-;11401:124;;;;:::o;11531:283::-;;11597:2;11591:9;11581:19;;11639:4;11631:6;11627:17;11746:6;11734:10;11731:22;11710:18;11698:10;11695:34;11692:62;11689:2;;;11757:18;;:::i;:::-;11689:2;11797:10;11793:2;11786:22;11571:243;;;;:::o;11820:331::-;;11971:18;11963:6;11960:30;11957:2;;;11993:18;;:::i;:::-;11957:2;12078:4;12074:9;12067:4;12059:6;12055:17;12051:33;12043:41;;12139:4;12133;12129:15;12121:23;;11886:265;;;:::o;12157:98::-;;12242:5;12236:12;12226:22;;12215:40;;;:::o;12261:168::-;;12378:6;12373:3;12366:19;12418:4;12413:3;12409:14;12394:29;;12356:73;;;;:::o;12435:169::-;;12553:6;12548:3;12541:19;12593:4;12588:3;12584:14;12569:29;;12531:73;;;;:::o;12610:185::-;;12667:20;12685:1;12667:20;:::i;:::-;12662:25;;12701:20;12719:1;12701:20;:::i;:::-;12696:25;;12740:1;12730:2;;12745:18;;:::i;:::-;12730:2;12787:1;12784;12780:9;12775:14;;12652:143;;;;:::o;12801:96::-;;12867:24;12885:5;12867:24;:::i;:::-;12856:35;;12846:51;;;:::o;12903:90::-;;12980:5;12973:13;12966:21;12955:32;;12945:48;;;:::o;12999:91::-;;13078:5;13074:2;13063:21;13052:32;;13042:48;;;:::o;13096:126::-;;13173:42;13166:5;13162:54;13151:65;;13141:81;;;:::o;13228:77::-;;13294:5;13283:16;;13273:32;;;:::o;13311:192::-;;13427:70;13491:5;13427:70;:::i;:::-;13414:83;;13404:99;;;:::o;13509:146::-;;13625:24;13643:5;13625:24;:::i;:::-;13612:37;;13602:53;;;:::o;13661:176::-;;13769:62;13825:5;13769:62;:::i;:::-;13756:75;;13746:91;;;:::o;13843:138::-;;13951:24;13969:5;13951:24;:::i;:::-;13938:37;;13928:53;;;:::o;13987:166::-;;14090:57;14141:5;14090:57;:::i;:::-;14077:70;;14067:86;;;:::o;14159:133::-;;14262:24;14280:5;14262:24;:::i;:::-;14249:37;;14239:53;;;:::o;14298:307::-;14366:1;14376:113;14390:6;14387:1;14384:13;14376:113;;;14475:1;14470:3;14466:11;14460:18;14456:1;14451:3;14447:11;14440:39;14412:2;14409:1;14405:10;14400:15;;14376:113;;;14507:6;14504:1;14501:13;14498:2;;;14587:1;14578:6;14573:3;14569:16;14562:27;14498:2;14347:258;;;;:::o;14797:180::-;14845:77;14842:1;14835:88;14942:4;14939:1;14932:15;14966:4;14963:1;14956:15;14983:180;15031:77;15028:1;15021:88;15128:4;15125:1;15118:15;15152:4;15149:1;15142:15;15169:102;;15261:2;15257:7;15252:2;15245:5;15241:14;15237:28;15227:38;;15217:54;;;:::o;15277:122::-;15350:24;15368:5;15350:24;:::i;:::-;15343:5;15340:35;15330:2;;15389:1;15386;15379:12;15330:2;15320:79;:::o;15405:116::-;15475:21;15490:5;15475:21;:::i;:::-;15468:5;15465:32;15455:2;;15511:1;15508;15501:12;15455:2;15445:76;:::o;15527:118::-;15598:22;15614:5;15598:22;:::i;:::-;15591:5;15588:33;15578:2;;15635:1;15632;15625:12;15578:2;15568:77;:::o;15651:122::-;15724:24;15742:5;15724:24;:::i;:::-;15717:5;15714:35;15704:2;;15763:1;15760;15753:12;15704:2;15694:79;:::o"
            },
            "methodIdentifiers": {
              "cfaV1()": "d3112b2e",
              "closeStream()": "9dad9382",
              "deposit(uint256)": "b6b55f25",
              "editStream(address,address,int96)": "2484ea2f",
              "getStreamerETA()": "b9146161",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cfaV1\",\"outputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantFlowAgreementV1\",\"name\":\"cfa\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"}],\"name\":\"editStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStreamerETA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Streamer.sol\":\"Streamer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]},\"contracts/interfaces/Streamer.sol\":{\"keccak256\":\"0x6769a6868a1acf2f3bc24b12b4f0e4151a5a75e6a44956a5a019b1fa4c8f6802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8956c8c49bddbf0d2fa136ee0ae69906c9dcb5e58a6ac53816ce8b4f4fd1924\",\"dweb:/ipfs/QmdEYdBJtcPt2gZ2uCYGGfbFMqJxmTQywXnyoSNZUe19j3\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n --> contracts/interfaces/ControllerFactory.sol:6:5:\n  |\n6 |     constructor () public {\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 137,
          "file": "contracts/interfaces/ControllerFactory.sol",
          "start": 97
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              363
            ],
            "Ownable": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 364,
              "src": "112:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "668:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:7:0"
                }
              ],
              "contractDependencies": [
                363
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "144:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104,
                363
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "682:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "738:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "769:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:57:0"
                  },
                  "src": "711:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "911:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 353,
                                "src": "940:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "940:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "921:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "908:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:0:0"
                  },
                  "scope": 104,
                  "src": "897:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1091:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1101:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "966:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1082:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1081:9:0"
                  },
                  "scope": 104,
                  "src": "1036:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1230:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1248:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1248:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 353,
                                  "src": "1259:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1259:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1248:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1318:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1127:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:0"
                  },
                  "src": "1209:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1759:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1751:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1751:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1332:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1712:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1712:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1694:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:0:0"
                  },
                  "scope": 104,
                  "src": "1668:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1988:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "2006:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2026:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2018:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2018:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2018:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2006:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1998:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2100:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2081:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2081:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1775:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1978:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1978:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1945:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1988:0:0"
                  },
                  "scope": 104,
                  "src": "1918:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2333:124:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2343:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2343:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2362:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2343:25:0"
                      },
                      {
                        "expression": {
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 93,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 94,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2387:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2378:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2378:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2431:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 97,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2410:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "EmitStatement",
                        "src": "2405:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "2122:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2298:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2297:18:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2333:0:0"
                  },
                  "scope": 104,
                  "src": "2270:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "639:1820:0"
            }
          ],
          "src": "87:2373:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              182
            ]
          },
          "id": 183,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 106,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 107,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 182,
              "linearizedBaseContracts": [
                182
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 108,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 113,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "316:2:1"
                  },
                  "returnParameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "342:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "342:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:9:1"
                  },
                  "scope": 182,
                  "src": "296:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 114,
                    "nodeType": "StructuredDocumentation",
                    "src": "357:72:1",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 121,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "453:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "453:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "452:17:1"
                  },
                  "returnParameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 121,
                        "src": "493:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "492:9:1"
                  },
                  "scope": 182,
                  "src": "434:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 122,
                    "nodeType": "StructuredDocumentation",
                    "src": "508:202:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 131,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "733:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "745:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:28:1"
                  },
                  "returnParameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "779:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:6:1"
                  },
                  "scope": 182,
                  "src": "715:70:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 132,
                    "nodeType": "StructuredDocumentation",
                    "src": "791:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 141,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "1079:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1079:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "1094:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1094:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:32:1"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "1134:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1134:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1133:9:1"
                  },
                  "scope": 182,
                  "src": "1060:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 142,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:642:1",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 151,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "1813:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "1830:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1830:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:33:1"
                  },
                  "returnParameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 151,
                        "src": "1864:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1864:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:6:1"
                  },
                  "scope": 182,
                  "src": "1796:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 152,
                    "nodeType": "StructuredDocumentation",
                    "src": "1876:287:1",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 163,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2199:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2199:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2221:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2241:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:72:1"
                  },
                  "returnParameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2280:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2279:6:1"
                  },
                  "scope": 182,
                  "src": "2168:118:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 164,
                    "nodeType": "StructuredDocumentation",
                    "src": "2292:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 172,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2470:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2470:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2492:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2492:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "2512:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2469:57:1"
                  },
                  "src": "2455:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 173,
                    "nodeType": "StructuredDocumentation",
                    "src": "2533:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 181,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2701:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2701:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2724:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2724:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2749:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2749:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2700:63:1"
                  },
                  "src": "2686:78:1"
                }
              ],
              "scope": 183,
              "src": "202:2564:1"
            }
          ],
          "src": "106:2661:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
          "exportedSymbols": {
            "IERC777": [
              341
            ]
          },
          "id": 342,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 184,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "93:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 185,
                "nodeType": "StructuredDocumentation",
                "src": "118:372:2",
                "text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
              },
              "fullyImplemented": false,
              "id": 341,
              "linearizedBaseContracts": [
                341
              ],
              "name": "IERC777",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "515:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 191,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:2"
                  },
                  "returnParameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "613:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "612:15:2"
                  },
                  "scope": 341,
                  "src": "574:54:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 192,
                    "nodeType": "StructuredDocumentation",
                    "src": "634:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 197,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "756:2:2"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "782:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "782:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "781:15:2"
                  },
                  "scope": 341,
                  "src": "741:56:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "803:287:2",
                    "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
                  },
                  "functionSelector": "556f0dc7",
                  "id": 203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "granularity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1115:2:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "1141:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1140:9:2"
                  },
                  "scope": 341,
                  "src": "1095:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "1156:66:2",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 209,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1247:2:2"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1273:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:9:2"
                  },
                  "scope": 341,
                  "src": "1227:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "1288:83:2",
                    "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
                  },
                  "functionSelector": "70a08231",
                  "id": 217,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "1395:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1395:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1394:15:2"
                  },
                  "returnParameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "1433:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1433:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1432:9:2"
                  },
                  "scope": 341,
                  "src": "1376:66:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "1448:585:2",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "9bd9bbc6",
                  "id": 227,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "2061:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2061:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "2088:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 227,
                        "src": "2112:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2112:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2051:86:2"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2146:0:2"
                  },
                  "scope": 341,
                  "src": "2038:109:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 228,
                    "nodeType": "StructuredDocumentation",
                    "src": "2153:404:2",
                    "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
                  },
                  "functionSelector": "fe9d9303",
                  "id": 235,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "2576:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "2592:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2575:37:2"
                  },
                  "returnParameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2621:0:2"
                  },
                  "scope": 341,
                  "src": "2562:60:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 236,
                    "nodeType": "StructuredDocumentation",
                    "src": "2628:249:2",
                    "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
                  },
                  "functionSelector": "d95b6371",
                  "id": 245,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOperatorFor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "2905:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2905:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "2923:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2923:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2904:39:2"
                  },
                  "returnParameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "2967:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2967:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2966:6:2"
                  },
                  "scope": 341,
                  "src": "2882:91:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "2979:233:2",
                    "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "959b8c3f",
                  "id": 251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "3244:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3243:18:2"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3270:0:2"
                  },
                  "scope": 341,
                  "src": "3217:54:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 252,
                    "nodeType": "StructuredDocumentation",
                    "src": "3277:261:2",
                    "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "fad8b32a",
                  "id": 257,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 257,
                        "src": "3567:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3567:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3566:18:2"
                  },
                  "returnParameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3593:0:2"
                  },
                  "scope": 341,
                  "src": "3543:51:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 258,
                    "nodeType": "StructuredDocumentation",
                    "src": "3600:338:2",
                    "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
                  },
                  "functionSelector": "06e48538",
                  "id": 264,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultOperators",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3968:2:2"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "3994:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3994:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 261,
                          "nodeType": "ArrayTypeName",
                          "src": "3994:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3993:18:2"
                  },
                  "scope": 341,
                  "src": "3943:69:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 265,
                    "nodeType": "StructuredDocumentation",
                    "src": "4018:714:2",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "62ad1b83",
                  "id": 278,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorSend",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "4768:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4768:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "4792:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4792:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "4819:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4819:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "4843:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4843:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "4872:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4872:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4758:147:2"
                  },
                  "returnParameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4914:0:2"
                  },
                  "scope": 341,
                  "src": "4737:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "4921:532:2",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
                  },
                  "functionSelector": "fc673c4f",
                  "id": 290,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "5489:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5489:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "5514:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5514:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "5538:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5538:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "5567:27:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 286,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5567:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5479:121:2"
                  },
                  "returnParameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5609:0:2"
                  },
                  "scope": 341,
                  "src": "5458:152:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 304,
                  "name": "Sent",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5636:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5636:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 294,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5670:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5670:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 296,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5700:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5700:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 298,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5728:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5752:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5752:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 302,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 304,
                        "src": "5772:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5772:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5626:170:2"
                  },
                  "src": "5616:181:2"
                },
                {
                  "anonymous": false,
                  "id": 316,
                  "name": "Minted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5816:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5842:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5842:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5862:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5862:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 312,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5878:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5878:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 314,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5890:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 313,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5890:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5815:94:2"
                  },
                  "src": "5803:107:2"
                },
                {
                  "anonymous": false,
                  "id": 328,
                  "name": "Burned",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "5929:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "5955:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "5977:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5977:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "5993:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5993:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 326,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 328,
                        "src": "6005:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6005:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:96:2"
                  },
                  "src": "5916:109:2"
                },
                {
                  "anonymous": false,
                  "id": 334,
                  "name": "AuthorizedOperator",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "6056:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6056:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 332,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "6082:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6082:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6055:55:2"
                  },
                  "src": "6031:80:2"
                },
                {
                  "anonymous": false,
                  "id": 340,
                  "name": "RevokedOperator",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "6139:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6139:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "6165:27:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6165:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6138:55:2"
                  },
                  "src": "6117:77:2"
                }
              ],
              "scope": 342,
              "src": "491:5705:2"
            }
          ],
          "src": "93:6104:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              363
            ]
          },
          "id": 364,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 343,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 344,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:3",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 363,
              "linearizedBaseContracts": [
                363
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "702:34:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 349,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 348,
                        "id": 351,
                        "nodeType": "Return",
                        "src": "712:17:3"
                      }
                    ]
                  },
                  "id": 353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:3"
                  },
                  "returnParameters": {
                    "id": 348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 347,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "693:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:3"
                  },
                  "scope": 363,
                  "src": "640:96:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "809:32:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 358,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 357,
                        "id": 360,
                        "nodeType": "Return",
                        "src": "819:15:3"
                      }
                    ]
                  },
                  "id": 362,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:3"
                  },
                  "returnParameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "793:14:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:3"
                  },
                  "scope": 363,
                  "src": "742:99:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 364,
              "src": "608:235:3"
            }
          ],
          "src": "86:758:3"
        },
        "id": 3
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
          "exportedSymbols": {
            "CFAv1Library": [
              883
            ],
            "IConstantFlowAgreementV1": [
              1054
            ],
            "ISuperfluid": [
              2414
            ],
            "ISuperfluidToken": [
              2785
            ]
          },
          "id": 884,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:24:4"
            },
            {
              "id": 366,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "59:33:4"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "../interfaces/superfluid/ISuperfluid.sol",
              "id": 369,
              "nodeType": "ImportDirective",
              "scope": 884,
              "sourceUnit": 2415,
              "src": "94:97:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 367,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "107:11:4",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 368,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "124:16:4",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "file": "../interfaces/agreements/IConstantFlowAgreementV1.sol",
              "id": 371,
              "nodeType": "ImportDirective",
              "scope": 884,
              "sourceUnit": 1055,
              "src": "193:101:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 370,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "206:24:4",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 883,
              "linearizedBaseContracts": [
                883
              ],
              "name": "CFAv1Library",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "CFAv1Library.InitData",
                  "id": 378,
                  "members": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "host",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "350:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                        "typeString": "contract ISuperfluid"
                      },
                      "typeName": {
                        "id": 373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 372,
                          "name": "ISuperfluid",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2414,
                          "src": "350:11:4"
                        },
                        "referencedDeclaration": 2414,
                        "src": "350:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 377,
                      "mutability": "mutable",
                      "name": "cfa",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "376:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                        "typeString": "contract IConstantFlowAgreementV1"
                      },
                      "typeName": {
                        "id": 376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 375,
                          "name": "IConstantFlowAgreementV1",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1054,
                          "src": "376:24:4"
                        },
                        "referencedDeclaration": 1054,
                        "src": "376:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitData",
                  "nodeType": "StructDefinition",
                  "scope": 883,
                  "src": "324:87:4",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 415,
                    "nodeType": "Block",
                    "src": "823:342:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 396,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "876:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "876:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 400,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 381,
                                        "src": "944:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 401,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "944:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 941,
                                    "src": "944:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "944:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 404,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "996:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 405,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 383,
                                  "src": "1019:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 406,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "1045:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 409,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1081:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1071:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 407,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1075:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1071:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 398,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "904:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "904:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "904:208:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1126:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 391,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "833:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "833:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "833:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:325:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 414,
                        "nodeType": "ExpressionStatement",
                        "src": "833:325:4"
                      }
                    ]
                  },
                  "id": 416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "698:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 380,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 379,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "698:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "698:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 383,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "735:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "735:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "761:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 385,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 384,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "761:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "761:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "793:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:125:4"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "823:0:4"
                  },
                  "scope": 883,
                  "src": "669:496:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 455,
                    "nodeType": "Block",
                    "src": "1394:328:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 436,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "1447:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "1447:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 440,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "1515:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 441,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "1515:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 941,
                                    "src": "1515:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1515:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 444,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 424,
                                  "src": "1567:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 445,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 421,
                                  "src": "1590:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 446,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "1616:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1652:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1642:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 447,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1646:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1642:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 438,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1475:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1475:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1475:208:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 452,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "1697:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 431,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "1404:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "1404:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "1404:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1404:311:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "1404:311:4"
                      }
                    ]
                  },
                  "id": 456,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1237:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 418,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 417,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "1237:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "1237:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1275:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1301:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 423,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 422,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1301:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1301:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 426,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1333:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 425,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "1357:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1227:157:4"
                  },
                  "returnParameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1394:0:4"
                  },
                  "scope": 883,
                  "src": "1208:514:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 493,
                    "nodeType": "Block",
                    "src": "1917:342:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 474,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "1970:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 475,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "1970:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 478,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 459,
                                        "src": "2038:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 479,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "2038:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 480,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "updateFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 956,
                                    "src": "2038:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2038:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 482,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 464,
                                  "src": "2090:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 483,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 461,
                                  "src": "2113:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 484,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "2139:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 487,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2175:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 486,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "2165:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 485,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2169:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2165:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 476,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1998:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1998:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1998:208:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2220:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 469,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 459,
                                "src": "1927:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "1927:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "1927:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1927:325:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 492,
                        "nodeType": "ExpressionStatement",
                        "src": "1927:325:4"
                      }
                    ]
                  },
                  "id": 494,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1792:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 458,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 457,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "1792:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "1792:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1829:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1829:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 464,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1855:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 463,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 462,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1855:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1855:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 494,
                        "src": "1887:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 465,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1887:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1782:125:4"
                  },
                  "returnParameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1917:0:4"
                  },
                  "scope": 883,
                  "src": "1763:496:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "2487:328:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 514,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 497,
                                "src": "2540:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 515,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "2540:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 518,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 497,
                                        "src": "2608:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "2608:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 520,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "updateFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 956,
                                    "src": "2608:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2608:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 522,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 502,
                                  "src": "2660:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 523,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "2683:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 524,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "2709:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 527,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2745:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "2735:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 525,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2739:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 528,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2735:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 516,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2568:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2568:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2568:208:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 530,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "2790:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 509,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 497,
                                "src": "2497:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "2497:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "2497:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2497:311:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "2497:311:4"
                      }
                    ]
                  },
                  "id": 534,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 497,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2331:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 496,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 495,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "2331:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "2331:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2368:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2394:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 501,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 500,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "2394:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "2394:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2426:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2426:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2450:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2450:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2321:156:4"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:0:4"
                  },
                  "scope": 883,
                  "src": "2302:513:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "2993:340:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 552,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 537,
                                "src": "3046:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "3046:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 556,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 537,
                                        "src": "3114:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 557,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "3114:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1035,
                                    "src": "3114:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3114:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 560,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 544,
                                  "src": "3166:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 561,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 539,
                                  "src": "3189:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 562,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 541,
                                  "src": "3213:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 565,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3249:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "3239:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 563,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3243:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3239:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 554,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3074:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "3074:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3074:206:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3294:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 547,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 537,
                                "src": "3003:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "3003:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "3003:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3003:323:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "3003:323:4"
                      }
                    ]
                  },
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 537,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "2868:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 536,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 535,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "2868:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "2868:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "2905:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2905:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "2929:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2929:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "2955:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 543,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 542,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "2955:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "2955:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2858:125:4"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2993:0:4"
                  },
                  "scope": 883,
                  "src": "2839:494:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 611,
                    "nodeType": "Block",
                    "src": "3562:326:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 592,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "3615:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 377,
                              "src": "3615:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 596,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 575,
                                        "src": "3683:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 597,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 377,
                                      "src": "3683:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 598,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1035,
                                    "src": "3683:25:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3683:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 600,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 582,
                                  "src": "3735:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 601,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 577,
                                  "src": "3758:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 602,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "3782:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 605,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3818:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "3808:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 603,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3812:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3808:12:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 594,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3643:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "3643:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3643:206:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 608,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "3863:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 587,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "3572:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 590,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 374,
                              "src": "3572:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2312,
                            "src": "3572:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:309:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 610,
                        "nodeType": "ExpressionStatement",
                        "src": "3572:309:4"
                      }
                    ]
                  },
                  "id": 612,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 575,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "3406:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 574,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 573,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "3406:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "3406:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "3443:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "3467:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "3493:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 581,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 580,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "3493:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "3493:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 612,
                        "src": "3525:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3525:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:156:4"
                  },
                  "returnParameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3562:0:4"
                  },
                  "scope": 883,
                  "src": "3377:511:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "4137:383:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 629,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "4148:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 630,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4147:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 634,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "4214:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "4214:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 638,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 615,
                                          "src": "4282:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 639,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "4282:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 640,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "createFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 941,
                                      "src": "4282:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 641,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4282:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 642,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 622,
                                    "src": "4334:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 643,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 619,
                                    "src": "4357:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 644,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 624,
                                    "src": "4383:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 647,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4419:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4409:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 645,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4413:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 648,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4409:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 636,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4242:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4242:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4242:208:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4464:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 651,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "4500:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 631,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 615,
                                  "src": "4160:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 632,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "4160:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "4160:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4160:353:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4147:366:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 654,
                        "nodeType": "ExpressionStatement",
                        "src": "4147:366:4"
                      }
                    ]
                  },
                  "id": 656,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "3956:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 614,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 613,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "3956:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "3956:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 617,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "3993:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 616,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3993:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "4019:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4019:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "4045:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 621,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 620,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "4045:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "4045:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "4077:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4077:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3946:151:4"
                  },
                  "returnParameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "4116:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4116:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4115:21:4"
                  },
                  "scope": 883,
                  "src": "3920:600:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 701,
                    "nodeType": "Block",
                    "src": "4814:369:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 675,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 673,
                                "src": "4825:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 676,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4824:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 680,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 659,
                                  "src": "4891:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 681,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "4891:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 684,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 659,
                                          "src": "4959:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 685,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "4959:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 686,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "createFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 941,
                                      "src": "4959:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 687,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4959:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 688,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "5011:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 689,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 663,
                                    "src": "5034:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 690,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 668,
                                    "src": "5060:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5096:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "5086:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 691,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5090:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 694,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5086:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 682,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4919:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4919:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4919:208:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 696,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "5141:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 697,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 661,
                                "src": "5163:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 677,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 659,
                                  "src": "4837:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "4837:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "4837:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4837:339:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4824:352:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "4824:352:4"
                      }
                    ]
                  },
                  "id": 702,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4602:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 658,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 657,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "4602:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "4602:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4639:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4665:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4665:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4691:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 665,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 664,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "4691:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "4691:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4723:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4747:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4747:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4592:182:4"
                  },
                  "returnParameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "4793:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4792:21:4"
                  },
                  "scope": 883,
                  "src": "4566:617:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "5453:383:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 719,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 717,
                                "src": "5464:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 720,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5463:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 724,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 705,
                                  "src": "5530:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 725,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "5530:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 728,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 705,
                                          "src": "5598:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 729,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "5598:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 730,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "updateFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 956,
                                      "src": "5598:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5598:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 732,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 712,
                                    "src": "5650:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 733,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 709,
                                    "src": "5673:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 734,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 714,
                                    "src": "5699:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 737,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5735:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 736,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "5725:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 735,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5729:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5725:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 726,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5558:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "5558:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5558:208:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5780:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 741,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "5816:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 721,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 705,
                                  "src": "5476:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 722,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "5476:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "5476:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5476:353:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "5463:366:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "5463:366:4"
                      }
                    ]
                  },
                  "id": 746,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 705,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5272:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 704,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 703,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "5272:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "5272:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5309:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5309:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5335:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5335:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 712,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5361:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 711,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 710,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "5361:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "5361:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5393:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5262:151:4"
                  },
                  "returnParameters": {
                    "id": 718,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5432:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5431:21:4"
                  },
                  "scope": 883,
                  "src": "5236:600:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 791,
                    "nodeType": "Block",
                    "src": "6130:369:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 765,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 763,
                                "src": "6141:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 766,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6140:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 770,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "6207:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 771,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "6207:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 774,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 749,
                                          "src": "6275:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 775,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "6275:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 776,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "updateFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 956,
                                      "src": "6275:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6275:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 778,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 756,
                                    "src": "6327:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 779,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 753,
                                    "src": "6350:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 780,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 758,
                                    "src": "6376:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 783,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6412:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 782,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "6402:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 781,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6406:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 784,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6402:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 772,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6235:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "6235:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6235:208:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 786,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 760,
                                "src": "6457:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 787,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 751,
                                "src": "6479:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 767,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "6153:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 768,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "6153:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "6153:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6153:339:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "6140:352:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 790,
                        "nodeType": "ExpressionStatement",
                        "src": "6140:352:4"
                      }
                    ]
                  },
                  "id": 792,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 749,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "5918:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 748,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 747,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "5918:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "5918:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "5955:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "5981:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5981:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "6007:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 755,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 754,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "6007:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "6007:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "6039:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "6063:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6063:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5908:182:4"
                  },
                  "returnParameters": {
                    "id": 764,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "6109:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6109:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6108:21:4"
                  },
                  "scope": 883,
                  "src": "5882:617:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "6748:381:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 809,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "6759:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 810,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6758:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 814,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "6825:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 815,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "6825:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 818,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 795,
                                          "src": "6893:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 819,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "6893:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 820,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1035,
                                      "src": "6893:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6893:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 822,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 804,
                                    "src": "6945:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 823,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 799,
                                    "src": "6968:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 824,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 801,
                                    "src": "6992:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 827,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7028:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 826,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "7018:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 825,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7022:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 828,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7018:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 816,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6853:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "6853:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6853:206:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7073:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 831,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "7109:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 811,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "6771:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 812,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "6771:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "6771:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6771:351:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "6758:364:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "6758:364:4"
                      }
                    ]
                  },
                  "id": 836,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 795,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6567:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 794,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 793,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "6567:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "6567:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 797,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6604:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 796,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6604:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6630:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6630:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6654:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6654:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6680:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 803,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 802,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "6680:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "6680:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6557:151:4"
                  },
                  "returnParameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "6727:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6727:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6726:21:4"
                  },
                  "scope": 883,
                  "src": "6531:598:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 881,
                    "nodeType": "Block",
                    "src": "7424:367:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 855,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "7435:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 856,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7434:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 860,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "7501:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 861,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 377,
                                "src": "7501:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 864,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 839,
                                          "src": "7569:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 865,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 377,
                                        "src": "7569:14:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1035,
                                      "src": "7569:25:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2785_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "7569:34:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 868,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 848,
                                    "src": "7621:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 869,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 843,
                                    "src": "7644:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 870,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 845,
                                    "src": "7668:8:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 873,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7704:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 872,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "7694:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 871,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7698:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7694:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 862,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7529:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "7529:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7529:206:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 876,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 850,
                                "src": "7749:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 877,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 841,
                                "src": "7771:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 857,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 839,
                                  "src": "7447:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 858,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 374,
                                "src": "7447:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2363,
                              "src": "7447:40:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1403_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7447:337:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "7434:350:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "7434:350:4"
                      }
                    ]
                  },
                  "id": 882,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7212:27:4",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 838,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 837,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 378,
                            "src": "7212:8:4"
                          },
                          "referencedDeclaration": 378,
                          "src": "7212:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7249:16:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7249:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7275:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7275:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7299:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7299:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 848,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7325:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 847,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 846,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "7325:16:4"
                          },
                          "referencedDeclaration": 2785,
                          "src": "7325:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7357:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7357:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7202:182:4"
                  },
                  "returnParameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "7403:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7403:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7402:21:4"
                  },
                  "scope": 883,
                  "src": "7176:615:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 884,
              "src": "296:7497:4"
            }
          ],
          "src": "34:7759:4"
        },
        "id": 4
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
          "exportedSymbols": {
            "IConstantFlowAgreementV1": [
              1054
            ],
            "ISuperAgreement": [
              1403
            ],
            "ISuperfluidToken": [
              2785
            ]
          },
          "id": 1055,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 885,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:5"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "../superfluid/ISuperAgreement.sol",
              "id": 887,
              "nodeType": "ImportDirective",
              "scope": 1055,
              "sourceUnit": 1404,
              "src": "62:68:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 886,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:5",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "../superfluid/ISuperfluidToken.sol",
              "id": 889,
              "nodeType": "ImportDirective",
              "scope": 1055,
              "sourceUnit": 2786,
              "src": "131:70:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 888,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "140:16:5",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 891,
                    "name": "ISuperAgreement",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1403,
                    "src": "338:15:5"
                  },
                  "id": 892,
                  "nodeType": "InheritanceSpecifier",
                  "src": "338:15:5"
                }
              ],
              "contractDependencies": [
                1403
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 890,
                "nodeType": "StructuredDocumentation",
                "src": "204:87:5",
                "text": " @dev Superfluid's constant flow agreement interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1054,
              "linearizedBaseContracts": [
                1054,
                1403
              ],
              "name": "IConstantFlowAgreementV1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1385
                  ],
                  "body": {
                    "id": 903,
                    "nodeType": "Block",
                    "src": "485:95:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "512:60:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                              },
                              "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                              }
                            ],
                            "id": 899,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "502:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:71:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 898,
                        "id": 902,
                        "nodeType": "Return",
                        "src": "495:78:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 893,
                    "nodeType": "StructuredDocumentation",
                    "src": "361:53:5",
                    "text": "@dev ISuperAgreement.agreementType implementation"
                  },
                  "functionSelector": "7730599e",
                  "id": 904,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "agreementType",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 895,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "453:8:5"
                  },
                  "parameters": {
                    "id": 894,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "441:2:5"
                  },
                  "returnParameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "476:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "475:9:5"
                  },
                  "scope": 1054,
                  "src": "419:161:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 905,
                    "nodeType": "StructuredDocumentation",
                    "src": "586:138:5",
                    "text": " @dev Get the maximum flow rate allowed with the deposit\n @param deposit Deposit amount used for creating the flow"
                  },
                  "functionSelector": "0602f7db",
                  "id": 915,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMaximumFlowRateFromDeposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "777:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 907,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 906,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "777:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "777:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "809:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:58:5"
                  },
                  "returnParameters": {
                    "id": 914,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "873:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "872:16:5"
                  },
                  "scope": 1054,
                  "src": "729:160:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 916,
                    "nodeType": "StructuredDocumentation",
                    "src": "895:319:5",
                    "text": " @dev Get the deposit required for creating the flow\n @param flowRate Flow rate to be tested\n \n NOTE: \n - if calculated deposit (flowRate * liquidationPeriod) is less\n   than the minimum deposit, we use the minimum deposit otherwise\n   we use the calculated deposit"
                  },
                  "functionSelector": "8d997f6e",
                  "id": 926,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositRequiredForFlowRate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1267:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 918,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 917,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1267:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1267:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1299:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1257:57:5"
                  },
                  "returnParameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1362:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1362:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1361:17:5"
                  },
                  "scope": 1054,
                  "src": "1219:160:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 927,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:574:5",
                    "text": " @dev Create a flow betwen sender and receiver.\n @param token Super token address.\n @param receiver Flow receiver address.\n @param flowRate New flow rate in amount per second.\n # App callbacks\n - AgreementCreated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - A deposit is taken as safety margin for the solvency agents.\n - A extra gas fee may be taken to pay for solvency agent liquidations."
                  },
                  "functionSelector": "62fc305e",
                  "id": 941,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "1993:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 929,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 928,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1993:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1993:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "2025:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "2051:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2051:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "2075:18:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2075:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1983:116:5"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 941,
                        "src": "2141:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2141:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2140:21:5"
                  },
                  "scope": 1054,
                  "src": "1964:198:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 942,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:668:5",
                    "text": " @dev Update the flow rate between sender and receiver.\n @param token Super token address.\n @param receiver Flow receiver address.\n @param flowRate New flow rate in amount per second.\n # App callbacks\n - AgreementUpdated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - Only the flow sender may update the flow rate.\n - Even if the flow rate is zero, the flow is not deleted\n from the system.\n - Deposit amount will be adjusted accordingly.\n - No new gas fee is charged."
                  },
                  "functionSelector": "50209a62",
                  "id": 956,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "2870:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 944,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 943,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "2870:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "2870:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "2902:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2902:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 949,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "2928:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 948,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2928:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "2952:18:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2860:116:5"
                  },
                  "returnParameters": {
                    "id": 955,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 954,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "3018:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 953,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3018:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3017:21:5"
                  },
                  "scope": 1054,
                  "src": "2841:198:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 957,
                    "nodeType": "StructuredDocumentation",
                    "src": "3046:412:5",
                    "text": " @dev Get the flow data between `sender` and `receiver`.\n @param token Super token address.\n @param sender Flow receiver.\n @param receiver Flow sender.\n @return timestamp Timestamp of when the flow is updated.\n @return flowRate The flow rate.\n @return deposit The amount of deposit the flow.\n @return owedDeposit The amount of owed deposit of the flow."
                  },
                  "functionSelector": "e6a1e888",
                  "id": 975,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 960,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3489:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 959,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 958,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "3489:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "3489:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 962,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3521:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 961,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3521:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3545:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3545:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3479:88:5"
                  },
                  "returnParameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3628:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 969,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3659:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "3659:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3687:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 975,
                        "src": "3716:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3614:131:5"
                  },
                  "scope": 1054,
                  "src": "3463:283:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 976,
                    "nodeType": "StructuredDocumentation",
                    "src": "3752:366:5",
                    "text": " @dev Get flow data using agreement ID\n @param token Super token address.\n @param agreementId The agreement ID.\n @return timestamp Timestamp of when the flow is updated.\n @return flowRate The flow rate.\n @return deposit The amount of deposit the flow.\n @return owedDeposit The amount of owed deposit of the flow."
                  },
                  "functionSelector": "aabd2668",
                  "id": 992,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlowByID",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 979,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4152:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 978,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 977,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "4152:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "4152:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 981,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4183:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4183:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4143:65:5"
                  },
                  "returnParameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4269:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4269:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4300:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4300:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4328:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4328:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "4357:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4357:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4255:131:5"
                  },
                  "scope": 1054,
                  "src": "4123:264:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 993,
                    "nodeType": "StructuredDocumentation",
                    "src": "4393:151:5",
                    "text": " @dev Get the aggregated flow info of the account\n @param token Super token address.\n @param account Account for the query."
                  },
                  "functionSelector": "0f1ac495",
                  "id": 1009,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccountFlowInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 996,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4586:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 995,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 994,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "4586:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "4586:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 998,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4618:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4618:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4576:63:5"
                  },
                  "returnParameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4700:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4700:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4731:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4731:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4759:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4759:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "4788:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4788:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4686:122:5"
                  },
                  "scope": 1054,
                  "src": "4549:260:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1010,
                    "nodeType": "StructuredDocumentation",
                    "src": "4815:181:5",
                    "text": " @dev Get the net flow rate of the account\n @param token Super token address.\n @param account Account for the query.\n @return flowRate Flow rate."
                  },
                  "functionSelector": "e8e7e2d1",
                  "id": 1020,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "5030:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 1012,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1011,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "5030:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "5030:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "5062:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5062:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5020:63:5"
                  },
                  "returnParameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1018,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "5131:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5131:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5130:16:5"
                  },
                  "scope": 1054,
                  "src": "5001:146:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "5153:635:5",
                    "text": " @dev Delete the flow between sender and receiver\n @param token Super token address.\n @param ctx Context bytes.\n @param receiver Flow receiver address.\n # App callbacks\n - AgreementTerminated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - Both flow sender and receiver may delete the flow.\n - If Sender account is insolvent or in critical state, a solvency agent may\n   also terminate the agreement.\n - Gas fee may be returned to the sender."
                  },
                  "functionSelector": "b4b333c6",
                  "id": 1035,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1024,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5822:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 1023,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1022,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "5822:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "5822:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5854:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5854:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5878:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5878:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5904:18:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5904:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5812:116:5"
                  },
                  "returnParameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "5970:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5970:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5969:21:5"
                  },
                  "scope": 1054,
                  "src": "5793:198:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1036,
                    "nodeType": "StructuredDocumentation",
                    "src": "5998:452:5",
                    "text": " @dev Flow updated event.\n @param token Super token address.\n @param sender Flow sender address.\n @param receiver Flow recipient address.\n @param flowRate Flow rate in amount per second for this flow.\n @param flowRate Total flow rate in amount per second for the sender.\n @param flowRate Total flow rate in amount per second for the receiver.\n @param userData The user provided data."
                  },
                  "id": 1053,
                  "name": "FlowUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1039,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6484:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 1038,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1037,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "6484:16:5"
                          },
                          "referencedDeclaration": 2785,
                          "src": "6484:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6525:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6525:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6558:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6558:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6593:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalSenderFlowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6618:26:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6618:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalReceiverFlowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6655:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6655:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1053,
                        "src": "6694:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6694:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6473:242:5"
                  },
                  "src": "6456:260:5"
                }
              ],
              "scope": 1055,
              "src": "292:6427:5"
            }
          ],
          "src": "35:6685:5"
        },
        "id": 5
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
          "exportedSymbols": {
            "BatchOperation": [
              1303
            ],
            "ContextDefinitions": [
              1269
            ],
            "SuperAppDefinitions": [
              1193
            ],
            "SuperfluidGovernanceConfigs": [
              1370
            ]
          },
          "id": 1371,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1056,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1057,
                "nodeType": "StructuredDocumentation",
                "src": "62:45:6",
                "text": " @dev Super app definitions library"
              },
              "fullyImplemented": true,
              "id": 1193,
              "linearizedBaseContracts": [
                1193
              ],
              "name": "SuperAppDefinitions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1060,
                  "mutability": "constant",
                  "name": "APP_LEVEL_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "565:47:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30784646",
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "608:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_255_by_1",
                      "typeString": "int_const 255"
                    },
                    "value": "0xFF"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1065,
                  "mutability": "constant",
                  "name": "APP_LEVEL_FINAL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "710:50:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "754:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "759:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "754:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1070,
                  "mutability": "constant",
                  "name": "APP_LEVEL_SECOND",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "865:51:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "910:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "915:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "910:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1084,
                    "nodeType": "Block",
                    "src": "994:58:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1079,
                                "name": "configWord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "1017:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "id": 1080,
                                "name": "APP_LEVEL_MASK",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1060,
                                "src": "1030:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1017:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1011:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1077,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1011:5:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 1076,
                        "id": 1083,
                        "nodeType": "Return",
                        "src": "1004:41:6"
                      }
                    ]
                  },
                  "id": 1085,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "944:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "944:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "943:20:6"
                  },
                  "returnParameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "987:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "987:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "986:7:6"
                  },
                  "scope": 1193,
                  "src": "923:129:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1090,
                  "mutability": "constant",
                  "name": "APP_JAIL_BIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1058:48:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_32768_by_1",
                      "typeString": "int_const 32768"
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1099:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "3135",
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1104:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "15"
                    },
                    "src": "1099:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32768_by_1",
                      "typeString": "int_const 32768"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "1182:75:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1097,
                                  "name": "configWord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1092,
                                  "src": "1200:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1098,
                                    "name": "SuperAppDefinitions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "1213:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$1193_$",
                                      "typeString": "type(library SuperAppDefinitions)"
                                    }
                                  },
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "APP_JAIL_BIT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1090,
                                  "src": "1213:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1200:45:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1101,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1199:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1249:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1199:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1096,
                        "id": 1104,
                        "nodeType": "Return",
                        "src": "1192:58:6"
                      }
                    ]
                  },
                  "id": 1106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAppJailed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1133:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1133:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1132:20:6"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1106,
                        "src": "1176:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1175:6:6"
                  },
                  "scope": 1193,
                  "src": "1112:145:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1111,
                  "mutability": "constant",
                  "name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1464:71:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1095216660480_by_1",
                      "typeString": "int_const 1095216660480"
                    },
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "30784646",
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1525:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "0xFF"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "3332",
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "1525:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1095216660480_by_1",
                      "typeString": "int_const 1095216660480"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1119,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_CREATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1541:71:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_4294967296_by_1",
                      "typeString": "int_const 4294967296"
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1605:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1610:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1605:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          }
                        }
                      ],
                      "id": 1117,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1604:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      }
                    },
                    "src": "1599:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967296_by_1",
                      "typeString": "int_const 4294967296"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1127,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_CREATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1618:70:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_8589934592_by_1",
                      "typeString": "int_const 8589934592"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1675:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_33_by_1",
                            "typeString": "int_const 33"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1681:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1686:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1681:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_33_by_1",
                            "typeString": "int_const 33"
                          }
                        }
                      ],
                      "id": 1125,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1680:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      }
                    },
                    "src": "1675:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8589934592_by_1",
                      "typeString": "int_const 8589934592"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1135,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_UPDATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1694:71:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_17179869184_by_1",
                      "typeString": "int_const 17179869184"
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1752:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_34_by_1",
                            "typeString": "int_const 34"
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1758:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1763:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1758:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_34_by_1",
                            "typeString": "int_const 34"
                          }
                        }
                      ],
                      "id": 1133,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1757:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_34_by_1",
                        "typeString": "int_const 34"
                      }
                    },
                    "src": "1752:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_17179869184_by_1",
                      "typeString": "int_const 17179869184"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1143,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_UPDATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1771:70:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_34359738368_by_1",
                      "typeString": "int_const 34359738368"
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1828:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_35_by_1",
                            "typeString": "int_const 35"
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1834:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1839:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1834:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35_by_1",
                            "typeString": "int_const 35"
                          }
                        }
                      ],
                      "id": 1141,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1833:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_35_by_1",
                        "typeString": "int_const 35"
                      }
                    },
                    "src": "1828:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_34359738368_by_1",
                      "typeString": "int_const 34359738368"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1151,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_TERMINATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1847:74:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_68719476736_by_1",
                      "typeString": "int_const 68719476736"
                    },
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1908:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1914:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1919:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1914:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          }
                        }
                      ],
                      "id": 1149,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1913:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_36_by_1",
                        "typeString": "int_const 36"
                      }
                    },
                    "src": "1908:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_68719476736_by_1",
                      "typeString": "int_const 68719476736"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1159,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_TERMINATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "1927:73:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_137438953472_by_1",
                      "typeString": "int_const 137438953472"
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1987:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_37_by_1",
                            "typeString": "int_const 37"
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1993:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1998:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "1993:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_37_by_1",
                            "typeString": "int_const 37"
                          }
                        }
                      ],
                      "id": 1157,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1992:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_37_by_1",
                        "typeString": "int_const 37"
                      }
                    },
                    "src": "1987:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_137438953472_by_1",
                      "typeString": "int_const 137438953472"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1162,
                  "mutability": "constant",
                  "name": "APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2192:71:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2262:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1165,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_REGISTRATION_FOR_EOA",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2269:62:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2330:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1168,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2337:73:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2408:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1171,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_CRITICAL_SENDER_ACCOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2416:66:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3131",
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2480:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_11_by_1",
                      "typeString": "int_const 11"
                    },
                    "value": "11"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1174,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2488:68:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3132",
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2554:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1177,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_READONLY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2562:55:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2615:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1180,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_NOT_CLEAN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2623:56:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3231",
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2677:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21_by_1",
                      "typeString": "int_const 21"
                    },
                    "value": "21"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1183,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_MALFORMATED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2685:58:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3232",
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2741:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_22_by_1",
                      "typeString": "int_const 22"
                    },
                    "value": "22"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1186,
                  "mutability": "constant",
                  "name": "APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2749:72:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3330",
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2819:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_30_by_1",
                      "typeString": "int_const 30"
                    },
                    "value": "30"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1189,
                  "mutability": "constant",
                  "name": "APP_RULE_COMPOSITE_APP_IS_JAILED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2827:63:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3331",
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2888:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_31_by_1",
                      "typeString": "int_const 31"
                    },
                    "value": "31"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1192,
                  "mutability": "constant",
                  "name": "APP_RULE_MAX_APP_LEVEL_REACHED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1193,
                  "src": "2896:61:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3430",
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2955:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_40_by_1",
                      "typeString": "int_const 40"
                    },
                    "value": "40"
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1371,
              "src": "108:2852:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1194,
                "nodeType": "StructuredDocumentation",
                "src": "2962:43:6",
                "text": " @dev Context definitions library"
              },
              "fullyImplemented": true,
              "id": 1269,
              "linearizedBaseContracts": [
                1269
              ],
              "name": "ContextDefinitions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1197,
                  "mutability": "constant",
                  "name": "CALL_INFO_APP_LEVEL_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3235:57:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30784646",
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3288:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_255_by_1",
                      "typeString": "int_const 255"
                    },
                    "value": "0xFF"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1200,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3316:56:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3332",
                    "id": 1199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3370:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1205,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3378:85:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "307846",
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3431:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "0xF"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 1203,
                      "name": "CALL_INFO_CALL_TYPE_SHIFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "3438:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3431:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1208,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_AGREEMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3469:57:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3525:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1211,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_APP_ACTION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3532:58:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1209,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3589:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1214,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_APP_CALLBACK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1269,
                  "src": "3596:60:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1212,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3655:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1244,
                    "nodeType": "Block",
                    "src": "3780:164:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1223,
                            "name": "appLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "3790:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1226,
                                  "name": "callInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1216,
                                  "src": "3807:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 1227,
                                  "name": "CALL_INFO_APP_LEVEL_MASK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1197,
                                  "src": "3818:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3807:35:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3801:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1224,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3801:5:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3801:42:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3790:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "3790:53:6"
                      },
                      {
                        "expression": {
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1232,
                            "name": "callType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "3853:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1237,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1235,
                                        "name": "callInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1216,
                                        "src": "3871:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&",
                                      "rightExpression": {
                                        "id": 1236,
                                        "name": "CALL_INFO_CALL_TYPE_MASK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1205,
                                        "src": "3882:24:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3871:35:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1238,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3870:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "id": 1239,
                                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "3911:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3870:66:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3864:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1233,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3864:5:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3864:73:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3853:84:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1243,
                        "nodeType": "ExpressionStatement",
                        "src": "3853:84:6"
                      }
                    ]
                  },
                  "id": 1245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decodeCallInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "callInfo",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "3687:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3686:18:6"
                  },
                  "returnParameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1219,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "3744:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1218,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3744:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "callType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "3760:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3743:32:6"
                  },
                  "scope": 1269,
                  "src": "3663:281:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1267,
                    "nodeType": "Block",
                    "src": "4067:92:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1256,
                                "name": "appLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1247,
                                "src": "4092:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4084:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1254,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4084:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4084:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "|",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1260,
                                      "name": "callType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1249,
                                      "src": "4113:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1259,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4105:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1258,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4105:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4105:17:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "id": 1262,
                                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1200,
                                  "src": "4126:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4105:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1264,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4104:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4084:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1253,
                        "id": 1266,
                        "nodeType": "Return",
                        "src": "4077:75:6"
                      }
                    ]
                  },
                  "id": 1268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encodeCallInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1247,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "3974:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1249,
                        "mutability": "mutable",
                        "name": "callType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "3990:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3990:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3973:32:6"
                  },
                  "returnParameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "callInfo",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "4045:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4045:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4044:18:6"
                  },
                  "scope": 1269,
                  "src": "3950:209:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1371,
              "src": "3006:1156:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1270,
                "nodeType": "StructuredDocumentation",
                "src": "4164:39:6",
                "text": " @dev Batch operation library"
              },
              "fullyImplemented": true,
              "id": 1303,
              "linearizedBaseContracts": [
                1303
              ],
              "name": "BatchOperation",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 1271,
                    "nodeType": "StructuredDocumentation",
                    "src": "4233:200:6",
                    "text": " @dev ERC20.approve batch operation type\n Call spec:\n ISuperToken(target).operationApprove(\n     abi.decode(data, (address spender, uint256 amount))\n )"
                  },
                  "id": 1274,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_ERC20_APPROVE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "4438:57:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4494:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1275,
                    "nodeType": "StructuredDocumentation",
                    "src": "4501:227:6",
                    "text": " @dev ERC20.transferFrom batch operation type\n Call spec:\n ISuperToken(target).operationTransferFrom(\n     abi.decode(data, (address sender, address recipient, uint256 amount)\n )"
                  },
                  "id": 1278,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_ERC20_TRANSFER_FROM",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "4733:63:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4795:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1279,
                    "nodeType": "StructuredDocumentation",
                    "src": "4802:187:6",
                    "text": " @dev SuperToken.upgrade batch operation type\n Call spec:\n ISuperToken(target).operationUpgrade(\n     abi.decode(data, (uint256 amount)\n )"
                  },
                  "id": 1284,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERTOKEN_UPGRADE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "4994:68:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5055:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5059:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "5055:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1285,
                    "nodeType": "StructuredDocumentation",
                    "src": "5068:191:6",
                    "text": " @dev SuperToken.downgrade batch operation type\n Call spec:\n ISuperToken(target).operationDowngrade(\n     abi.decode(data, (uint256 amount)\n )"
                  },
                  "id": 1290,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERTOKEN_DOWNGRADE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "5264:70:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_102_by_1",
                      "typeString": "int_const 102"
                    },
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5327:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5331:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "5327:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_102_by_1",
                      "typeString": "int_const 102"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1291,
                    "nodeType": "StructuredDocumentation",
                    "src": "5340:223:6",
                    "text": " @dev Superfluid.callAgreement batch operation type\n Call spec:\n callAgreement(\n     ISuperAgreement(target)),\n     abi.decode(data, (bytes calldata, bytes userdata)\n )"
                  },
                  "id": 1296,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "5568:75:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_201_by_1",
                      "typeString": "int_const 201"
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5636:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5640:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5636:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_201_by_1",
                      "typeString": "int_const 201"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1297,
                    "nodeType": "StructuredDocumentation",
                    "src": "5649:172:6",
                    "text": " @dev Superfluid.callAppAction batch operation type\n Call spec:\n callAppAction(\n     ISuperApp(target)),\n     data\n )"
                  },
                  "id": 1302,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "5826:76:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5826:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_202_by_1",
                      "typeString": "int_const 202"
                    },
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5895:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5899:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5895:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_202_by_1",
                      "typeString": "int_const 202"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1371,
              "src": "4204:1701:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1370,
              "linearizedBaseContracts": [
                1370
              ],
              "name": "SuperfluidGovernanceConfigs",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1308,
                  "mutability": "constant",
                  "name": "SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "5950:133:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e72657761726441646472657373",
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6033:49:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
                        },
                        "value": "org.superfluid-finance.superfluid.rewardAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
                        }
                      ],
                      "id": 1305,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6023:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1313,
                  "mutability": "constant",
                  "name": "CFAv1_LIQUIDATION_PERIOD_CONFIG_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "6090:161:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6090:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e76312e6c69717569646174696f6e506572696f64",
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6172:78:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ca463a216b802472396d1b8a5b5b695d935b1d24311e89b020144e6613f15aa",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\""
                        },
                        "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ca463a216b802472396d1b8a5b5b695d935b1d24311e89b020144e6613f15aa",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\""
                        }
                      ],
                      "id": 1310,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6162:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6162:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1318,
                  "mutability": "constant",
                  "name": "SUPERTOKEN_MINIMUM_DEPOSIT_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "6258:139:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6258:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e7375706572546f6b656e4d696e696d756d4465706f736974",
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6336:60:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
                        },
                        "value": "org.superfluid-finance.superfluid.superTokenMinimumDeposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
                        }
                      ],
                      "id": 1315,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6326:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1333,
                    "nodeType": "Block",
                    "src": "6493:135:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e74727573746564466f72776172646572",
                                  "id": 1328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6544:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.trustedForwarder"
                                },
                                {
                                  "id": 1329,
                                  "name": "forwarder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "6610:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1326,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6520:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6520:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6520:100:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1325,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6510:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6510:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1324,
                        "id": 1332,
                        "nodeType": "Return",
                        "src": "6503:118:6"
                      }
                    ]
                  },
                  "id": 1334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTrustedForwarderConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "forwarder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "6442:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6442:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6441:19:6"
                  },
                  "returnParameters": {
                    "id": 1324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "6484:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6484:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6483:9:6"
                  },
                  "scope": 1370,
                  "src": "6404:224:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1352,
                    "nodeType": "Block",
                    "src": "6752:178:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e726567697374726174696f6e4b6579",
                                  "id": 1346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6803:67:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.appWhiteListing.registrationKey"
                                },
                                {
                                  "id": 1347,
                                  "name": "deployer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "6884:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1348,
                                  "name": "registrationKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1338,
                                  "src": "6906:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1344,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6779:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6779:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6779:143:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1343,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6769:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6769:154:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1342,
                        "id": 1351,
                        "nodeType": "Return",
                        "src": "6762:161:6"
                      }
                    ]
                  },
                  "id": 1353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppRegistrationConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "6671:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6671:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "registrationKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "6689:29:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6689:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6670:49:6"
                  },
                  "returnParameters": {
                    "id": 1342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "6743:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6743:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6742:9:6"
                  },
                  "scope": 1370,
                  "src": "6634:296:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1368,
                    "nodeType": "Block",
                    "src": "7017:140:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e666163746f7279",
                                  "id": 1363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7068:59:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.appWhiteListing.factory"
                                },
                                {
                                  "id": 1364,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1355,
                                  "src": "7141:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1361,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7044:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "7044:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7044:105:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1360,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7034:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7034:116:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1359,
                        "id": 1367,
                        "nodeType": "Return",
                        "src": "7027:123:6"
                      }
                    ]
                  },
                  "id": 1369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppFactoryConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "6968:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6968:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6967:17:6"
                  },
                  "returnParameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "7008:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7008:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7007:9:6"
                  },
                  "scope": 1370,
                  "src": "6936:221:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1371,
              "src": "5907:1252:6"
            }
          ],
          "src": "35:7125:6"
        },
        "id": 6
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1403
            ],
            "ISuperfluidToken": [
              2785
            ]
          },
          "id": 1404,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1372,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:7"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1374,
              "nodeType": "ImportDirective",
              "scope": 1404,
              "sourceUnit": 2786,
              "src": "62:58:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1373,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:16:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1375,
                "nodeType": "StructuredDocumentation",
                "src": "122:76:7",
                "text": " @title Superfluid's agreement interface.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1403,
              "linearizedBaseContracts": [
                1403
              ],
              "name": "ISuperAgreement",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1376,
                    "nodeType": "StructuredDocumentation",
                    "src": "232:57:7",
                    "text": " @dev Initialize the agreement contract"
                  },
                  "functionSelector": "8129fc1c",
                  "id": 1379,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "313:2:7"
                  },
                  "returnParameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "324:0:7"
                  },
                  "scope": 1403,
                  "src": "294:31:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1380,
                    "nodeType": "StructuredDocumentation",
                    "src": "331:60:7",
                    "text": " @dev Get the type of the agreement class."
                  },
                  "functionSelector": "7730599e",
                  "id": 1385,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "agreementType",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "418:2:7"
                  },
                  "returnParameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1385,
                        "src": "444:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "443:9:7"
                  },
                  "scope": 1403,
                  "src": "396:57:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1386,
                    "nodeType": "StructuredDocumentation",
                    "src": "459:437:7",
                    "text": " @dev Calculate the real-time balance for the account of this agreement class.\n @param account Account the state belongs to\n @param time Future time used for the calculation.\n @return dynamicBalance Dynamic balance portion of real-time balance of this agreement.\n @return deposit Account deposit amount of this agreement.\n @return owedDeposit Account owed deposit amount of this agreement."
                  },
                  "functionSelector": "9b2e48bc",
                  "id": 1402,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "937:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 1388,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1387,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "937:16:7"
                          },
                          "referencedDeclaration": 2785,
                          "src": "937:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "969:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "994:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "927:85:7"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "dynamicBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "1073:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1398,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "1108:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1108:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "1137:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1137:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1059:107:7"
                  },
                  "scope": 1403,
                  "src": "901:266:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1404,
              "src": "199:971:7"
            }
          ],
          "src": "35:1136:7"
        },
        "id": 7
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
          "exportedSymbols": {
            "ISuperApp": [
              1517
            ],
            "ISuperToken": [
              1871
            ]
          },
          "id": 1518,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1405,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:8"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1407,
              "nodeType": "ImportDirective",
              "scope": 1518,
              "sourceUnit": 1872,
              "src": "62:48:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1406,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:8",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1408,
                "nodeType": "StructuredDocumentation",
                "src": "113:148:8",
                "text": " @title Superfluid's app interface.\n NOTE:\n - Be fearful of the app jail, when the word permitted is used.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1517,
              "linearizedBaseContracts": [
                1517
              ],
              "name": "ISuperApp",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1409,
                    "nodeType": "StructuredDocumentation",
                    "src": "289:622:8",
                    "text": " @dev Callback before a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "30d9c915",
                  "id": 1425,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementCreated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1412,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "957:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1411,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1410,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "957:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "957:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1414,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "989:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "1021:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1418,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "1050:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1417,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1050:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1420,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "1088:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1419,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "947:165:8"
                  },
                  "returnParameters": {
                    "id": 1424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1423,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1425,
                        "src": "1160:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1422,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1160:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1159:21:8"
                  },
                  "scope": 1517,
                  "src": "916:265:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1426,
                    "nodeType": "StructuredDocumentation",
                    "src": "1187:571:8",
                    "text": " @dev Callback after a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "d86ed3e5",
                  "id": 1444,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementCreated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1429,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1803:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1428,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1427,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "1803:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "1803:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1835:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1835:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1867:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1867:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1896:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1896:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1934:21:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1934:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "1965:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1793:196:8"
                  },
                  "returnParameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "2024:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2024:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2023:21:8"
                  },
                  "scope": 1517,
                  "src": "1763:282:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1445,
                    "nodeType": "StructuredDocumentation",
                    "src": "2051:622:8",
                    "text": " @dev Callback before a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "884d1f40",
                  "id": 1461,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementUpdated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2719:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1447,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1446,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "2719:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "2719:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1450,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2751:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1452,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2783:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1451,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2812:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1453,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2812:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2850:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1455,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2709:165:8"
                  },
                  "returnParameters": {
                    "id": 1460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1459,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2922:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1458,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2922:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2921:21:8"
                  },
                  "scope": 1517,
                  "src": "2678:265:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1462,
                    "nodeType": "StructuredDocumentation",
                    "src": "2950:558:8",
                    "text": " @dev Callback after a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "230dbd29",
                  "id": 1480,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementUpdated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3553:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1463,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "3553:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "3553:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3585:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3585:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3617:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3617:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1471,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3646:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3646:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3684:21:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3684:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3715:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3715:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3543:196:8"
                  },
                  "returnParameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1478,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1480,
                        "src": "3774:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1477,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3773:21:8"
                  },
                  "scope": 1517,
                  "src": "3513:282:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1481,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:595:8",
                    "text": " @dev Callback before a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Revert is not permitted."
                  },
                  "functionSelector": "5f9e7d77",
                  "id": 1497,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementTerminated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4445:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1483,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1482,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "4445:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "4445:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4477:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4477:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1488,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4509:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4509:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4538:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4538:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4576:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4576:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4435:165:8"
                  },
                  "returnParameters": {
                    "id": 1496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1497,
                        "src": "4648:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4647:21:8"
                  },
                  "scope": 1517,
                  "src": "4401:268:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1498,
                    "nodeType": "StructuredDocumentation",
                    "src": "4675:544:8",
                    "text": " @dev Callback after a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Revert is not permitted."
                  },
                  "functionSelector": "53c11f99",
                  "id": 1516,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementTerminated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1512,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1501,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5267:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1500,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1499,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "5267:11:8"
                          },
                          "referencedDeclaration": 1871,
                          "src": "5267:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1503,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5299:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5299:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1505,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5331:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1507,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5360:28:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5360:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5398:21:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1508,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5398:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5429:18:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5429:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5257:196:8"
                  },
                  "returnParameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "5488:19:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5488:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5487:21:8"
                  },
                  "scope": 1517,
                  "src": "5224:285:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1518,
              "src": "262:5249:8"
            }
          ],
          "src": "35:5477:8"
        },
        "id": 8
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
          "exportedSymbols": {
            "IERC20": [
              182
            ],
            "IERC777": [
              341
            ],
            "ISuperToken": [
              1871
            ],
            "ISuperfluid": [
              2414
            ],
            "ISuperfluidToken": [
              2785
            ],
            "TokenInfo": [
              2819
            ]
          },
          "id": 1872,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1519,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:9"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "./ISuperfluid.sol",
              "id": 1521,
              "nodeType": "ImportDirective",
              "scope": 1872,
              "sourceUnit": 2415,
              "src": "62:48:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1520,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1523,
              "nodeType": "ImportDirective",
              "scope": 1872,
              "sourceUnit": 2786,
              "src": "111:58:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1522,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "120:16:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "../tokens/TokenInfo.sol",
              "id": 1525,
              "nodeType": "ImportDirective",
              "scope": 1872,
              "sourceUnit": 2820,
              "src": "170:52:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1524,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "179:9:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "id": 1527,
              "nodeType": "ImportDirective",
              "scope": 1872,
              "sourceUnit": 342,
              "src": "223:75:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1526,
                    "name": "IERC777",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "232:7:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1529,
              "nodeType": "ImportDirective",
              "scope": 1872,
              "sourceUnit": 183,
              "src": "299:72:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1528,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "308:6:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1531,
                    "name": "ISuperfluidToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2785,
                    "src": "512:16:9"
                  },
                  "id": 1532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "512:16:9"
                },
                {
                  "baseName": {
                    "id": 1533,
                    "name": "TokenInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2819,
                    "src": "530:9:9"
                  },
                  "id": 1534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "530:9:9"
                },
                {
                  "baseName": {
                    "id": 1535,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 182,
                    "src": "541:6:9"
                  },
                  "id": 1536,
                  "nodeType": "InheritanceSpecifier",
                  "src": "541:6:9"
                },
                {
                  "baseName": {
                    "id": 1537,
                    "name": "IERC777",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 341,
                    "src": "549:7:9"
                  },
                  "id": 1538,
                  "nodeType": "InheritanceSpecifier",
                  "src": "549:7:9"
                }
              ],
              "contractDependencies": [
                182,
                341,
                2785,
                2819
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1530,
                "nodeType": "StructuredDocumentation",
                "src": "373:113:9",
                "text": " @title Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1871,
              "linearizedBaseContracts": [
                1871,
                341,
                182,
                2819,
                2785
              ],
              "name": "ISuperToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1539,
                    "nodeType": "StructuredDocumentation",
                    "src": "564:32:9",
                    "text": "@dev Initialize the contract"
                  },
                  "functionSelector": "42fe0980",
                  "id": 1551,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1542,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "630:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1541,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1540,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 182,
                            "src": "630:6:9"
                          },
                          "referencedDeclaration": 182,
                          "src": "630:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1544,
                        "mutability": "mutable",
                        "name": "underlyingDecimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "662:24:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1543,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "n",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "696:17:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "723:17:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "620:126:9"
                  },
                  "returnParameters": {
                    "id": 1550,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "755:0:9"
                  },
                  "scope": 1871,
                  "src": "601:155:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    191,
                    2806
                  ],
                  "documentation": {
                    "id": 1552,
                    "nodeType": "StructuredDocumentation",
                    "src": "947:54:9",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1556,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1554,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "1045:7:9"
                      },
                      {
                        "id": 1555,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2819,
                        "src": "1054:9:9"
                      }
                    ],
                    "src": "1036:28:9"
                  },
                  "parameters": {
                    "id": 1553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1019:2:9"
                  },
                  "returnParameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1558,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1560,
                        "src": "1074:13:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1557,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1073:15:9"
                  },
                  "scope": 1871,
                  "src": "1006:83:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    197,
                    2812
                  ],
                  "documentation": {
                    "id": 1561,
                    "nodeType": "StructuredDocumentation",
                    "src": "1095:102:9",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1569,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1565,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1563,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "1243:7:9"
                      },
                      {
                        "id": 1564,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2819,
                        "src": "1252:9:9"
                      }
                    ],
                    "src": "1234:28:9"
                  },
                  "parameters": {
                    "id": 1562,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1217:2:9"
                  },
                  "returnParameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1567,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1569,
                        "src": "1272:13:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1566,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1272:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1271:15:9"
                  },
                  "scope": 1871,
                  "src": "1202:85:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2818
                  ],
                  "documentation": {
                    "id": 1570,
                    "nodeType": "StructuredDocumentation",
                    "src": "1293:668:9",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: SuperToken always uses 18 decimals.\n Note: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1577,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1573,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1572,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2819,
                        "src": "2009:9:9"
                      }
                    ],
                    "src": "2000:19:9"
                  },
                  "parameters": {
                    "id": 1571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1983:2:9"
                  },
                  "returnParameters": {
                    "id": 1576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1575,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1577,
                        "src": "2029:5:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1574,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2029:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2028:7:9"
                  },
                  "scope": 1871,
                  "src": "1966:70:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    113,
                    209
                  ],
                  "documentation": {
                    "id": 1578,
                    "nodeType": "StructuredDocumentation",
                    "src": "2223:49:9",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1586,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1582,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1580,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "2323:7:9"
                      },
                      {
                        "id": 1581,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "2332:6:9"
                      }
                    ],
                    "src": "2314:25:9"
                  },
                  "parameters": {
                    "id": 1579,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:2:9"
                  },
                  "returnParameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1584,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1586,
                        "src": "2349:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2349:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2348:9:9"
                  },
                  "scope": 1871,
                  "src": "2277:81:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    121,
                    217
                  ],
                  "documentation": {
                    "id": 1587,
                    "nodeType": "StructuredDocumentation",
                    "src": "2364:83:9",
                    "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
                  },
                  "functionSelector": "70a08231",
                  "id": 1597,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1593,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1591,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "2511:7:9"
                      },
                      {
                        "id": 1592,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "2520:6:9"
                      }
                    ],
                    "src": "2502:25:9"
                  },
                  "parameters": {
                    "id": 1590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1589,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1597,
                        "src": "2471:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:17:9"
                  },
                  "returnParameters": {
                    "id": 1596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1595,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1597,
                        "src": "2536:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1594,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2536:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2535:17:9"
                  },
                  "scope": 1871,
                  "src": "2452:101:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    131
                  ],
                  "documentation": {
                    "id": 1598,
                    "nodeType": "StructuredDocumentation",
                    "src": "2731:209:9",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1609,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1605,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1604,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "3016:6:9"
                      }
                    ],
                    "src": "3007:16:9"
                  },
                  "parameters": {
                    "id": 1603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1600,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "2963:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2963:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1602,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "2982:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2962:35:9"
                  },
                  "returnParameters": {
                    "id": 1608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1607,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1609,
                        "src": "3033:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1606,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3032:6:9"
                  },
                  "scope": 1871,
                  "src": "2945:94:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    141
                  ],
                  "documentation": {
                    "id": 1610,
                    "nodeType": "StructuredDocumentation",
                    "src": "3045:264:9",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1621,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1617,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1616,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "3383:6:9"
                      }
                    ],
                    "src": "3374:16:9"
                  },
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1612,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "3333:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "3348:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3348:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:32:9"
                  },
                  "returnParameters": {
                    "id": 1620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "3405:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3405:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3404:9:9"
                  },
                  "scope": 1871,
                  "src": "3314:100:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    151
                  ],
                  "documentation": {
                    "id": 1622,
                    "nodeType": "StructuredDocumentation",
                    "src": "3420:642:9",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1633,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1629,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1628,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "4135:6:9"
                      }
                    ],
                    "src": "4126:16:9"
                  },
                  "parameters": {
                    "id": 1627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1624,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1633,
                        "src": "4084:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1626,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1633,
                        "src": "4101:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4083:33:9"
                  },
                  "returnParameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1633,
                        "src": "4152:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4152:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4151:6:9"
                  },
                  "scope": 1871,
                  "src": "4067:91:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    163
                  ],
                  "documentation": {
                    "id": 1634,
                    "nodeType": "StructuredDocumentation",
                    "src": "4164:296:9",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1647,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1643,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1642,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "4556:6:9"
                      }
                    ],
                    "src": "4547:16:9"
                  },
                  "parameters": {
                    "id": 1641,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1636,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "4487:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4487:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "4503:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4503:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "4522:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4486:51:9"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1645,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "4573:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1644,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4573:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4572:6:9"
                  },
                  "scope": 1871,
                  "src": "4465:114:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1648,
                    "nodeType": "StructuredDocumentation",
                    "src": "4585:384:9",
                    "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "39509351",
                  "id": 1657,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1653,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "5001:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5001:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1652,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "5018:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5018:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5000:37:9"
                  },
                  "returnParameters": {
                    "id": 1656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1655,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "5056:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5056:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5055:6:9"
                  },
                  "scope": 1871,
                  "src": "4974:88:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1658,
                    "nodeType": "StructuredDocumentation",
                    "src": "5068:476:9",
                    "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                  },
                  "functionSelector": "a457c2d7",
                  "id": 1667,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1667,
                        "src": "5577:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5577:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1662,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 1667,
                        "src": "5594:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5594:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5576:42:9"
                  },
                  "returnParameters": {
                    "id": 1666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1665,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1667,
                        "src": "5637:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5637:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5636:6:9"
                  },
                  "scope": 1871,
                  "src": "5550:93:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    203
                  ],
                  "documentation": {
                    "id": 1668,
                    "nodeType": "StructuredDocumentation",
                    "src": "5822:286:9",
                    "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For super token contracts, this value is 1 always"
                  },
                  "functionSelector": "556f0dc7",
                  "id": 1675,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "granularity",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1671,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1670,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "6159:7:9"
                      }
                    ],
                    "src": "6150:17:9"
                  },
                  "parameters": {
                    "id": 1669,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6133:2:9"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1675,
                        "src": "6177:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6177:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6176:9:9"
                  },
                  "scope": 1871,
                  "src": "6113:73:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    227
                  ],
                  "documentation": {
                    "id": 1676,
                    "nodeType": "StructuredDocumentation",
                    "src": "6192:585:9",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "9bd9bbc6",
                  "id": 1687,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1685,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1684,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "6870:7:9"
                      }
                    ],
                    "src": "6861:17:9"
                  },
                  "parameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "6796:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6796:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "6815:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6815:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1682,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1687,
                        "src": "6831:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1681,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6831:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6795:56:9"
                  },
                  "returnParameters": {
                    "id": 1686,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6878:0:9"
                  },
                  "scope": 1871,
                  "src": "6782:97:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    235
                  ],
                  "documentation": {
                    "id": 1688,
                    "nodeType": "StructuredDocumentation",
                    "src": "6885:404:9",
                    "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
                  },
                  "functionSelector": "fe9d9303",
                  "id": 1697,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1695,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1694,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "7363:7:9"
                      }
                    ],
                    "src": "7354:17:9"
                  },
                  "parameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "7308:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7308:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1697,
                        "src": "7324:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7324:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7307:37:9"
                  },
                  "returnParameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7371:0:9"
                  },
                  "scope": 1871,
                  "src": "7294:78:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    245
                  ],
                  "documentation": {
                    "id": 1698,
                    "nodeType": "StructuredDocumentation",
                    "src": "7378:249:9",
                    "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
                  },
                  "functionSelector": "d95b6371",
                  "id": 1709,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOperatorFor",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1705,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1704,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "7712:7:9"
                      }
                    ],
                    "src": "7703:17:9"
                  },
                  "parameters": {
                    "id": 1703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1700,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "7655:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1699,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7655:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1702,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "7673:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1701,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7673:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7654:39:9"
                  },
                  "returnParameters": {
                    "id": 1708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1707,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1709,
                        "src": "7735:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1706,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7735:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7734:6:9"
                  },
                  "scope": 1871,
                  "src": "7632:109:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    251
                  ],
                  "documentation": {
                    "id": 1710,
                    "nodeType": "StructuredDocumentation",
                    "src": "7747:233:9",
                    "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "959b8c3f",
                  "id": 1717,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeOperator",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1715,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1714,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "8048:7:9"
                      }
                    ],
                    "src": "8039:17:9"
                  },
                  "parameters": {
                    "id": 1713,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1712,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1717,
                        "src": "8012:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8012:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8011:18:9"
                  },
                  "returnParameters": {
                    "id": 1716,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8056:0:9"
                  },
                  "scope": 1871,
                  "src": "7985:72:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    257
                  ],
                  "documentation": {
                    "id": 1718,
                    "nodeType": "StructuredDocumentation",
                    "src": "8063:261:9",
                    "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "fad8b32a",
                  "id": 1725,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeOperator",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1723,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1722,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "8389:7:9"
                      }
                    ],
                    "src": "8380:17:9"
                  },
                  "parameters": {
                    "id": 1721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1725,
                        "src": "8353:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8353:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8352:18:9"
                  },
                  "returnParameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8397:0:9"
                  },
                  "scope": 1871,
                  "src": "8329:69:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    264
                  ],
                  "documentation": {
                    "id": 1726,
                    "nodeType": "StructuredDocumentation",
                    "src": "8404:338:9",
                    "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
                  },
                  "functionSelector": "06e48538",
                  "id": 1734,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultOperators",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1729,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1728,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "8793:7:9"
                      }
                    ],
                    "src": "8784:17:9"
                  },
                  "parameters": {
                    "id": 1727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8772:2:9"
                  },
                  "returnParameters": {
                    "id": 1733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1732,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1734,
                        "src": "8816:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8816:7:9",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1731,
                          "nodeType": "ArrayTypeName",
                          "src": "8816:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8815:18:9"
                  },
                  "scope": 1871,
                  "src": "8747:87:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    278
                  ],
                  "documentation": {
                    "id": 1735,
                    "nodeType": "StructuredDocumentation",
                    "src": "8840:714:9",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "62ad1b83",
                  "id": 1750,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorSend",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1748,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1747,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "9746:7:9"
                      }
                    ],
                    "src": "9737:17:9"
                  },
                  "parameters": {
                    "id": 1746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1737,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9590:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9590:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9614:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9614:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9641:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9641:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1743,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9665:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1742,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9665:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1745,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1750,
                        "src": "9694:27:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1744,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9694:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9580:147:9"
                  },
                  "returnParameters": {
                    "id": 1749,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9754:0:9"
                  },
                  "scope": 1871,
                  "src": "9559:196:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    290
                  ],
                  "documentation": {
                    "id": 1751,
                    "nodeType": "StructuredDocumentation",
                    "src": "9761:532:9",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
                  },
                  "functionSelector": "fc673c4f",
                  "id": 1764,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorBurn",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1762,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1761,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 341,
                        "src": "10459:7:9"
                      }
                    ],
                    "src": "10450:17:9"
                  },
                  "parameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1753,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1764,
                        "src": "10329:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10329:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1755,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1764,
                        "src": "10354:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1754,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10354:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1764,
                        "src": "10378:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10378:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1764,
                        "src": "10407:27:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10407:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10319:121:9"
                  },
                  "returnParameters": {
                    "id": 1763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10467:0:9"
                  },
                  "scope": 1871,
                  "src": "10298:170:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1765,
                    "nodeType": "StructuredDocumentation",
                    "src": "10676:99:9",
                    "text": " @dev Mint new tokens for the account\n Modifiers:\n  - onlySelf"
                  },
                  "functionSelector": "c68d4283",
                  "id": 1774,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfMint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1767,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1774,
                        "src": "10807:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10807:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1769,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1774,
                        "src": "10832:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10832:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1771,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1774,
                        "src": "10856:21:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1770,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10856:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10797:86:9"
                  },
                  "returnParameters": {
                    "id": 1773,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10892:0:9"
                  },
                  "scope": 1871,
                  "src": "10780:113:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1775,
                    "nodeType": "StructuredDocumentation",
                    "src": "10898:99:9",
                    "text": " @dev Burn existing tokens for the account\n Modifiers:\n  - onlySelf"
                  },
                  "functionSelector": "9d876741",
                  "id": 1784,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1777,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "11027:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1776,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11027:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1779,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "11051:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11051:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1784,
                        "src": "11074:21:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1780,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "11074:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11018:82:9"
                  },
                  "returnParameters": {
                    "id": 1783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11109:0:9"
                  },
                  "scope": 1871,
                  "src": "11001:109:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1785,
                    "nodeType": "StructuredDocumentation",
                    "src": "11311:87:9",
                    "text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
                  },
                  "functionSelector": "a3a7e7f3",
                  "id": 1790,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1790,
                        "src": "11424:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11424:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11423:19:9"
                  },
                  "returnParameters": {
                    "id": 1789,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11451:0:9"
                  },
                  "scope": 1871,
                  "src": "11403:49:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1791,
                    "nodeType": "StructuredDocumentation",
                    "src": "11641:110:9",
                    "text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
                  },
                  "functionSelector": "ee719bc8",
                  "id": 1796,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnderlyingToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11783:2:9"
                  },
                  "returnParameters": {
                    "id": 1795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1794,
                        "mutability": "mutable",
                        "name": "tokenAddr",
                        "nodeType": "VariableDeclaration",
                        "scope": 1796,
                        "src": "11808:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1793,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11808:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11807:19:9"
                  },
                  "scope": 1871,
                  "src": "11756:71:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1797,
                    "nodeType": "StructuredDocumentation",
                    "src": "11833:259:9",
                    "text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n function you should ´approve´ this contract"
                  },
                  "functionSelector": "45977d03",
                  "id": 1802,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1800,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1799,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1802,
                        "src": "12114:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12114:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12113:16:9"
                  },
                  "returnParameters": {
                    "id": 1801,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12138:0:9"
                  },
                  "scope": 1871,
                  "src": "12097:42:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1803,
                    "nodeType": "StructuredDocumentation",
                    "src": "12145:402:9",
                    "text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to received upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param data User data for the TokensRecipient callback\n NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n function you should ´approve´ this contract"
                  },
                  "functionSelector": "5b9d09cc",
                  "id": 1812,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeTo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1805,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1812,
                        "src": "12571:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12571:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1807,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1812,
                        "src": "12583:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12583:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1809,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1812,
                        "src": "12599:19:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1808,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12599:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12570:49:9"
                  },
                  "returnParameters": {
                    "id": 1811,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12628:0:9"
                  },
                  "scope": 1871,
                  "src": "12552:77:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1813,
                    "nodeType": "StructuredDocumentation",
                    "src": "12635:166:9",
                    "text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
                  },
                  "id": 1819,
                  "name": "TokenUpgraded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1815,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1819,
                        "src": "12835:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12835:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1817,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1819,
                        "src": "12868:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12868:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12825:63:9"
                  },
                  "src": "12806:83:9"
                },
                {
                  "documentation": {
                    "id": 1820,
                    "nodeType": "StructuredDocumentation",
                    "src": "12895:158:9",
                    "text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
                  },
                  "functionSelector": "11bcc81e",
                  "id": 1825,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "downgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1822,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1825,
                        "src": "13077:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13077:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13076:16:9"
                  },
                  "returnParameters": {
                    "id": 1824,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13101:0:9"
                  },
                  "scope": 1871,
                  "src": "13058:44:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1826,
                    "nodeType": "StructuredDocumentation",
                    "src": "13108:150:9",
                    "text": " @dev Token downgrade event\n @param account Account whose tokens are upgraded\n @param amount Amount of tokens downgraded"
                  },
                  "id": 1832,
                  "name": "TokenDowngraded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1828,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1832,
                        "src": "13294:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13294:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1830,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1832,
                        "src": "13327:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13327:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13284:63:9"
                  },
                  "src": "13263:85:9"
                },
                {
                  "documentation": {
                    "id": 1833,
                    "nodeType": "StructuredDocumentation",
                    "src": "13537:269:9",
                    "text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "62aa5287",
                  "id": 1842,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1835,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "13846:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1834,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13846:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1837,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "13871:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13871:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1839,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "13896:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13896:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13836:80:9"
                  },
                  "returnParameters": {
                    "id": 1841,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13925:0:9"
                  },
                  "scope": 1871,
                  "src": "13811:115:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1843,
                    "nodeType": "StructuredDocumentation",
                    "src": "13932:336:9",
                    "text": " @dev Perform ERC20 transfer from by host contract.\n @param account The account to spend sender's funds.\n @param spender  The account where the funds is sent from.\n @param recipient The recipient of thefunds.\n @param amount Number of tokens to be transferred.\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "16d055d6",
                  "id": 1854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1852,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1854,
                        "src": "14313:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14313:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1847,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1854,
                        "src": "14338:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14338:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1849,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1854,
                        "src": "14363:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14363:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1851,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1854,
                        "src": "14390:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1850,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14390:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14303:107:9"
                  },
                  "returnParameters": {
                    "id": 1853,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14419:0:9"
                  },
                  "scope": 1871,
                  "src": "14273:147:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1855,
                    "nodeType": "StructuredDocumentation",
                    "src": "14426:225:9",
                    "text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "ca789464",
                  "id": 1862,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationUpgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1857,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1862,
                        "src": "14682:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14682:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1859,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1862,
                        "src": "14699:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14699:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14681:33:9"
                  },
                  "returnParameters": {
                    "id": 1861,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14723:0:9"
                  },
                  "scope": 1871,
                  "src": "14656:68:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1863,
                    "nodeType": "StructuredDocumentation",
                    "src": "14730:229:9",
                    "text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "245887fc",
                  "id": 1870,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationDowngrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1868,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1865,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "14992:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14992:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "15009:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15009:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14991:33:9"
                  },
                  "returnParameters": {
                    "id": 1869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15033:0:9"
                  },
                  "scope": 1871,
                  "src": "14964:70:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1872,
              "src": "487:15077:9"
            }
          ],
          "src": "35:15530:9"
        },
        "id": 9
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
          "exportedSymbols": {
            "ERC20WithTokenInfo": [
              2797
            ],
            "IERC20": [
              182
            ],
            "ISuperToken": [
              1871
            ],
            "ISuperTokenFactory": [
              1956
            ]
          },
          "id": 1957,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1873,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:10"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1875,
              "nodeType": "ImportDirective",
              "scope": 1957,
              "sourceUnit": 1872,
              "src": "62:48:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1874,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
              "file": "../tokens/ERC20WithTokenInfo.sol",
              "id": 1878,
              "nodeType": "ImportDirective",
              "scope": 1957,
              "sourceUnit": 2798,
              "src": "112:86:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1876,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "125:6:10",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1877,
                    "name": "ERC20WithTokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "137:18:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1956,
              "linearizedBaseContracts": [
                1956
              ],
              "name": "ISuperTokenFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1879,
                    "nodeType": "StructuredDocumentation",
                    "src": "237:60:10",
                    "text": " @dev Get superfluid host contract address"
                  },
                  "functionSelector": "20bc4425",
                  "id": 1884,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHost",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1880,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "318:2:10"
                  },
                  "returnParameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1882,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 1884,
                        "src": "343:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "343:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "342:14:10"
                  },
                  "scope": 1956,
                  "src": "302:55:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1885,
                    "nodeType": "StructuredDocumentation",
                    "src": "363:32:10",
                    "text": "@dev Initialize the contract"
                  },
                  "functionSelector": "8129fc1c",
                  "id": 1888,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "419:2:10"
                  },
                  "returnParameters": {
                    "id": 1887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "430:0:10"
                  },
                  "scope": 1956,
                  "src": "400:31:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1889,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:77:10",
                    "text": " @dev Get the current super token logic used by the factory"
                  },
                  "functionSelector": "9470a5b2",
                  "id": 1895,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "546:2:10"
                  },
                  "returnParameters": {
                    "id": 1894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1893,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "572:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1892,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1891,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "572:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "572:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "571:24:10"
                  },
                  "scope": 1956,
                  "src": "519:77:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperTokenFactory.Upgradability",
                  "id": 1899,
                  "members": [
                    {
                      "id": 1896,
                      "name": "NON_UPGRADABLE",
                      "nodeType": "EnumValue",
                      "src": "760:14:10"
                    },
                    {
                      "id": 1897,
                      "name": "SEMI_UPGRADABLE",
                      "nodeType": "EnumValue",
                      "src": "854:15:10"
                    },
                    {
                      "id": 1898,
                      "name": "FULL_UPGRADABE",
                      "nodeType": "EnumValue",
                      "src": "933:14:10"
                    }
                  ],
                  "name": "Upgradability",
                  "nodeType": "EnumDefinition",
                  "src": "650:303:10"
                },
                {
                  "documentation": {
                    "id": 1900,
                    "nodeType": "StructuredDocumentation",
                    "src": "959:320:10",
                    "text": " @dev Create new super token wrapper for the underlying ERC20 token\n @param underlyingToken Underlying ERC20 token\n @param underlyingDecimals Underlying token decimals\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol"
                  },
                  "functionSelector": "a6d0c534",
                  "id": 1918,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createERC20Wrapper",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1903,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1321:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1902,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1901,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 182,
                            "src": "1321:6:10"
                          },
                          "referencedDeclaration": 182,
                          "src": "1321:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1905,
                        "mutability": "mutable",
                        "name": "underlyingDecimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1353:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1904,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1353:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1908,
                        "mutability": "mutable",
                        "name": "upgradability",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1387:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$1899",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        "typeName": {
                          "id": 1907,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1906,
                            "name": "Upgradability",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1899,
                            "src": "1387:13:10"
                          },
                          "referencedDeclaration": 1899,
                          "src": "1387:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Upgradability_$1899",
                            "typeString": "enum ISuperTokenFactory.Upgradability"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1910,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1424:20:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1424:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1912,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1454:22:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1911,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1311:171:10"
                  },
                  "returnParameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1916,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "1517:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1915,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1914,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "1517:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "1517:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1516:24:10"
                  },
                  "scope": 1956,
                  "src": "1284:257:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1919,
                    "nodeType": "StructuredDocumentation",
                    "src": "1547:362:10",
                    "text": " @dev Create new super token wrapper for the underlying ERC20 token with extra token info\n @param underlyingToken Underlying ERC20 token\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n NOTE:\n - It assumes token provide the .decimals() function"
                  },
                  "functionSelector": "431f1481",
                  "id": 1935,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createERC20Wrapper",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1922,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1935,
                        "src": "1951:34:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2797",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        "typeName": {
                          "id": 1921,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1920,
                            "name": "ERC20WithTokenInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2797,
                            "src": "1951:18:10"
                          },
                          "referencedDeclaration": 2797,
                          "src": "1951:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2797",
                            "typeString": "contract ERC20WithTokenInfo"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1925,
                        "mutability": "mutable",
                        "name": "upgradability",
                        "nodeType": "VariableDeclaration",
                        "scope": 1935,
                        "src": "1995:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$1899",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        "typeName": {
                          "id": 1924,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1923,
                            "name": "Upgradability",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1899,
                            "src": "1995:13:10"
                          },
                          "referencedDeclaration": 1899,
                          "src": "1995:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Upgradability_$1899",
                            "typeString": "enum ISuperTokenFactory.Upgradability"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1927,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 1935,
                        "src": "2032:20:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1926,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1929,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 1935,
                        "src": "2062:22:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1928,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2062:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1941:149:10"
                  },
                  "returnParameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1933,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1935,
                        "src": "2125:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1932,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1931,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "2125:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "2125:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2124:24:10"
                  },
                  "scope": 1956,
                  "src": "1914:235:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d412d344",
                  "id": 1940,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initializeCustomSuperToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1937,
                        "mutability": "mutable",
                        "name": "customSuperTokenProxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1940,
                        "src": "2200:29:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2190:45:10"
                  },
                  "returnParameters": {
                    "id": 1939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2252:0:10"
                  },
                  "scope": 1956,
                  "src": "2155:98:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1945,
                  "name": "SuperTokenLogicCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1943,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1945,
                        "src": "2288:30:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1942,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1941,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "2288:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "2288:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2287:32:10"
                  },
                  "src": "2259:61:10"
                },
                {
                  "anonymous": false,
                  "id": 1950,
                  "name": "SuperTokenCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1948,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "2350:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1947,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1946,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "2350:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "2350:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2349:27:10"
                  },
                  "src": "2326:51:10"
                },
                {
                  "anonymous": false,
                  "id": 1955,
                  "name": "CustomSuperTokenCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1954,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1953,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1955,
                        "src": "2413:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1952,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1951,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "2413:11:10"
                          },
                          "referencedDeclaration": 1871,
                          "src": "2413:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2412:27:10"
                  },
                  "src": "2383:57:10"
                }
              ],
              "scope": 1957,
              "src": "201:2242:10"
            }
          ],
          "src": "35:2409:10"
        },
        "id": 10
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
          "exportedSymbols": {
            "BatchOperation": [
              1303
            ],
            "ContextDefinitions": [
              1269
            ],
            "IERC20": [
              182
            ],
            "IERC777": [
              341
            ],
            "ISuperAgreement": [
              1403
            ],
            "ISuperApp": [
              1517
            ],
            "ISuperToken": [
              1871
            ],
            "ISuperTokenFactory": [
              1956
            ],
            "ISuperfluid": [
              2414
            ],
            "ISuperfluidGovernance": [
              2497
            ],
            "ISuperfluidToken": [
              2785
            ],
            "SuperAppDefinitions": [
              1193
            ],
            "SuperfluidGovernanceConfigs": [
              1370
            ],
            "TokenInfo": [
              2819
            ]
          },
          "id": 2415,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1958,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:11"
            },
            {
              "id": 1959,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:33:11"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
              "file": "./ISuperfluidGovernance.sol",
              "id": 1961,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 2498,
              "src": "147:68:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1960,
                    "name": "ISuperfluidGovernance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "156:21:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1963,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 2786,
              "src": "216:58:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1962,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "225:16:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1965,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 1872,
              "src": "275:48:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1964,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "284:11:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
              "file": "./ISuperTokenFactory.sol",
              "id": 1967,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 1957,
              "src": "324:62:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1966,
                    "name": "ISuperTokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "333:18:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 1969,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 1404,
              "src": "387:56:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1968,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "396:15:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
              "file": "./ISuperApp.sol",
              "id": 1971,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 1518,
              "src": "444:44:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1970,
                    "name": "ISuperApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "453:9:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
              "file": "./Definitions.sol",
              "id": 1976,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 1371,
              "src": "489:137:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1972,
                    "name": "SuperAppDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "502:19:11",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1973,
                    "name": "ContextDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "527:18:11",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1974,
                    "name": "BatchOperation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "551:14:11",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1975,
                    "name": "SuperfluidGovernanceConfigs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "571:27:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "../tokens/TokenInfo.sol",
              "id": 1978,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 2820,
              "src": "627:52:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1977,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "636:9:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1980,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 183,
              "src": "680:72:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1979,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "689:6:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "id": 1982,
              "nodeType": "ImportDirective",
              "scope": 2415,
              "sourceUnit": 342,
              "src": "753:75:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1981,
                    "name": "IERC777",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "762:7:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1983,
                "nodeType": "StructuredDocumentation",
                "src": "831:355:11",
                "text": " @dev Superfluid host interface.\n It is the central contract of the system where super agreement, super app\n and super token features are connected together.\n The superfluid host contract is also the entry point for the protocol users,\n where batch call and meta transaction are provided for UX improvements.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2414,
              "linearizedBaseContracts": [
                2414
              ],
              "name": "ISuperfluid",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1984,
                    "nodeType": "StructuredDocumentation",
                    "src": "1395:72:11",
                    "text": " @dev Get the current governace of the Superfluid host"
                  },
                  "functionSelector": "289b3c0d",
                  "id": 1990,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1494:2:11"
                  },
                  "returnParameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1988,
                        "mutability": "mutable",
                        "name": "governance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1990,
                        "src": "1519:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1987,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1986,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2497,
                            "src": "1519:21:11"
                          },
                          "referencedDeclaration": 2497,
                          "src": "1519:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1518:34:11"
                  },
                  "scope": 2414,
                  "src": "1472:81:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1998,
                  "name": "GovernanceReplaced",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1993,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 1998,
                        "src": "1584:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1992,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1991,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2497,
                            "src": "1584:21:11"
                          },
                          "referencedDeclaration": 2497,
                          "src": "1584:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1996,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 1998,
                        "src": "1614:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1995,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1994,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2497,
                            "src": "1614:21:11"
                          },
                          "referencedDeclaration": 2497,
                          "src": "1614:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1583:60:11"
                  },
                  "src": "1559:85:11"
                },
                {
                  "documentation": {
                    "id": 1999,
                    "nodeType": "StructuredDocumentation",
                    "src": "1649:69:11",
                    "text": " @dev Replace the current governance with a new one"
                  },
                  "functionSelector": "7283100c",
                  "id": 2005,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "replaceGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2002,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "1750:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 2001,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2000,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2497,
                            "src": "1750:21:11"
                          },
                          "referencedDeclaration": 2497,
                          "src": "1750:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2497",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1749:30:11"
                  },
                  "returnParameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:0:11"
                  },
                  "scope": 2414,
                  "src": "1723:66:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 2011,
                  "name": "AgreementClassRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2007,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2011,
                        "src": "2017:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2006,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2009,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 2011,
                        "src": "2040:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2040:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2016:37:11"
                  },
                  "src": "1986:68:11"
                },
                {
                  "documentation": {
                    "id": 2012,
                    "nodeType": "StructuredDocumentation",
                    "src": "2059:181:11",
                    "text": " @dev Register a new agreement class to the system\n @param agreementClassLogic INitial agreement class code\n Modifiers:\n  - onlyGovernance"
                  },
                  "functionSelector": "15a024e1",
                  "id": 2018,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2015,
                        "mutability": "mutable",
                        "name": "agreementClassLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2018,
                        "src": "2277:35:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2014,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2013,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "2277:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "2277:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2276:37:11"
                  },
                  "returnParameters": {
                    "id": 2017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2322:0:11"
                  },
                  "scope": 2414,
                  "src": "2245:78:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 2024,
                  "name": "AgreementClassUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2020,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2024,
                        "src": "2357:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2019,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2022,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 2024,
                        "src": "2380:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2021,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2380:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2356:37:11"
                  },
                  "src": "2329:65:11"
                },
                {
                  "documentation": {
                    "id": 2025,
                    "nodeType": "StructuredDocumentation",
                    "src": "2399:168:11",
                    "text": " @dev Update code of an agreement class\n @param agreementClassLogic New code for the agreement class\n Modifiers:\n  - onlyGovernance"
                  },
                  "functionSelector": "06cecba8",
                  "id": 2031,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2028,
                        "mutability": "mutable",
                        "name": "agreementClassLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2031,
                        "src": "2602:35:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2027,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2026,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "2602:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "2602:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2601:37:11"
                  },
                  "returnParameters": {
                    "id": 2030,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2647:0:11"
                  },
                  "scope": 2414,
                  "src": "2572:76:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2032,
                    "nodeType": "StructuredDocumentation",
                    "src": "2654:65:11",
                    "text": " @dev Check if the agreement class is whitelisted"
                  },
                  "functionSelector": "e8dccb7d",
                  "id": 2039,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAgreementTypeListed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2035,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2034,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "2755:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2033,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2755:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2754:23:11"
                  },
                  "returnParameters": {
                    "id": 2038,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2037,
                        "mutability": "mutable",
                        "name": "yes",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "2800:8:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2036,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2799:10:11"
                  },
                  "scope": 2414,
                  "src": "2724:86:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2040,
                    "nodeType": "StructuredDocumentation",
                    "src": "2816:65:11",
                    "text": " @dev Check if the agreement class is whitelisted"
                  },
                  "functionSelector": "8ca48484",
                  "id": 2048,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAgreementClassListed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2043,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2048,
                        "src": "2918:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2042,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2041,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "2918:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "2918:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2917:32:11"
                  },
                  "returnParameters": {
                    "id": 2047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2046,
                        "mutability": "mutable",
                        "name": "yes",
                        "nodeType": "VariableDeclaration",
                        "scope": 2048,
                        "src": "2972:8:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2972:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2971:10:11"
                  },
                  "scope": 2414,
                  "src": "2886:96:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2049,
                    "nodeType": "StructuredDocumentation",
                    "src": "2988:41:11",
                    "text": " @dev Get agreement class"
                  },
                  "functionSelector": "b6d200de",
                  "id": 2057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2051,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2057,
                        "src": "3061:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2050,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3061:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3060:23:11"
                  },
                  "returnParameters": {
                    "id": 2056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2055,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2057,
                        "src": "3106:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2054,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2053,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "3106:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "3106:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3105:32:11"
                  },
                  "scope": 2414,
                  "src": "3034:104:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2058,
                    "nodeType": "StructuredDocumentation",
                    "src": "3144:113:11",
                    "text": " @dev Map list of the agreement classes using a bitmap\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "c56a069d",
                  "id": 2067,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mapAgreementClasses",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2060,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "3291:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3291:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3290:16:11"
                  },
                  "returnParameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "agreementClasses",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "3346:41:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1403_$dyn_memory_ptr",
                          "typeString": "contract ISuperAgreement[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2063,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2062,
                              "name": "ISuperAgreement",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1403,
                              "src": "3346:15:11"
                            },
                            "referencedDeclaration": 1403,
                            "src": "3346:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                              "typeString": "contract ISuperAgreement"
                            }
                          },
                          "id": 2064,
                          "nodeType": "ArrayTypeName",
                          "src": "3346:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1403_$dyn_storage_ptr",
                            "typeString": "contract ISuperAgreement[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3345:43:11"
                  },
                  "scope": 2414,
                  "src": "3262:127:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2068,
                    "nodeType": "StructuredDocumentation",
                    "src": "3395:120:11",
                    "text": " @dev Create a new bitmask by adding a agreement class to it.\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "bced3ddc",
                  "id": 2077,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addToAgreementClassesBitmap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2070,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "3557:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3557:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2072,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "3573:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2071,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3573:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3556:39:11"
                  },
                  "returnParameters": {
                    "id": 2076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2075,
                        "mutability": "mutable",
                        "name": "newBitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 2077,
                        "src": "3635:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3635:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3634:19:11"
                  },
                  "scope": 2414,
                  "src": "3520:134:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2078,
                    "nodeType": "StructuredDocumentation",
                    "src": "3660:124:11",
                    "text": " @dev Create a new bitmask by removing a agreement class from it.\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "a5dbbbcd",
                  "id": 2087,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeFromAgreementClassesBitmap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2080,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 2087,
                        "src": "3831:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3831:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2082,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 2087,
                        "src": "3847:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2081,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3847:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3830:39:11"
                  },
                  "returnParameters": {
                    "id": 2086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "newBitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 2087,
                        "src": "3909:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3909:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3908:19:11"
                  },
                  "scope": 2414,
                  "src": "3789:139:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2088,
                    "nodeType": "StructuredDocumentation",
                    "src": "4121:86:11",
                    "text": " @dev Get the super token factory\n @return factory The factory"
                  },
                  "functionSelector": "731aed6e",
                  "id": 2094,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2089,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4241:2:11"
                  },
                  "returnParameters": {
                    "id": 2093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2092,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2094,
                        "src": "4267:26:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 2091,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2090,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1956,
                            "src": "4267:18:11"
                          },
                          "referencedDeclaration": 1956,
                          "src": "4267:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4266:28:11"
                  },
                  "scope": 2414,
                  "src": "4212:83:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2095,
                    "nodeType": "StructuredDocumentation",
                    "src": "4301:134:11",
                    "text": " @dev Get the super token factory logic (applicable to upgradable deployment)\n @return logic The factory logic"
                  },
                  "functionSelector": "f2e55caf",
                  "id": 2100,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenFactoryLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4474:2:11"
                  },
                  "returnParameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "logic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "4500:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4500:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4499:15:11"
                  },
                  "scope": 2414,
                  "src": "4440:75:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 2105,
                  "name": "SuperTokenFactoryUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2103,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2105,
                        "src": "4552:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 2102,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2101,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1956,
                            "src": "4552:18:11"
                          },
                          "referencedDeclaration": 1956,
                          "src": "4552:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4551:31:11"
                  },
                  "src": "4521:62:11"
                },
                {
                  "documentation": {
                    "id": 2106,
                    "nodeType": "StructuredDocumentation",
                    "src": "4588:93:11",
                    "text": " @dev Update super token factory\n @param newFactory New factory logic"
                  },
                  "functionSelector": "54fbc493",
                  "id": 2112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateSuperTokenFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2109,
                        "mutability": "mutable",
                        "name": "newFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 2112,
                        "src": "4719:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 2108,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2107,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1956,
                            "src": "4719:18:11"
                          },
                          "referencedDeclaration": 1956,
                          "src": "4719:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1956",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4718:31:11"
                  },
                  "returnParameters": {
                    "id": 2111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4758:0:11"
                  },
                  "scope": 2414,
                  "src": "4686:73:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 2119,
                  "name": "SuperTokenLogicUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2115,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4794:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 2114,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2113,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "4794:11:11"
                          },
                          "referencedDeclaration": 1871,
                          "src": "4794:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2117,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 2119,
                        "src": "4821:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4821:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4793:41:11"
                  },
                  "src": "4765:70:11"
                },
                {
                  "documentation": {
                    "id": 2120,
                    "nodeType": "StructuredDocumentation",
                    "src": "4840:161:11",
                    "text": " @dev Update the super token logic to the latest\n NOTE:\n - Refer toISuperTokenFactory.Upgradability for expected behaviours."
                  },
                  "functionSelector": "787afde7",
                  "id": 2126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2123,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2126,
                        "src": "5037:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1871",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 2122,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2121,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1871,
                            "src": "5037:11:11"
                          },
                          "referencedDeclaration": 1871,
                          "src": "5037:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5036:19:11"
                  },
                  "returnParameters": {
                    "id": 2125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5064:0:11"
                  },
                  "scope": 2414,
                  "src": "5006:59:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2127,
                    "nodeType": "StructuredDocumentation",
                    "src": "5252:44:11",
                    "text": " @dev App registered event"
                  },
                  "id": 2132,
                  "name": "AppRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2130,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "5321:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2129,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2128,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "5321:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "5321:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5320:23:11"
                  },
                  "src": "5301:43:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2133,
                    "nodeType": "StructuredDocumentation",
                    "src": "5350:46:11",
                    "text": " @dev Jail event for the app"
                  },
                  "id": 2140,
                  "name": "Jail",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2136,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "5412:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2135,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2134,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "5412:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "5412:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2138,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reason",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "5435:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5435:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5411:39:11"
                  },
                  "src": "5401:50:11"
                },
                {
                  "documentation": {
                    "id": 2141,
                    "nodeType": "StructuredDocumentation",
                    "src": "5457:196:11",
                    "text": " @dev Message sender declares it as a super app\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`"
                  },
                  "functionSelector": "ad3915c8",
                  "id": 2146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2143,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2146,
                        "src": "5679:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5679:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5678:20:11"
                  },
                  "returnParameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5707:0:11"
                  },
                  "scope": 2414,
                  "src": "5658:50:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2147,
                    "nodeType": "StructuredDocumentation",
                    "src": "5714:298:11",
                    "text": " @dev Message sender declares it as a super app, using a registration key\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`\n @param registrationKey The registration key issued by the governance"
                  },
                  "functionSelector": "bd1c448b",
                  "id": 2154,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAppWithKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2149,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2154,
                        "src": "6045:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6045:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2151,
                        "mutability": "mutable",
                        "name": "registrationKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2154,
                        "src": "6065:31:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2150,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6044:53:11"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6106:0:11"
                  },
                  "scope": 2414,
                  "src": "6017:90:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2155,
                    "nodeType": "StructuredDocumentation",
                    "src": "6113:282:11",
                    "text": " @dev Message sender declares app as a super app\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`\n NOTE: only factory contracts authorized by governance can register super apps"
                  },
                  "functionSelector": "f3733052",
                  "id": 2163,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAppByFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2158,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2163,
                        "src": "6430:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2157,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2156,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "6430:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "6430:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2160,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2163,
                        "src": "6445:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6445:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6429:35:11"
                  },
                  "returnParameters": {
                    "id": 2162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6473:0:11"
                  },
                  "scope": 2414,
                  "src": "6400:74:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2164,
                    "nodeType": "StructuredDocumentation",
                    "src": "6480:90:11",
                    "text": " @dev Query if the app is registered\n @param app Super app address"
                  },
                  "functionSelector": "3ca3ad4e",
                  "id": 2172,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2167,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "6590:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2166,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2165,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "6590:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "6590:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6589:15:11"
                  },
                  "returnParameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "6627:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6627:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6626:6:11"
                  },
                  "scope": 2414,
                  "src": "6575:58:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2173,
                    "nodeType": "StructuredDocumentation",
                    "src": "6639:75:11",
                    "text": " @dev Query app level\n @param app Super app address"
                  },
                  "functionSelector": "13349046",
                  "id": 2181,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2181,
                        "src": "6740:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2175,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2174,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "6740:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "6740:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6739:15:11"
                  },
                  "returnParameters": {
                    "id": 2180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2179,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 2181,
                        "src": "6777:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2178,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6777:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6776:16:11"
                  },
                  "scope": 2414,
                  "src": "6719:74:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2182,
                    "nodeType": "StructuredDocumentation",
                    "src": "6799:93:11",
                    "text": " @dev Get the manifest of the super app\n @param app Super app address"
                  },
                  "functionSelector": "f9f522f4",
                  "id": 2194,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppManifest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2185,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2194,
                        "src": "6930:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2184,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2183,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "6930:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "6930:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6920:29:11"
                  },
                  "returnParameters": {
                    "id": 2193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2188,
                        "mutability": "mutable",
                        "name": "isSuperApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2194,
                        "src": "7002:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2187,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7002:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2190,
                        "mutability": "mutable",
                        "name": "isJailed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2194,
                        "src": "7031:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7031:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2192,
                        "mutability": "mutable",
                        "name": "noopMask",
                        "nodeType": "VariableDeclaration",
                        "scope": 2194,
                        "src": "7058:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7058:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6988:96:11"
                  },
                  "scope": 2414,
                  "src": "6897:188:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2195,
                    "nodeType": "StructuredDocumentation",
                    "src": "7091:92:11",
                    "text": " @dev Query if the app has been jailed\n @param app Super app address"
                  },
                  "functionSelector": "6b4f3335",
                  "id": 2203,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAppJailed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2198,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2203,
                        "src": "7209:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2197,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2196,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "7209:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "7209:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7208:15:11"
                  },
                  "returnParameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2201,
                        "mutability": "mutable",
                        "name": "isJail",
                        "nodeType": "VariableDeclaration",
                        "scope": 2203,
                        "src": "7247:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2200,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7247:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7246:13:11"
                  },
                  "scope": 2414,
                  "src": "7188:72:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2204,
                    "nodeType": "StructuredDocumentation",
                    "src": "7266:153:11",
                    "text": " @dev White-list the target app for app composition for the source app (msg.sender)\n @param targetApp The taget super app address"
                  },
                  "functionSelector": "57121e0c",
                  "id": 2210,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowCompositeApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "targetApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2210,
                        "src": "7451:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2206,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2205,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "7451:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "7451:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7450:21:11"
                  },
                  "returnParameters": {
                    "id": 2209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7480:0:11"
                  },
                  "scope": 2414,
                  "src": "7424:57:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2211,
                    "nodeType": "StructuredDocumentation",
                    "src": "7487:185:11",
                    "text": " @dev Query if source app  is allowed to call the target app as downstream app.\n @param app Super app address\n @param targetApp The taget super app address"
                  },
                  "functionSelector": "bb84cfa1",
                  "id": 2222,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isCompositeAppAllowed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2214,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "7717:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2213,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2212,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "7717:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "7717:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2217,
                        "mutability": "mutable",
                        "name": "targetApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "7740:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2216,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2215,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "7740:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "7740:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7707:58:11"
                  },
                  "returnParameters": {
                    "id": 2221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2220,
                        "mutability": "mutable",
                        "name": "isAppAllowed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2222,
                        "src": "7805:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2219,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7805:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7804:19:11"
                  },
                  "scope": 2414,
                  "src": "7677:147:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "74041e02",
                  "id": 2236,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppBeforeCallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2225,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "8259:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2224,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2223,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "8259:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "8259:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2227,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "8282:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2226,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8282:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "isTermination",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "8315:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8315:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2231,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "8343:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2230,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8343:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8249:118:11"
                  },
                  "returnParameters": {
                    "id": 2235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2234,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "8454:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2233,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8454:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8453:21:11"
                  },
                  "scope": 2414,
                  "src": "8219:256:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e6d0a84",
                  "id": 2250,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppAfterCallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2239,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "8520:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2237,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "8520:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "8520:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "8543:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8543:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2243,
                        "mutability": "mutable",
                        "name": "isTermination",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "8576:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2242,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8576:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2245,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "8604:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2244,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8604:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8510:118:11"
                  },
                  "returnParameters": {
                    "id": 2249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2248,
                        "mutability": "mutable",
                        "name": "appCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2250,
                        "src": "8715:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2247,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8715:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8714:21:11"
                  },
                  "scope": 2414,
                  "src": "8481:255:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "768fabb0",
                  "id": 2267,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appCallbackPush",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2252,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8776:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2251,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8776:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2255,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8804:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2254,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2253,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "8804:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "8804:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2257,
                        "mutability": "mutable",
                        "name": "appAllowanceGranted",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8827:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2256,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2259,
                        "mutability": "mutable",
                        "name": "appAllowanceUsed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8864:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2258,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8864:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2262,
                        "mutability": "mutable",
                        "name": "appAllowanceToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8897:34:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2260,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "8897:16:11"
                          },
                          "referencedDeclaration": 2785,
                          "src": "8897:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8766:171:11"
                  },
                  "returnParameters": {
                    "id": 2266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2265,
                        "mutability": "mutable",
                        "name": "appCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "8997:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2264,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8997:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8996:21:11"
                  },
                  "scope": 2414,
                  "src": "8742:276:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "989b0c3e",
                  "id": 2276,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appCallbackPop",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2269,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "9057:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2268,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9057:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2271,
                        "mutability": "mutable",
                        "name": "appAllowanceUsedDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "9085:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2270,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9085:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9047:72:11"
                  },
                  "returnParameters": {
                    "id": 2275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2274,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2276,
                        "src": "9179:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2273,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9179:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9178:21:11"
                  },
                  "scope": 2414,
                  "src": "9024:176:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0792f20a",
                  "id": 2287,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ctxUseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2278,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "9240:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2277,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9240:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "appAllowanceWantedMore",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "9268:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9268:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2282,
                        "mutability": "mutable",
                        "name": "appAllowanceUsedDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "9308:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2281,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9308:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9230:112:11"
                  },
                  "returnParameters": {
                    "id": 2286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2285,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2287,
                        "src": "9402:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2284,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9402:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9401:21:11"
                  },
                  "scope": 2414,
                  "src": "9206:217:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b724211e",
                  "id": 2299,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "jailApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2289,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "9455:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2288,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9455:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2292,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "9483:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2291,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2290,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "9483:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "9483:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2294,
                        "mutability": "mutable",
                        "name": "reason",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "9506:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9506:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9445:81:11"
                  },
                  "returnParameters": {
                    "id": 2298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2297,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2299,
                        "src": "9586:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2296,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9586:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9585:21:11"
                  },
                  "scope": 2414,
                  "src": "9429:178:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2300,
                    "nodeType": "StructuredDocumentation",
                    "src": "10168:197:11",
                    "text": " @dev Call agreement function\n @param callData The contextual call data with placeholder ctx\n @param userData Extra user data being sent to the super app callbacks"
                  },
                  "functionSelector": "39255d5b",
                  "id": 2312,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2303,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "10404:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2302,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2301,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "10404:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "10404:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2305,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "10445:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2304,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10445:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2307,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "10479:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2306,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10479:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10393:116:11"
                  },
                  "returnParameters": {
                    "id": 2311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2310,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2312,
                        "src": "10562:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2309,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10562:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10561:27:11"
                  },
                  "scope": 2414,
                  "src": "10371:218:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2313,
                    "nodeType": "StructuredDocumentation",
                    "src": "10595:154:11",
                    "text": " @dev Call app action\n @param callData The contextual call data.\n NOTE: See callAgreement about contextual call data."
                  },
                  "functionSelector": "1e855cf3",
                  "id": 2323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppAction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2316,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2323,
                        "src": "10786:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2315,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2314,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "10786:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "10786:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2318,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2323,
                        "src": "10809:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2317,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10809:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10776:62:11"
                  },
                  "returnParameters": {
                    "id": 2322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2321,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2323,
                        "src": "10918:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2320,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10918:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10917:27:11"
                  },
                  "scope": 2414,
                  "src": "10754:191:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluid.Context",
                  "id": 2347,
                  "members": [
                    {
                      "constant": false,
                      "id": 2325,
                      "mutability": "mutable",
                      "name": "appLevel",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12090:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2324,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12090:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2327,
                      "mutability": "mutable",
                      "name": "callType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12138:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2326,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12138:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2329,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12195:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12195:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2331,
                      "mutability": "mutable",
                      "name": "msgSender",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12274:17:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12274:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2333,
                      "mutability": "mutable",
                      "name": "agreementSelector",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12440:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2332,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "12440:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2335,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12522:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2334,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12522:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2337,
                      "mutability": "mutable",
                      "name": "appAllowanceGranted",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12625:27:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2336,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12625:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2339,
                      "mutability": "mutable",
                      "name": "appAllowanceWanted",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12714:26:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2338,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12714:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2341,
                      "mutability": "mutable",
                      "name": "appAllowanceUsed",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12830:23:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2340,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12830:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2343,
                      "mutability": "mutable",
                      "name": "appAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12886:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12886:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2346,
                      "mutability": "mutable",
                      "name": "appAllowanceToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2347,
                      "src": "12954:34:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                        "typeString": "contract ISuperfluidToken"
                      },
                      "typeName": {
                        "id": 2345,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2344,
                          "name": "ISuperfluidToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2785,
                          "src": "12954:16:11"
                        },
                        "referencedDeclaration": 2785,
                        "src": "12954:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Context",
                  "nodeType": "StructDefinition",
                  "scope": 2414,
                  "src": "11993:1002:11",
                  "visibility": "public"
                },
                {
                  "functionSelector": "4329d293",
                  "id": 2363,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAgreementWithContext",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2357,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2350,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13044:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2349,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2348,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1403,
                            "src": "13044:15:11"
                          },
                          "referencedDeclaration": 1403,
                          "src": "13044:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2352,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13084:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2351,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13084:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2354,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13117:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2353,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13117:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2356,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13150:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2355,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13150:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13034:140:11"
                  },
                  "returnParameters": {
                    "id": 2362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2359,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13275:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2358,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13275:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2361,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2363,
                        "src": "13296:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2360,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13296:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13274:48:11"
                  },
                  "scope": 2414,
                  "src": "13001:322:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ba48b5f8",
                  "id": 2375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppActionWithContext",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2366,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2375,
                        "src": "13372:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1517",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2365,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2364,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1517,
                            "src": "13372:9:11"
                          },
                          "referencedDeclaration": 1517,
                          "src": "13372:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1517",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2368,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2375,
                        "src": "13395:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2367,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13395:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2370,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2375,
                        "src": "13428:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2369,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13428:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13362:90:11"
                  },
                  "returnParameters": {
                    "id": 2374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2373,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2375,
                        "src": "13540:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2372,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13540:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13539:21:11"
                  },
                  "scope": 2414,
                  "src": "13329:232:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3f6c923a",
                  "id": 2383,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decodeCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2377,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2383,
                        "src": "13586:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2376,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13586:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13585:20:11"
                  },
                  "returnParameters": {
                    "id": 2382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2381,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 2383,
                        "src": "13645:22:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$2347_memory_ptr",
                          "typeString": "struct ISuperfluid.Context"
                        },
                        "typeName": {
                          "id": 2380,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2379,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2347,
                            "src": "13645:7:11"
                          },
                          "referencedDeclaration": 2347,
                          "src": "13645:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$2347_storage_ptr",
                            "typeString": "struct ISuperfluid.Context"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13644:24:11"
                  },
                  "scope": 2414,
                  "src": "13567:102:11",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bf428734",
                  "id": 2390,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isCtxValid",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2385,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2390,
                        "src": "13695:18:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2384,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13695:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13694:20:11"
                  },
                  "returnParameters": {
                    "id": 2389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2388,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2390,
                        "src": "13738:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2387,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13738:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13737:6:11"
                  },
                  "scope": 2414,
                  "src": "13675:69:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluid.Operation",
                  "id": 2397,
                  "members": [
                    {
                      "constant": false,
                      "id": 2392,
                      "mutability": "mutable",
                      "name": "operationType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2397,
                      "src": "14069:20:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2391,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14069:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2394,
                      "mutability": "mutable",
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 2397,
                      "src": "14127:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14127:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2396,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 2397,
                      "src": "14193:10:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2395,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14193:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Operation",
                  "nodeType": "StructDefinition",
                  "scope": 2414,
                  "src": "13976:234:11",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2398,
                    "nodeType": "StructuredDocumentation",
                    "src": "14216:95:11",
                    "text": " @dev Batch call function\n @param operations Array of batch operations."
                  },
                  "functionSelector": "6ad3ca7d",
                  "id": 2405,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2402,
                        "mutability": "mutable",
                        "name": "operations",
                        "nodeType": "VariableDeclaration",
                        "scope": 2405,
                        "src": "14335:29:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operation_$2397_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ISuperfluid.Operation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2400,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2399,
                              "name": "Operation",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2397,
                              "src": "14335:9:11"
                            },
                            "referencedDeclaration": 2397,
                            "src": "14335:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operation_$2397_storage_ptr",
                              "typeString": "struct ISuperfluid.Operation"
                            }
                          },
                          "id": 2401,
                          "nodeType": "ArrayTypeName",
                          "src": "14335:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Operation_$2397_storage_$dyn_storage_ptr",
                            "typeString": "struct ISuperfluid.Operation[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14334:31:11"
                  },
                  "returnParameters": {
                    "id": 2404,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14374:0:11"
                  },
                  "scope": 2414,
                  "src": "14316:59:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2406,
                    "nodeType": "StructuredDocumentation",
                    "src": "14381:129:11",
                    "text": " @dev Batch call function for trusted forwarders (EIP-2771)\n @param operations Array of batch operations."
                  },
                  "functionSelector": "670e77e3",
                  "id": 2413,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forwardBatchCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2410,
                        "mutability": "mutable",
                        "name": "operations",
                        "nodeType": "VariableDeclaration",
                        "scope": 2413,
                        "src": "14541:29:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operation_$2397_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ISuperfluid.Operation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2408,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2407,
                              "name": "Operation",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2397,
                              "src": "14541:9:11"
                            },
                            "referencedDeclaration": 2397,
                            "src": "14541:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operation_$2397_storage_ptr",
                              "typeString": "struct ISuperfluid.Operation"
                            }
                          },
                          "id": 2409,
                          "nodeType": "ArrayTypeName",
                          "src": "14541:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Operation_$2397_storage_$dyn_storage_ptr",
                            "typeString": "struct ISuperfluid.Operation[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14540:31:11"
                  },
                  "returnParameters": {
                    "id": 2412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14580:0:11"
                  },
                  "scope": 2414,
                  "src": "14515:66:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2415,
              "src": "1187:14397:11"
            }
          ],
          "src": "35:15550:11"
        },
        "id": 11
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1403
            ],
            "ISuperToken": [
              1871
            ],
            "ISuperfluid": [
              2414
            ],
            "ISuperfluidGovernance": [
              2497
            ],
            "ISuperfluidToken": [
              2785
            ]
          },
          "id": 2498,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2416,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:12"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 2418,
              "nodeType": "ImportDirective",
              "scope": 2498,
              "sourceUnit": 1404,
              "src": "62:56:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2417,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 2420,
              "nodeType": "ImportDirective",
              "scope": 2498,
              "sourceUnit": 1872,
              "src": "119:48:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2419,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "128:11:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 2422,
              "nodeType": "ImportDirective",
              "scope": 2498,
              "sourceUnit": 2786,
              "src": "168:59:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2421,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "177:16:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "./ISuperfluid.sol",
              "id": 2424,
              "nodeType": "ImportDirective",
              "scope": 2498,
              "sourceUnit": 2415,
              "src": "228:48:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2423,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "237:11:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2425,
                "nodeType": "StructuredDocumentation",
                "src": "279:74:12",
                "text": " @dev Superfluid's Governance interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2497,
              "linearizedBaseContracts": [
                2497
              ],
              "name": "ISuperfluidGovernance",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2426,
                    "nodeType": "StructuredDocumentation",
                    "src": "393:76:12",
                    "text": " @dev Replace the current governance with a new governance"
                  },
                  "functionSelector": "44864b25",
                  "id": 2434,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "replaceGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2429,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2434,
                        "src": "510:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2428,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2427,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "510:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "510:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2431,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 2434,
                        "src": "536:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "536:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:51:12"
                  },
                  "returnParameters": {
                    "id": 2433,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "560:0:12"
                  },
                  "scope": 2497,
                  "src": "474:87:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2435,
                    "nodeType": "StructuredDocumentation",
                    "src": "567:54:12",
                    "text": " @dev Register a new agreement class"
                  },
                  "functionSelector": "cadf8f85",
                  "id": 2443,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2438,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "667:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2437,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2436,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "667:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "667:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2440,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "693:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "657:59:12"
                  },
                  "returnParameters": {
                    "id": 2442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "725:0:12"
                  },
                  "scope": 2497,
                  "src": "626:100:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2444,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:185:12",
                    "text": " @dev Update logics of the contracts\n NOTE:\n - Because they might have inter-dependencies, it is good to have one single function to update them all"
                  },
                  "functionSelector": "427942a4",
                  "id": 2457,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateContracts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2455,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2447,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "956:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2446,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2445,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "956:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "956:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2449,
                        "mutability": "mutable",
                        "name": "hostNewLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "982:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "982:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2452,
                        "mutability": "mutable",
                        "name": "agreementClassNewLogics",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "1012:42:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1012:7:12",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2451,
                          "nodeType": "ArrayTypeName",
                          "src": "1012:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2454,
                        "mutability": "mutable",
                        "name": "superTokenFactoryNewLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2457,
                        "src": "1064:33:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2453,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1064:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "946:157:12"
                  },
                  "returnParameters": {
                    "id": 2456,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1112:0:12"
                  },
                  "scope": 2497,
                  "src": "922:191:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2458,
                    "nodeType": "StructuredDocumentation",
                    "src": "1119:113:12",
                    "text": " @dev Update supertoken logic contract to the latest that is managed by the super token factory"
                  },
                  "functionSelector": "42148deb",
                  "id": 2468,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchUpdateSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2461,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2468,
                        "src": "1282:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2460,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2459,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "1282:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "1282:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2465,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 2468,
                        "src": "1308:29:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperToken_$1871_$dyn_calldata_ptr",
                          "typeString": "contract ISuperToken[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2463,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2462,
                              "name": "ISuperToken",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1871,
                              "src": "1308:11:12"
                            },
                            "referencedDeclaration": 1871,
                            "src": "1308:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1871",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 2464,
                          "nodeType": "ArrayTypeName",
                          "src": "1308:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperToken_$1871_$dyn_storage_ptr",
                            "typeString": "contract ISuperToken[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:66:12"
                  },
                  "returnParameters": {
                    "id": 2467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1347:0:12"
                  },
                  "scope": 2497,
                  "src": "1237:111:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1354:43:12",
                    "text": "@dev Get configuration as address value"
                  },
                  "functionSelector": "8369a0f1",
                  "id": 2482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfigAsAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2472,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1439:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2471,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2470,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "1439:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "1439:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2475,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1465:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2474,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2473,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1465:16:12"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1465:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2477,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1502:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2476,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1502:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1429:85:12"
                  },
                  "returnParameters": {
                    "id": 2481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2480,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1538:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1538:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1537:15:12"
                  },
                  "scope": 2497,
                  "src": "1402:151:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2483,
                    "nodeType": "StructuredDocumentation",
                    "src": "1559:43:12",
                    "text": "@dev Get configuration as uint256 value"
                  },
                  "functionSelector": "80f70cba",
                  "id": 2496,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfigAsUint256",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2492,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2486,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2496,
                        "src": "1644:16:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2485,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2484,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "1644:11:12"
                          },
                          "referencedDeclaration": 2414,
                          "src": "1644:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2489,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2496,
                        "src": "1670:27:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2488,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2487,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "1670:16:12"
                          },
                          "referencedDeclaration": 2785,
                          "src": "1670:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2785",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2491,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2496,
                        "src": "1707:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1634:85:12"
                  },
                  "returnParameters": {
                    "id": 2495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2494,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2496,
                        "src": "1743:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1743:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1742:15:12"
                  },
                  "scope": 2497,
                  "src": "1607:151:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2498,
              "src": "354:1407:12"
            }
          ],
          "src": "35:1727:12"
        },
        "id": 12
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1403
            ],
            "ISuperfluidToken": [
              2785
            ]
          },
          "id": 2786,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2499,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:13"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 2501,
              "nodeType": "ImportDirective",
              "scope": 2786,
              "sourceUnit": 1404,
              "src": "62:56:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2500,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:13",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2502,
                "nodeType": "StructuredDocumentation",
                "src": "121:72:13",
                "text": " @title Superfluid's token interface.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2785,
              "linearizedBaseContracts": [
                2785
              ],
              "name": "ISuperfluidToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2503,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:60:13",
                    "text": " @dev Get superfluid host contract address"
                  },
                  "functionSelector": "20bc4425",
                  "id": 2508,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHost",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2504,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "495:2:13"
                  },
                  "returnParameters": {
                    "id": 2507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2506,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2508,
                        "src": "520:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "519:14:13"
                  },
                  "scope": 2785,
                  "src": "479:55:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluidToken.LiquidationTypeData",
                  "id": 2513,
                  "members": [
                    {
                      "constant": false,
                      "id": 2510,
                      "mutability": "mutable",
                      "name": "version",
                      "nodeType": "VariableDeclaration",
                      "scope": 2513,
                      "src": "953:15:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "953:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2512,
                      "mutability": "mutable",
                      "name": "liquidationType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2513,
                      "src": "978:21:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2511,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "978:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "LiquidationTypeData",
                  "nodeType": "StructDefinition",
                  "scope": 2785,
                  "src": "916:90:13",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2514,
                    "nodeType": "StructuredDocumentation",
                    "src": "1208:321:13",
                    "text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
                  },
                  "functionSelector": "eb3537cc",
                  "id": 2527,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2516,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2527,
                        "src": "1569:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2518,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2527,
                        "src": "1593:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2517,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1560:56:13"
                  },
                  "returnParameters": {
                    "id": 2526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2521,
                        "mutability": "mutable",
                        "name": "availableBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 2527,
                        "src": "1669:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2520,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1669:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2523,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2527,
                        "src": "1706:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1706:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2525,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2527,
                        "src": "1735:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1735:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1655:100:13"
                  },
                  "scope": 2785,
                  "src": "1534:222:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2528,
                    "nodeType": "StructuredDocumentation",
                    "src": "1762:67:13",
                    "text": "@dev realtimeBalanceOf with timestamp equals to block timestamp"
                  },
                  "functionSelector": "2ec8eec7",
                  "id": 2541,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOfNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2530,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2541,
                        "src": "1872:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1872:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:30:13"
                  },
                  "returnParameters": {
                    "id": 2540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2533,
                        "mutability": "mutable",
                        "name": "availableBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 2541,
                        "src": "1946:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2532,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2535,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2541,
                        "src": "1983:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1983:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2537,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2541,
                        "src": "2012:19:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2539,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2541,
                        "src": "2045:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2045:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1932:131:13"
                  },
                  "scope": 2785,
                  "src": "1834:230:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2542,
                    "nodeType": "StructuredDocumentation",
                    "src": "2070:185:13",
                    "text": " @dev Check if one account is critical\n @param account Account check if is critical by a future time\n @param timestamp Time of balance\n @return isCritical"
                  },
                  "functionSelector": "d9d078d6",
                  "id": 2551,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountCritical",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2544,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2551,
                        "src": "2296:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2543,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2296:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2546,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2551,
                        "src": "2321:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2321:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2286:58:13"
                  },
                  "returnParameters": {
                    "id": 2550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2549,
                        "mutability": "mutable",
                        "name": "isCritical",
                        "nodeType": "VariableDeclaration",
                        "scope": 2551,
                        "src": "2383:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2548,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2382:17:13"
                  },
                  "scope": 2785,
                  "src": "2260:140:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2552,
                    "nodeType": "StructuredDocumentation",
                    "src": "2406:150:13",
                    "text": " @dev Check if one account is critical now\n @param account Account check if is critical by a future time\n @return isCritical"
                  },
                  "functionSelector": "79359f6f",
                  "id": 2559,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountCriticalNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2554,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2559,
                        "src": "2600:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2600:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2590:31:13"
                  },
                  "returnParameters": {
                    "id": 2558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2557,
                        "mutability": "mutable",
                        "name": "isCritical",
                        "nodeType": "VariableDeclaration",
                        "scope": 2559,
                        "src": "2660:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2556,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:17:13"
                  },
                  "scope": 2785,
                  "src": "2561:116:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2560,
                    "nodeType": "StructuredDocumentation",
                    "src": "2683:187:13",
                    "text": " @dev Check if one account is solvent\n @param account Account check if is solvent by a future time\n @param timestamp Time of balance\n @return isSolvent"
                  },
                  "functionSelector": "b84cdd4a",
                  "id": 2569,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountSolvent",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2562,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2569,
                        "src": "2910:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2561,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2910:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2564,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2569,
                        "src": "2935:17:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2563,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2935:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:58:13"
                  },
                  "returnParameters": {
                    "id": 2568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2567,
                        "mutability": "mutable",
                        "name": "isSolvent",
                        "nodeType": "VariableDeclaration",
                        "scope": 2569,
                        "src": "2997:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2566,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2997:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2996:16:13"
                  },
                  "scope": 2785,
                  "src": "2875:138:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2570,
                    "nodeType": "StructuredDocumentation",
                    "src": "3019:138:13",
                    "text": " @dev Check if one account is solvent now\n @param account Account check if is solvent now\n @return isSolvent"
                  },
                  "functionSelector": "bb0d196e",
                  "id": 2577,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountSolventNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2572,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2577,
                        "src": "3200:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3200:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3190:31:13"
                  },
                  "returnParameters": {
                    "id": 2576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2575,
                        "mutability": "mutable",
                        "name": "isSolvent",
                        "nodeType": "VariableDeclaration",
                        "scope": 2577,
                        "src": "3260:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2574,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3260:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3259:16:13"
                  },
                  "scope": 2785,
                  "src": "3162:114:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2578,
                    "nodeType": "StructuredDocumentation",
                    "src": "3282:274:13",
                    "text": " @dev Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
                  },
                  "functionSelector": "386fa221",
                  "id": 2587,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccountActiveAgreements",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2580,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2587,
                        "src": "3597:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3596:17:13"
                  },
                  "returnParameters": {
                    "id": 2586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2585,
                        "mutability": "mutable",
                        "name": "activeAgreements",
                        "nodeType": "VariableDeclaration",
                        "scope": 2587,
                        "src": "3650:41:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1403_$dyn_memory_ptr",
                          "typeString": "contract ISuperAgreement[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2583,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2582,
                              "name": "ISuperAgreement",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1403,
                              "src": "3650:15:13"
                            },
                            "referencedDeclaration": 1403,
                            "src": "3650:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                              "typeString": "contract ISuperAgreement"
                            }
                          },
                          "id": 2584,
                          "nodeType": "ArrayTypeName",
                          "src": "3650:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1403_$dyn_storage_ptr",
                            "typeString": "contract ISuperAgreement[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3649:43:13"
                  },
                  "scope": 2785,
                  "src": "3561:132:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2588,
                    "nodeType": "StructuredDocumentation",
                    "src": "3899:110:13",
                    "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "functionSelector": "12a6a3f8",
                  "id": 2596,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2590,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "4048:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2589,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4048:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2593,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2596,
                        "src": "4068:23:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2591,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4068:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2592,
                          "nodeType": "ArrayTypeName",
                          "src": "4068:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4038:59:13"
                  },
                  "returnParameters": {
                    "id": 2595,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4114:0:13"
                  },
                  "scope": 2785,
                  "src": "4014:101:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2597,
                    "nodeType": "StructuredDocumentation",
                    "src": "4121:175:13",
                    "text": " @dev Agreement creation event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "id": 2606,
                  "name": "AgreementCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2599,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "4333:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4333:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2601,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "4373:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2600,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4373:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2604,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "4393:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2602,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4393:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2603,
                          "nodeType": "ArrayTypeName",
                          "src": "4393:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4323:90:13"
                  },
                  "src": "4301:113:13"
                },
                {
                  "documentation": {
                    "id": 2607,
                    "nodeType": "StructuredDocumentation",
                    "src": "4420:184:13",
                    "text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
                  },
                  "functionSelector": "6c2d9f2f",
                  "id": 2619,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2609,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2619,
                        "src": "4644:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2611,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2619,
                        "src": "4676:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2610,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2613,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2619,
                        "src": "4696:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2612,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4696:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4634:83:13"
                  },
                  "returnParameters": {
                    "id": 2618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2617,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2619,
                        "src": "4756:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2615,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4756:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2616,
                          "nodeType": "ArrayTypeName",
                          "src": "4756:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4755:23:13"
                  },
                  "scope": 2785,
                  "src": "4609:170:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2620,
                    "nodeType": "StructuredDocumentation",
                    "src": "4785:110:13",
                    "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "functionSelector": "a1b2bf8b",
                  "id": 2628,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2622,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2628,
                        "src": "4938:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2621,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4938:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2625,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2628,
                        "src": "4958:23:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2623,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4958:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2624,
                          "nodeType": "ArrayTypeName",
                          "src": "4958:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4928:59:13"
                  },
                  "returnParameters": {
                    "id": 2627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5004:0:13"
                  },
                  "scope": 2785,
                  "src": "4900:105:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2629,
                    "nodeType": "StructuredDocumentation",
                    "src": "5011:175:13",
                    "text": " @dev Agreement creation event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "id": 2638,
                  "name": "AgreementUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2631,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "5223:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5223:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "5263:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2632,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5263:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2636,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "5283:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2634,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5283:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2635,
                          "nodeType": "ArrayTypeName",
                          "src": "5283:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5213:90:13"
                  },
                  "src": "5191:113:13"
                },
                {
                  "documentation": {
                    "id": 2639,
                    "nodeType": "StructuredDocumentation",
                    "src": "5310:73:13",
                    "text": " @dev Close the agreement\n @param id Agreement ID"
                  },
                  "functionSelector": "27048397",
                  "id": 2646,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "terminateAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2641,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "5425:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2640,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5425:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2643,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2646,
                        "src": "5445:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2642,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5445:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5415:51:13"
                  },
                  "returnParameters": {
                    "id": 2645,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5483:0:13"
                  },
                  "scope": 2785,
                  "src": "5388:96:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2647,
                    "nodeType": "StructuredDocumentation",
                    "src": "5490:144:13",
                    "text": " @dev Agreement termination event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
                  },
                  "id": 2653,
                  "name": "AgreementTerminated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2652,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2649,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2653,
                        "src": "5674:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5674:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2651,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2653,
                        "src": "5714:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2650,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5714:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5664:66:13"
                  },
                  "src": "5639:92:13"
                },
                {
                  "documentation": {
                    "id": 2654,
                    "nodeType": "StructuredDocumentation",
                    "src": "5737:190:13",
                    "text": " @dev Update agreement state slot\n @param account Account to be updated\n NOTE\n - To clear the storage out, provide zero-ed array of intended length"
                  },
                  "functionSelector": "090c415e",
                  "id": 2664,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementStateSlot",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2656,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "5975:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5975:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2658,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "6000:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6000:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2661,
                        "mutability": "mutable",
                        "name": "slotData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2664,
                        "src": "6024:27:13",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2659,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6024:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2660,
                          "nodeType": "ArrayTypeName",
                          "src": "6024:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5965:92:13"
                  },
                  "returnParameters": {
                    "id": 2663,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6074:0:13"
                  },
                  "scope": 2785,
                  "src": "5932:143:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2665,
                    "nodeType": "StructuredDocumentation",
                    "src": "6081:214:13",
                    "text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
                  },
                  "id": 2673,
                  "name": "AgreementStateUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2667,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2673,
                        "src": "6337:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6337:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2669,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2673,
                        "src": "6377:23:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6377:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2671,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2673,
                        "src": "6410:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2670,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6410:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6327:103:13"
                  },
                  "src": "6300:131:13"
                },
                {
                  "documentation": {
                    "id": 2674,
                    "nodeType": "StructuredDocumentation",
                    "src": "6437:266:13",
                    "text": " @dev Get data of the slot of the state of a agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
                  },
                  "functionSelector": "4b61cc33",
                  "id": 2688,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementStateSlot",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2676,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6748:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2675,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6748:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2678,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6780:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6780:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2680,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6805:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6805:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2682,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6829:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2681,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6829:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6738:112:13"
                  },
                  "returnParameters": {
                    "id": 2687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2686,
                        "mutability": "mutable",
                        "name": "slotData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6890:25:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2684,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6890:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2685,
                          "nodeType": "ArrayTypeName",
                          "src": "6890:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6889:27:13"
                  },
                  "scope": 2785,
                  "src": "6708:209:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2689,
                    "nodeType": "StructuredDocumentation",
                    "src": "6923:310:13",
                    "text": " @dev Settle balance from an account by the agreement.\n      The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "cf97256d",
                  "id": 2696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2691,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2696,
                        "src": "7270:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7270:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2693,
                        "mutability": "mutable",
                        "name": "delta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2696,
                        "src": "7295:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2692,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7295:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7260:53:13"
                  },
                  "returnParameters": {
                    "id": 2695,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7330:0:13"
                  },
                  "scope": 2785,
                  "src": "7238:93:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2697,
                    "nodeType": "StructuredDocumentation",
                    "src": "7337:368:13",
                    "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward"
                  },
                  "id": 2709,
                  "name": "AgreementLiquidated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2699,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7745:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7745:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2701,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7785:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2700,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7785:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2703,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7805:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2702,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7805:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2705,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7845:29:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7845:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2707,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2709,
                        "src": "7884:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7884:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7735:175:13"
                  },
                  "src": "7710:201:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2710,
                    "nodeType": "StructuredDocumentation",
                    "src": "7917:210:13",
                    "text": " @dev System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout"
                  },
                  "id": 2716,
                  "name": "Bailout",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2712,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bailoutAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2716,
                        "src": "8155:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8155:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2714,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2716,
                        "src": "8195:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2713,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8195:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8145:77:13"
                  },
                  "src": "8132:91:13"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2717,
                    "nodeType": "StructuredDocumentation",
                    "src": "8229:995:13",
                    "text": " @dev Agreement liquidation event (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n NOTE:\n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
                  },
                  "id": 2733,
                  "name": "AgreementLiquidatedBy",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2732,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2719,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9266:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9266:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2721,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9301:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9301:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2723,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9341:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2722,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9341:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2725,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9361:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2724,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9361:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2727,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bondAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9401:27:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9401:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2729,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9438:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2728,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9438:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2731,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2733,
                        "src": "9468:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2730,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9468:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9256:239:13"
                  },
                  "src": "9229:267:13"
                },
                {
                  "documentation": {
                    "id": 2734,
                    "nodeType": "StructuredDocumentation",
                    "src": "9502:667:13",
                    "text": " @dev Make liquidation payouts\n @param id Agreement ID\n @param liquidator Address of the executer of liquidation\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of account bailout needed\n NOTE:\n Liquidation rules:\n  - If a bailout is required (bailoutAmount > 0)\n     - the actual reward goes to the liquidator,\n     - while the reward account becomes the bailout account\n     - total bailout include: bailout amount + reward amount\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "8ddd1c0f",
                  "id": 2747,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeLiquidationPayouts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2745,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2736,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2747,
                        "src": "10220:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2735,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10220:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2738,
                        "mutability": "mutable",
                        "name": "liquidator",
                        "nodeType": "VariableDeclaration",
                        "scope": 2747,
                        "src": "10240:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10240:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2740,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2747,
                        "src": "10268:22:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10268:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2742,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2747,
                        "src": "10300:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10300:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2744,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2747,
                        "src": "10330:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10330:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10210:147:13"
                  },
                  "returnParameters": {
                    "id": 2746,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10374:0:13"
                  },
                  "scope": 2785,
                  "src": "10174:201:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2748,
                    "nodeType": "StructuredDocumentation",
                    "src": "10381:1465:13",
                    "text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAccount Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n NOTE:\n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
                  },
                  "id": 2766,
                  "name": "AgreementLiquidatedV2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2750,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "11888:30:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11888:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2752,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "11928:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2751,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11928:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2754,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "11948:33:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11948:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2756,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "targetAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "11991:29:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11991:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2758,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "12030:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12030:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2760,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "12061:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12061:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2762,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "targetAccountBalanceDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "12091:32:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2761,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12091:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2764,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidationTypeData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2766,
                        "src": "12133:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2763,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12133:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11878:286:13"
                  },
                  "src": "11851:314:13"
                },
                {
                  "documentation": {
                    "id": 2767,
                    "nodeType": "StructuredDocumentation",
                    "src": "12171:1131:13",
                    "text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account of the stream sender\n @param rewardAmount The amount the reward recepient account will receive\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "1863e809",
                  "id": 2784,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeLiquidationPayoutsV2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2782,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2769,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13355:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2768,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13355:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2771,
                        "mutability": "mutable",
                        "name": "liquidationTypeData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13375:32:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2770,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13375:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2773,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13417:25:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2772,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13417:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2775,
                        "mutability": "mutable",
                        "name": "useDefaultRewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13452:28:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2774,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13452:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2777,
                        "mutability": "mutable",
                        "name": "targetAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13490:21:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2776,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13490:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2779,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13521:20:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13521:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2781,
                        "mutability": "mutable",
                        "name": "targetAccountBalanceDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "13551:32:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2780,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13551:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13345:244:13"
                  },
                  "returnParameters": {
                    "id": 2783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13598:0:13"
                  },
                  "scope": 2785,
                  "src": "13307:292:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2786,
              "src": "194:14035:13"
            }
          ],
          "src": "35:14195:13"
        },
        "id": 13
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
          "exportedSymbols": {
            "ERC20WithTokenInfo": [
              2797
            ],
            "IERC20": [
              182
            ],
            "TokenInfo": [
              2819
            ]
          },
          "id": 2798,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2787,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2789,
              "nodeType": "ImportDirective",
              "scope": 2798,
              "sourceUnit": 183,
              "src": "62:72:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2788,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:6:14",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "./TokenInfo.sol",
              "id": 2791,
              "nodeType": "ImportDirective",
              "scope": 2798,
              "sourceUnit": 2820,
              "src": "135:44:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2790,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "144:9:14",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2793,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 182,
                    "src": "513:6:14"
                  },
                  "id": 2794,
                  "nodeType": "InheritanceSpecifier",
                  "src": "513:6:14"
                },
                {
                  "baseName": {
                    "id": 2795,
                    "name": "TokenInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2819,
                    "src": "521:9:14"
                  },
                  "id": 2796,
                  "nodeType": "InheritanceSpecifier",
                  "src": "521:9:14"
                }
              ],
              "contractDependencies": [
                182,
                2819
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 2792,
                "nodeType": "StructuredDocumentation",
                "src": "182:245:14",
                "text": " @dev Interface for ERC20 token with token info\n NOTE: Using abstract contract instead of interfaces because old solidity\n does not support interface inheriting other interfaces\n solhint-disable-next-line no-empty-blocks"
              },
              "fullyImplemented": false,
              "id": 2797,
              "linearizedBaseContracts": [
                2797,
                2819,
                182
              ],
              "name": "ERC20WithTokenInfo",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 2798,
              "src": "473:60:14"
            }
          ],
          "src": "35:499:14"
        },
        "id": 14
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
          "exportedSymbols": {
            "TokenInfo": [
              2819
            ]
          },
          "id": 2820,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2799,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:15"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2800,
                "nodeType": "StructuredDocumentation",
                "src": "62:166:15",
                "text": " @dev ERC20 token info interface\n NOTE: ERC20 standard interface does not specify these functions, but\n often the token implementations have them."
              },
              "fullyImplemented": false,
              "id": 2819,
              "linearizedBaseContracts": [
                2819
              ],
              "name": "TokenInfo",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2801,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:54:15",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 2806,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2802,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:2:15"
                  },
                  "returnParameters": {
                    "id": 2805,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2804,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2806,
                        "src": "353:13:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2803,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "352:15:15"
                  },
                  "scope": 2819,
                  "src": "314:54:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2807,
                    "nodeType": "StructuredDocumentation",
                    "src": "374:102:15",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 2812,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2808,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "496:2:15"
                  },
                  "returnParameters": {
                    "id": 2811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2810,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2812,
                        "src": "522:13:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2809,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "521:15:15"
                  },
                  "scope": 2819,
                  "src": "481:56:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2813,
                    "nodeType": "StructuredDocumentation",
                    "src": "543:612:15",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 2818,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1177:2:15"
                  },
                  "returnParameters": {
                    "id": 2817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2816,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2818,
                        "src": "1203:5:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2815,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1202:7:15"
                  },
                  "scope": 2819,
                  "src": "1160:50:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2820,
              "src": "229:983:15"
            }
          ],
          "src": "35:1178:15"
        },
        "id": 15
      },
      "contracts/interfaces/Controller.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/Controller.sol",
          "exportedSymbols": {
            "Context": [
              363
            ],
            "Controller": [
              2892
            ],
            "ISuperfluid": [
              2414
            ],
            "Ownable": [
              104
            ],
            "Streamer": [
              3134
            ]
          },
          "id": 2893,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2821,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:16"
            },
            {
              "absolutePath": "contracts/interfaces/Streamer.sol",
              "file": "./Streamer.sol",
              "id": 2823,
              "nodeType": "ImportDirective",
              "scope": 2893,
              "sourceUnit": 3135,
              "src": "61:42:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2822,
                    "name": "Streamer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "70:8:16",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "id": 2825,
              "nodeType": "ImportDirective",
              "scope": 2893,
              "sourceUnit": 2415,
              "src": "107:117:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2824,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "116:11:16",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2826,
              "nodeType": "ImportDirective",
              "scope": 2893,
              "sourceUnit": 105,
              "src": "230:52:16",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2827,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "309:7:16"
                  },
                  "id": 2828,
                  "nodeType": "InheritanceSpecifier",
                  "src": "309:7:16"
                }
              ],
              "contractDependencies": [
                104,
                363,
                3134
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2892,
              "linearizedBaseContracts": [
                2892,
                104,
                363
              ],
              "name": "Controller",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2832,
                  "mutability": "mutable",
                  "name": "streamers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2892,
                  "src": "326:20:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Streamer_$3134_$dyn_storage",
                    "typeString": "contract Streamer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2830,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2829,
                        "name": "Streamer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3134,
                        "src": "326:8:16"
                      },
                      "referencedDeclaration": 3134,
                      "src": "326:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Streamer_$3134",
                        "typeString": "contract Streamer"
                      }
                    },
                    "id": 2831,
                    "nodeType": "ArrayTypeName",
                    "src": "326:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Streamer_$3134_$dyn_storage_ptr",
                      "typeString": "contract Streamer[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 2844,
                  "name": "newStream",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2834,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "streamAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 2844,
                        "src": "371:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "371:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2836,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2844,
                        "src": "394:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "394:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2838,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2844,
                        "src": "409:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2837,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "409:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2840,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2844,
                        "src": "427:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2839,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2842,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2844,
                        "src": "443:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "370:88:16"
                  },
                  "src": "355:104:16"
                },
                {
                  "body": {
                    "id": 2890,
                    "nodeType": "Block",
                    "src": "596:238:16",
                    "statements": [
                      {
                        "assignments": [
                          2862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2862,
                            "mutability": "mutable",
                            "name": "streamer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2890,
                            "src": "617:17:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Streamer_$3134",
                              "typeString": "contract Streamer"
                            },
                            "typeName": {
                              "id": 2861,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2860,
                                "name": "Streamer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3134,
                                "src": "617:8:16"
                              },
                              "referencedDeclaration": 3134,
                              "src": "617:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3134",
                                "typeString": "contract Streamer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2872,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2866,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2847,
                              "src": "650:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            {
                              "id": 2867,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2849,
                              "src": "656:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2868,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2851,
                              "src": "667:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2869,
                              "name": "_flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2853,
                              "src": "675:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            {
                              "id": 2870,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "686:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                "typeString": "contract ISuperfluid"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "637:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$2414_$_t_address_$_t_address_$_t_int96_$_t_uint256_$returns$_t_contract$_Streamer_$3134_$",
                              "typeString": "function (contract ISuperfluid,address,address,int96,uint256) returns (contract Streamer)"
                            },
                            "typeName": {
                              "id": 2864,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2863,
                                "name": "Streamer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3134,
                                "src": "641:8:16"
                              },
                              "referencedDeclaration": 3134,
                              "src": "641:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3134",
                                "typeString": "contract Streamer"
                              }
                            }
                          },
                          "id": 2871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "637:57:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Streamer_$3134",
                            "typeString": "contract Streamer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "617:77:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2876,
                              "name": "streamer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2862,
                              "src": "730:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3134",
                                "typeString": "contract Streamer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Streamer_$3134",
                                "typeString": "contract Streamer"
                              }
                            ],
                            "expression": {
                              "id": 2873,
                              "name": "streamers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2832,
                              "src": "715:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Streamer_$3134_$dyn_storage",
                                "typeString": "contract Streamer[] storage ref"
                              }
                            },
                            "id": 2875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "715:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Streamer_$3134_$returns$__$",
                              "typeString": "function (contract Streamer)"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "715:24:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2878,
                        "nodeType": "ExpressionStatement",
                        "src": "715:24:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2882,
                                  "name": "streamer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2862,
                                  "src": "775:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3134",
                                    "typeString": "contract Streamer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Streamer_$3134",
                                    "typeString": "contract Streamer"
                                  }
                                ],
                                "id": 2881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "767:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2880,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "767:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "767:17:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2884,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2851,
                              "src": "786:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2885,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2849,
                              "src": "794:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2886,
                              "name": "_flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2853,
                              "src": "805:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            {
                              "id": 2887,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "816:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2879,
                            "name": "newStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2844,
                            "src": "757:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_int96_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,int96,uint256)"
                            }
                          },
                          "id": 2888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "757:67:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2889,
                        "nodeType": "EmitStatement",
                        "src": "752:72:16"
                      }
                    ]
                  },
                  "functionSelector": "455092e4",
                  "id": 2891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2858,
                      "modifierName": {
                        "id": 2857,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "586:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "586:9:16"
                    }
                  ],
                  "name": "createNewStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2847,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "492:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2846,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2845,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "492:11:16"
                          },
                          "referencedDeclaration": 2414,
                          "src": "492:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2849,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "510:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "510:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2851,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "529:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "529:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2853,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "545:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2852,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "545:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2855,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2891,
                        "src": "562:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "562:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "491:87:16"
                  },
                  "returnParameters": {
                    "id": 2859,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "596:0:16"
                  },
                  "scope": 2892,
                  "src": "467:367:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2893,
              "src": "286:553:16"
            }
          ],
          "src": "33:806:16"
        },
        "id": 16
      },
      "contracts/interfaces/ControllerFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ControllerFactory.sol",
          "exportedSymbols": {
            "ControllerFactory": [
              2899
            ]
          },
          "id": 2900,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2894,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:17"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2899,
              "linearizedBaseContracts": [
                2899
              ],
              "name": "ControllerFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2897,
                    "nodeType": "Block",
                    "src": "119:18:17",
                    "statements": []
                  },
                  "id": 2898,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2895,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "109:2:17"
                  },
                  "returnParameters": {
                    "id": 2896,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "119:0:17"
                  },
                  "scope": 2899,
                  "src": "97:40:17",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2900,
              "src": "61:81:17"
            }
          ],
          "src": "33:109:17"
        },
        "id": 17
      },
      "contracts/interfaces/Streamer.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/Streamer.sol",
          "exportedSymbols": {
            "CFAv1Library": [
              883
            ],
            "Context": [
              363
            ],
            "ContextDefinitions": [
              1269
            ],
            "IConstantFlowAgreementV1": [
              1054
            ],
            "ISuperAgreement": [
              1403
            ],
            "ISuperApp": [
              1517
            ],
            "ISuperToken": [
              1871
            ],
            "ISuperfluid": [
              2414
            ],
            "Ownable": [
              104
            ],
            "Streamer": [
              3134
            ],
            "SuperAppDefinitions": [
              1193
            ]
          },
          "id": 3135,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2901,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:18"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
              "id": 2903,
              "nodeType": "ImportDirective",
              "scope": 3135,
              "sourceUnit": 884,
              "src": "61:108:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2902,
                    "name": "CFAv1Library",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "75:12:18",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "id": 2910,
              "nodeType": "ImportDirective",
              "scope": 3135,
              "sourceUnit": 2415,
              "src": "173:231:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2904,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "188:11:18",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2905,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "206:11:18",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2906,
                    "name": "ISuperApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "224:9:18",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2907,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "240:15:18",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2908,
                    "name": "ContextDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "262:18:18",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2909,
                    "name": "SuperAppDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "287:19:18",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "id": 2912,
              "nodeType": "ImportDirective",
              "scope": 3135,
              "sourceUnit": 1055,
              "src": "408:149:18",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2911,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "422:24:18",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2913,
              "nodeType": "ImportDirective",
              "scope": 3135,
              "sourceUnit": 105,
              "src": "561:52:18",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2914,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "1010:7:18"
                  },
                  "id": 2915,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1010:7:18"
                }
              ],
              "contractDependencies": [
                104,
                363
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3134,
              "linearizedBaseContracts": [
                3134,
                104,
                363
              ],
              "name": "Streamer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3134,
                  "src": "1053:14:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2920,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3134,
                  "src": "1105:17:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$1871",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 2919,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2918,
                      "name": "ISuperToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1871,
                      "src": "1105:11:18"
                    },
                    "referencedDeclaration": 1871,
                    "src": "1105:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$1871",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2922,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3134,
                  "src": "1169:16:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "id": 2926,
                  "libraryName": {
                    "id": 2923,
                    "name": "CFAv1Library",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 883,
                    "src": "1265:12:18"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1259:45:18",
                  "typeName": {
                    "id": 2925,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2924,
                      "name": "CFAv1Library.InitData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 378,
                      "src": "1282:21:18"
                    },
                    "referencedDeclaration": 378,
                    "src": "1282:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                      "typeString": "struct CFAv1Library.InitData"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "d3112b2e",
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "cfaV1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3134,
                  "src": "1345:34:18",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitData_$378_storage",
                    "typeString": "struct CFAv1Library.InitData"
                  },
                  "typeName": {
                    "id": 2928,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2927,
                      "name": "CFAv1Library.InitData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 378,
                      "src": "1345:21:18"
                    },
                    "referencedDeclaration": 378,
                    "src": "1345:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitData_$378_storage_ptr",
                      "typeString": "struct CFAv1Library.InitData"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2987,
                    "nodeType": "Block",
                    "src": "1491:724:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 2959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2943,
                            "name": "cfaV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2929,
                            "src": "1570:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitData_$378_storage",
                              "typeString": "struct CFAv1Library.InitData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2946,
                                "name": "host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2932,
                                "src": "1614:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                                                "id": 2953,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1827:60:18",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                                  "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                                                },
                                                "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                                  "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                                                }
                                              ],
                                              "id": 2952,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "1817:9:18",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 2954,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1817:71:18",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2950,
                                            "name": "host",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2932,
                                            "src": "1768:4:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                              "typeString": "contract ISuperfluid"
                                            }
                                          },
                                          "id": 2951,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getAgreementClass",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2057,
                                          "src": "1768:22:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_ISuperAgreement_$1403_$",
                                            "typeString": "function (bytes32) view external returns (contract ISuperAgreement)"
                                          }
                                        },
                                        "id": 2955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1768:143:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                                          "typeString": "contract ISuperAgreement"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISuperAgreement_$1403",
                                          "typeString": "contract ISuperAgreement"
                                        }
                                      ],
                                      "id": 2949,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1760:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2948,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1760:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1760:152:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2947,
                                  "name": "IConstantFlowAgreementV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1054,
                                  "src": "1717:24:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IConstantFlowAgreementV1_$1054_$",
                                    "typeString": "type(contract IConstantFlowAgreementV1)"
                                  }
                                },
                                "id": 2957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1717:214:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                                  "typeString": "contract ISuperfluid"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$1054",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              ],
                              "expression": {
                                "id": 2944,
                                "name": "CFAv1Library",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 883,
                                "src": "1578:12:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CFAv1Library_$883_$",
                                  "typeString": "type(library CFAv1Library)"
                                }
                              },
                              "id": 2945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "InitData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 378,
                              "src": "1578:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_InitData_$378_storage_ptr_$",
                                "typeString": "type(struct CFAv1Library.InitData storage pointer)"
                              }
                            },
                            "id": 2958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1578:364:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitData_$378_memory_ptr",
                              "typeString": "struct CFAv1Library.InitData memory"
                            }
                          },
                          "src": "1570:372:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$378_storage",
                            "typeString": "struct CFAv1Library.InitData storage ref"
                          }
                        },
                        "id": 2960,
                        "nodeType": "ExpressionStatement",
                        "src": "1570:372:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2962,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2940,
                              "src": "1963:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2961,
                            "name": "deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3100,
                            "src": "1955:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1955:16:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2964,
                        "nodeType": "ExpressionStatement",
                        "src": "1955:16:18"
                      },
                      {
                        "expression": {
                          "id": 2967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2965,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2922,
                            "src": "1982:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2966,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2934,
                            "src": "1993:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1982:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2968,
                        "nodeType": "ExpressionStatement",
                        "src": "1982:20:18"
                      },
                      {
                        "expression": {
                          "id": 2971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2969,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "2013:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2970,
                            "name": "_flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2938,
                            "src": "2024:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "2013:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 2972,
                        "nodeType": "ExpressionStatement",
                        "src": "2013:20:18"
                      },
                      {
                        "expression": {
                          "id": 2977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2973,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2920,
                            "src": "2044:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1871",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2975,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2936,
                                "src": "2064:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2974,
                              "name": "ISuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "2052:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISuperToken_$1871_$",
                                "typeString": "type(contract ISuperToken)"
                              }
                            },
                            "id": 2976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2052:19:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1871",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "src": "2044:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 2978,
                        "nodeType": "ExpressionStatement",
                        "src": "2044:27:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2982,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "2181:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2983,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "2191:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            {
                              "id": 2984,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2917,
                              "src": "2198:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "id": 2979,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2929,
                              "src": "2164:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$378_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 2981,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "2164:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$378_storage_ptr_$_t_address_$_t_contract$_ISuperfluidToken_$2785_$_t_int96_$returns$__$bound_to$_t_struct$_InitData_$378_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,contract ISuperfluidToken,int96)"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2164:43:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2986,
                        "nodeType": "ExpressionStatement",
                        "src": "2164:43:18"
                      }
                    ]
                  },
                  "id": 2988,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2932,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2988,
                        "src": "1404:16:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2931,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2930,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2414,
                            "src": "1404:11:18"
                          },
                          "referencedDeclaration": 2414,
                          "src": "1404:11:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2414",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2934,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2988,
                        "src": "1422:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1422:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2936,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2988,
                        "src": "1441:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2935,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1441:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2938,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2988,
                        "src": "1457:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2937,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1457:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2940,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2988,
                        "src": "1474:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1474:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1403:87:18"
                  },
                  "returnParameters": {
                    "id": 2942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1491:0:18"
                  },
                  "scope": 3134,
                  "src": "1392:823:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3031,
                    "nodeType": "Block",
                    "src": "2313:215:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3004,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2357:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Streamer_$3134",
                                        "typeString": "contract Streamer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Streamer_$3134",
                                        "typeString": "contract Streamer"
                                      }
                                    ],
                                    "id": 3003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2349:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3002,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2349:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2349:13:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 3000,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2920,
                                  "src": "2333:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                "id": 3001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1597,
                                "src": "2333:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2333:30:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2999,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3133,
                            "src": "2324:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2324:40:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3008,
                        "nodeType": "ExpressionStatement",
                        "src": "2324:40:18"
                      },
                      {
                        "expression": {
                          "id": 3011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3009,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2922,
                            "src": "2377:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3010,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "2388:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2377:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3012,
                        "nodeType": "ExpressionStatement",
                        "src": "2377:20:18"
                      },
                      {
                        "expression": {
                          "id": 3017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3013,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2920,
                            "src": "2408:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1871",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3015,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2992,
                                "src": "2428:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3014,
                              "name": "ISuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1871,
                              "src": "2416:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISuperToken_$1871_$",
                                "typeString": "type(contract ISuperToken)"
                              }
                            },
                            "id": 3016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2416:19:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1871",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "src": "2408:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1871",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 3018,
                        "nodeType": "ExpressionStatement",
                        "src": "2408:27:18"
                      },
                      {
                        "expression": {
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3019,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "2446:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3020,
                            "name": "_flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2994,
                            "src": "2457:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "2446:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 3022,
                        "nodeType": "ExpressionStatement",
                        "src": "2446:20:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3026,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "2494:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3027,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "2504:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            {
                              "id": 3028,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2917,
                              "src": "2511:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "id": 3023,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2929,
                              "src": "2477:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$378_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3025,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 494,
                            "src": "2477:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$378_storage_ptr_$_t_address_$_t_contract$_ISuperfluidToken_$2785_$_t_int96_$returns$__$bound_to$_t_struct$_InitData_$378_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,contract ISuperfluidToken,int96)"
                            }
                          },
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2477:43:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3030,
                        "nodeType": "ExpressionStatement",
                        "src": "2477:43:18"
                      }
                    ]
                  },
                  "functionSelector": "2484ea2f",
                  "id": 3032,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2997,
                      "modifierName": {
                        "id": 2996,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "2303:9:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2303:9:18"
                    }
                  ],
                  "name": "editStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2990,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 3032,
                        "src": "2244:17:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2989,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2992,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 3032,
                        "src": "2263:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2994,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 3032,
                        "src": "2279:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2993,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2279:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2243:52:18"
                  },
                  "returnParameters": {
                    "id": 2998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2313:0:18"
                  },
                  "scope": 3134,
                  "src": "2223:305:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3056,
                    "nodeType": "Block",
                    "src": "2576:115:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3040,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2604:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2604:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3042,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "2616:8:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3043,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "2626:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            ],
                            "expression": {
                              "id": 3037,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2929,
                              "src": "2587:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$378_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "2587:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$378_storage_ptr_$_t_address_$_t_address_$_t_contract$_ISuperfluidToken_$2785_$returns$__$bound_to$_t_struct$_InitData_$378_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,address,contract ISuperfluidToken)"
                            }
                          },
                          "id": 3044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2587:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3045,
                        "nodeType": "ExpressionStatement",
                        "src": "2587:45:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3051,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2676:4:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Streamer_$3134",
                                        "typeString": "contract Streamer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Streamer_$3134",
                                        "typeString": "contract Streamer"
                                      }
                                    ],
                                    "id": 3050,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2668:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3049,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2668:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3052,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2668:13:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 3047,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2920,
                                  "src": "2652:5:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                "id": 3048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1597,
                                "src": "2652:15:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2652:30:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3046,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3133,
                            "src": "2643:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2643:40:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3055,
                        "nodeType": "ExpressionStatement",
                        "src": "2643:40:18"
                      }
                    ]
                  },
                  "functionSelector": "9dad9382",
                  "id": 3057,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3035,
                      "modifierName": {
                        "id": 3034,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "2566:9:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2566:9:18"
                    }
                  ],
                  "name": "closeStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2556:2:18"
                  },
                  "returnParameters": {
                    "id": 3036,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2576:0:18"
                  },
                  "scope": 3134,
                  "src": "2536:155:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3075,
                    "nodeType": "Block",
                    "src": "2756:77:18",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3066,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2800:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Streamer_$3134",
                                      "typeString": "contract Streamer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Streamer_$3134",
                                      "typeString": "contract Streamer"
                                    }
                                  ],
                                  "id": 3065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2792:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3064,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2792:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2792:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3062,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2920,
                                "src": "2776:5:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              "id": 3063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1597,
                              "src": "2776:15:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2776:30:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 3071,
                                "name": "flowRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2917,
                                "src": "2816:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              ],
                              "id": 3070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2809:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 3069,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "2809:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2809:16:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2776:49:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3061,
                        "id": 3074,
                        "nodeType": "Return",
                        "src": "2769:56:18"
                      }
                    ]
                  },
                  "functionSelector": "b9146161",
                  "id": 3076,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStreamerETA",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3058,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2722:2:18"
                  },
                  "returnParameters": {
                    "id": 3061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3060,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3076,
                        "src": "2747:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2747:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2746:9:18"
                  },
                  "scope": 3134,
                  "src": "2699:134:18",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3099,
                    "nodeType": "Block",
                    "src": "2896:125:18",
                    "statements": [
                      {
                        "assignments": [
                          3084
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3084,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3099,
                            "src": "2907:12:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3083,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2907:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3093,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3089,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2945:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3134",
                                    "typeString": "contract Streamer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Streamer_$3134",
                                    "typeString": "contract Streamer"
                                  }
                                ],
                                "id": 3088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2937:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3087,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2937:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2937:13:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3091,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3078,
                              "src": "2952:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3085,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "2922:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 3086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "2922:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:38:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2907:53:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3095,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3084,
                              "src": "2979:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c65642e",
                              "id": 3096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2988:24:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              },
                              "value": "Token transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              }
                            ],
                            "id": 3094,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2971:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2971:42:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3098,
                        "nodeType": "ExpressionStatement",
                        "src": "2971:42:18"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 3100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3081,
                      "modifierName": {
                        "id": 3080,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "2886:9:18"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2886:9:18"
                    }
                  ],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3078,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3100,
                        "src": "2862:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3077,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2862:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2861:17:18"
                  },
                  "returnParameters": {
                    "id": 3082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2896:0:18"
                  },
                  "scope": 3134,
                  "src": "2845:176:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3132,
                    "nodeType": "Block",
                    "src": "3071:206:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3110,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3114:4:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Streamer_$3134",
                                          "typeString": "contract Streamer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Streamer_$3134",
                                          "typeString": "contract Streamer"
                                        }
                                      ],
                                      "id": 3109,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3106:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3108,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3106:7:18",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3106:13:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3106,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2920,
                                    "src": "3090:5:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 3107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1597,
                                  "src": "3090:15:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3090:30:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3113,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3102,
                                "src": "3124:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3090:41:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742066756e64732e",
                              "id": 3115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3133:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                "typeString": "literal_string \"Insufficient funds.\""
                              },
                              "value": "Insufficient funds."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                "typeString": "literal_string \"Insufficient funds.\""
                              }
                            ],
                            "id": 3105,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3082:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3082:73:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3117,
                        "nodeType": "ExpressionStatement",
                        "src": "3082:73:18"
                      },
                      {
                        "assignments": [
                          3119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3119,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3132,
                            "src": "3166:12:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3118,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3166:4:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3126,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3122,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3196:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3196:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3124,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3102,
                              "src": "3208:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3120,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2920,
                              "src": "3181:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1871",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 3121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1609,
                            "src": "3181:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3181:35:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3166:50:18"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3128,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "3235:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c65642e",
                              "id": 3129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3244:24:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              },
                              "value": "Token transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              }
                            ],
                            "id": 3127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3227:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3227:42:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3131,
                        "nodeType": "ExpressionStatement",
                        "src": "3227:42:18"
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 3133,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3102,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3133,
                        "src": "3047:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3047:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3046:17:18"
                  },
                  "returnParameters": {
                    "id": 3104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3071:0:18"
                  },
                  "scope": 3134,
                  "src": "3029:248:18",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3135,
              "src": "989:2293:18"
            }
          ],
          "src": "33:3249:18"
        },
        "id": 18
      }
    }
  }
}
