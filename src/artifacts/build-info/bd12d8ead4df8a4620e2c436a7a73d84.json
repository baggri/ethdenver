{
  "id": "bd12d8ead4df8a4620e2c436a7a73d84",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Controller.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0;\n\nimport { Streamer } from './Streamer.sol';\n\nimport { ISuperfluid } from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";  \n\ncontract Controller {\n\n    address owner;\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor (address _owner) {\n        owner = _owner;\n    }\n\n    Streamer[] streamers;\n\n    event newStream(address indexed owner, address streamAddress, address token, address receiver);\n\n    function createNewStream(ISuperfluid host, address _receiver, address _token, int96 _flowRate, string calldata _name) public onlyOwner {\n        \n        Streamer streamer = new Streamer(host, _receiver, _token, owner, _flowRate, _name);\n        \n        streamers.push(streamer);\n\n        emit newStream(msg.sender, address(streamer), _token, _receiver);\n\n    }\n\n    function getAllStreamers() external view returns(Streamer[] memory _streamers) {\n        return streamers;\n    }\n\n}"
      },
      "contracts/Streamer.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\n\r\nimport {\r\n    CFAv1Library\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\";\r\n\r\nimport { \r\n    ISuperfluid,\r\n    ISuperToken,\r\n    ISuperApp,\r\n    ISuperAgreement,\r\n    ContextDefinitions,\r\n    SuperAppDefinitions\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\";\r\n\r\nimport {\r\n    IConstantFlowAgreementV1\r\n} from \"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\";\r\n\r\n\r\n\r\ncontract Streamer {\r\n\r\n    // Global Variables:\r\n    int96 public flowRate; // Flow rate in wei per second\r\n    ISuperToken public token; // Address of the ERC20-compliant token\r\n    address public receiver;  // Address of the receiver\r\n    bool public active;\r\n    string public name;\r\n\r\n    address owner;\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /** SUPERFLUID BOILERPLATE */\r\n    using CFAv1Library for CFAv1Library.InitData;\r\n\r\n    //initialize cfaV1 variable\r\n    CFAv1Library.InitData public cfaV1;\r\n    \r\n    constructor(ISuperfluid host, address _receiver, address _token, address _owner, int96 _flowRate, string memory _name) {\r\n\r\n        //initialize InitData struct, and set equal to cfaV1\r\n        cfaV1 = CFAv1Library.InitData(\r\n            host,\r\n            //here, we are deriving the address of the CFA using the host contract\r\n            IConstantFlowAgreementV1(\r\n                address(host.getAgreementClass(\r\n                        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\")\r\n                    ))\r\n                )\r\n        );\r\n\r\n        receiver = _receiver;\r\n        token = ISuperToken(_token);\r\n        owner = _owner;\r\n        flowRate = _flowRate;\r\n        name = _name;\r\n        active = false;\r\n    }\r\n\r\n    function editStream(address _receiver, int96 _flowRate) public onlyOwner {    \r\n        receiver = _receiver;\r\n        flowRate = _flowRate;\r\n        cfaV1.updateFlow(receiver, token, flowRate);\r\n    }\r\n\r\n\r\n    function openStream() public onlyOwner {\r\n        require(active == false, \"a stream is already open\");\r\n        active = true;\r\n        require(token.balanceOf(address(this)) >= uint96(flowRate), \"Not enough balance deposited.\");\r\n        cfaV1.createFlow(receiver, token, flowRate);\r\n    }\r\n\r\n    function closeStream() public onlyOwner {\r\n        require(active == true, \"the stream is not open\");\r\n        cfaV1.deleteFlow(msg.sender, receiver, token);\r\n        withdraw(token.balanceOf(address(this)));\r\n        active = false;\r\n    }\r\n\r\n     function pauseStream() public onlyOwner {\r\n        require(active == true);\r\n        active = false;\r\n        cfaV1.deleteFlow(msg.sender, receiver, token);\r\n    }\r\n\r\n    function getStreamerETA() external view returns(uint256) {\r\n        return token.balanceOf(address(this)) / uint96(flowRate);\r\n    }\r\n    \r\n    function deposit(uint256 _amount) public onlyOwner {\r\n\r\n        bool success = token.transferFrom(msg.sender, address(this), _amount);\r\n        require(success, \"Token transfer failed.\");\r\n    }\r\n\r\n    function withdraw(uint256 _amount) public {\r\n        require(token.balanceOf(address(this)) >= _amount, \"Insufficient funds.\");\r\n        bool success = token.transfer(msg.sender, _amount);\r\n        require(success, \"Token transfer failed.\");\r\n    }\r\n\r\n    function getBalance() external view returns(uint256 balance) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    function getStreamData() external view returns(int96 _flowRate, ISuperToken _token, address _receiver, bool _active, string memory _name, uint256 _balance, uint256 _eta) {\r\n        return (flowRate, token, receiver, active, name, this.getBalance(), this.getStreamerETA());\r\n    }\r\n\r\n    function setName(string calldata _name) public {\r\n        name = _name;\r\n    }\r\n}"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n// This is required by the batchCall and decodeCtx\npragma experimental ABIEncoderV2;\n\nimport { ISuperfluidGovernance } from \"./ISuperfluidGovernance.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperTokenFactory } from \"./ISuperTokenFactory.sol\";\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperApp } from \"./ISuperApp.sol\";\nimport {\n    SuperAppDefinitions,\n    ContextDefinitions,\n    BatchOperation,\n    SuperfluidGovernanceConfigs\n} from \"./Definitions.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\n\n\n/**\n * @dev Superfluid host interface.\n\n * It is the central contract of the system where super agreement, super app\n * and super token features are connected together.\n *\n * The superfluid host contract is also the entry point for the protocol users,\n * where batch call and meta transaction are provided for UX improvements.\n *\n * @author Superfluid\n */\ninterface ISuperfluid {\n\n    /**************************************************************************\n     * Governance\n     *************************************************************************/\n\n    /**\n     * @dev Get the current governace of the Superfluid host\n     */\n    function getGovernance() external view returns(ISuperfluidGovernance governance);\n\n    event GovernanceReplaced(ISuperfluidGovernance oldGov, ISuperfluidGovernance newGov);\n    /**\n     * @dev Replace the current governance with a new one\n     */\n    function replaceGovernance(ISuperfluidGovernance newGov) external;\n\n    /**************************************************************************\n     * Agreement Whitelisting\n     *************************************************************************/\n\n    event AgreementClassRegistered(bytes32 agreementType, address code);\n    /**\n     * @dev Register a new agreement class to the system\n     * @param agreementClassLogic INitial agreement class code\n     *\n     * Modifiers:\n     *  - onlyGovernance\n     */\n    function registerAgreementClass(ISuperAgreement agreementClassLogic) external;\n\n    event AgreementClassUpdated(bytes32 agreementType, address code);\n    /**\n    * @dev Update code of an agreement class\n    * @param agreementClassLogic New code for the agreement class\n    *\n    * Modifiers:\n    *  - onlyGovernance\n    */\n    function updateAgreementClass(ISuperAgreement agreementClassLogic) external;\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementTypeListed(bytes32 agreementType) external view returns(bool yes);\n\n    /**\n    * @dev Check if the agreement class is whitelisted\n    */\n    function isAgreementClassListed(ISuperAgreement agreementClass) external view returns(bool yes);\n\n    /**\n    * @dev Get agreement class\n    */\n    function getAgreementClass(bytes32 agreementType) external view returns(ISuperAgreement agreementClass);\n\n    /**\n    * @dev Map list of the agreement classes using a bitmap\n    * @param bitmap Agreement class bitmap\n    */\n    function mapAgreementClasses(uint256 bitmap)\n        external view\n        returns (ISuperAgreement[] memory agreementClasses);\n\n    /**\n    * @dev Create a new bitmask by adding a agreement class to it.\n    * @param bitmap Agreement class bitmap\n    */\n    function addToAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**\n    * @dev Create a new bitmask by removing a agreement class from it.\n    * @param bitmap Agreement class bitmap\n    */\n    function removeFromAgreementClassesBitmap(uint256 bitmap, bytes32 agreementType)\n        external view\n        returns (uint256 newBitmap);\n\n    /**************************************************************************\n    * Super Token Factory\n    **************************************************************************/\n\n    /**\n     * @dev Get the super token factory\n     * @return factory The factory\n     */\n    function getSuperTokenFactory() external view returns (ISuperTokenFactory factory);\n\n    /**\n     * @dev Get the super token factory logic (applicable to upgradable deployment)\n     * @return logic The factory logic\n     */\n    function getSuperTokenFactoryLogic() external view returns (address logic);\n\n    event SuperTokenFactoryUpdated(ISuperTokenFactory newFactory);\n    /**\n     * @dev Update super token factory\n     * @param newFactory New factory logic\n     */\n    function updateSuperTokenFactory(ISuperTokenFactory newFactory) external;\n\n    event SuperTokenLogicUpdated(ISuperToken indexed token, address code);\n    /**\n     * @dev Update the super token logic to the latest\n     *\n     * NOTE:\n     * - Refer toISuperTokenFactory.Upgradability for expected behaviours.\n     */\n    function updateSuperTokenLogic(ISuperToken token) external;\n\n    /**************************************************************************\n     * App Registry\n     *************************************************************************/\n\n    /**\n     * @dev App registered event\n     */\n    event AppRegistered(ISuperApp indexed app);\n\n    /**\n     * @dev Jail event for the app\n     */\n    event Jail(ISuperApp indexed app, uint256 reason);\n\n    /**\n     * @dev Message sender declares it as a super app\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     */\n    function registerApp(uint256 configWord) external;\n\n    /**\n     * @dev Message sender declares it as a super app, using a registration key\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     * @param registrationKey The registration key issued by the governance\n     */\n    function registerAppWithKey(uint256 configWord, string calldata registrationKey) external;\n\n    /**\n     * @dev Message sender declares app as a super app\n     * @param configWord The super app manifest configuration, flags are defined in\n     *                   `SuperAppDefinitions`\n     * NOTE: only factory contracts authorized by governance can register super apps\n     */\n    function registerAppByFactory(ISuperApp app, uint256 configWord) external;\n\n    /**\n     * @dev Query if the app is registered\n     * @param app Super app address\n     */\n    function isApp(ISuperApp app) external view returns(bool);\n\n    /**\n     * @dev Query app level\n     * @param app Super app address\n     */\n    function getAppLevel(ISuperApp app) external view returns(uint8 appLevel);\n\n    /**\n     * @dev Get the manifest of the super app\n     * @param app Super app address\n     */\n    function getAppManifest(\n        ISuperApp app\n    )\n        external view\n        returns (\n            bool isSuperApp,\n            bool isJailed,\n            uint256 noopMask\n        );\n\n    /**\n     * @dev Query if the app has been jailed\n     * @param app Super app address\n     */\n    function isAppJailed(ISuperApp app) external view returns (bool isJail);\n\n    /**\n     * @dev White-list the target app for app composition for the source app (msg.sender)\n     * @param targetApp The taget super app address\n     */\n    function allowCompositeApp(ISuperApp targetApp) external;\n\n    /**\n     * @dev Query if source app  is allowed to call the target app as downstream app.\n     * @param app Super app address\n     * @param targetApp The taget super app address\n     */\n    function isCompositeAppAllowed(\n        ISuperApp app,\n        ISuperApp targetApp\n    )\n        external view\n        returns (bool isAppAllowed);\n\n    /**************************************************************************\n     * Agreement Framework\n     *\n     * Agreements use these function to trigger super app callbacks, updates\n     * app allowance and charge gas fees.\n     *\n     * These functions can only be called by registered agreements.\n     *************************************************************************/\n\n    function callAppBeforeCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // isAppActive(app)\n        returns(bytes memory cbdata);\n\n    function callAppAfterCallback(\n        ISuperApp app,\n        bytes calldata callData,\n        bool isTermination,\n        bytes calldata ctx\n    )\n        external\n        // onlyAgreement\n        // isAppActive(app)\n        returns(bytes memory appCtx);\n\n    function appCallbackPush(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 appAllowanceGranted,\n        int256 appAllowanceUsed,\n        ISuperfluidToken appAllowanceToken\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory appCtx);\n\n    function appCallbackPop(\n        bytes calldata ctx,\n        int256 appAllowanceUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    function ctxUseAllowance(\n        bytes calldata ctx,\n        uint256 appAllowanceWantedMore,\n        int256 appAllowanceUsedDelta\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    function jailApp(\n        bytes calldata ctx,\n        ISuperApp app,\n        uint256 reason\n    )\n        external\n        // onlyAgreement\n        returns (bytes memory newCtx);\n\n    /**************************************************************************\n     * Contextless Call Proxies\n     *\n     * NOTE: For EOAs or non-app contracts, they are the entry points for interacting\n     * with agreements or apps.\n     *\n     * NOTE: The contextual call data should be generated using\n     * abi.encodeWithSelector. The context parameter should be set to \"0x\",\n     * an empty bytes array as a placeholder to be replaced by the host\n     * contract.\n     *************************************************************************/\n\n     /**\n      * @dev Call agreement function\n      * @param callData The contextual call data with placeholder ctx\n      * @param userData Extra user data being sent to the super app callbacks\n      */\n     function callAgreement(\n         ISuperAgreement agreementClass,\n         bytes calldata callData,\n         bytes calldata userData\n     )\n        external\n        //cleanCtx\n        returns(bytes memory returnedData);\n\n    /**\n     * @dev Call app action\n     * @param callData The contextual call data.\n     *\n     * NOTE: See callAgreement about contextual call data.\n     */\n    function callAppAction(\n        ISuperApp app,\n        bytes calldata callData\n    )\n        external\n        //cleanCtx\n        //isAppActive(app)\n        returns(bytes memory returnedData);\n\n    /**************************************************************************\n     * Contextual Call Proxies and Context Utilities\n     *\n     * For apps, they must use context they receive to interact with\n     * agreements or apps.\n     *\n     * The context changes must be saved and returned by the apps in their\n     * callbacks always, any modification to the context will be detected and\n     * the violating app will be jailed.\n     *************************************************************************/\n\n    /**\n     * @dev ABIv2 Encoded memory data of context\n     *\n     * NOTE on backward compatibility:\n     * - Non-dynamic fields are padded to 32bytes and packed\n     * - Dynamic fields are referenced through a 32bytes offset to their \"parents\" field (or root)\n     * - The order of the fields hence should not be rearranged in order to be backward compatible:\n     *    - non-dynamic fields will be parsed at the same memory location,\n     *    - and dynamic fields will simply have a greater offset than it was.\n     */\n    struct Context {\n        //\n        // Call context\n        //\n        // callback level\n        uint8 appLevel;\n        // type of call\n        uint8 callType;\n        // the system timestsamp\n        uint256 timestamp;\n        // The intended message sender for the call\n        address msgSender;\n\n        //\n        // Callback context\n        //\n        // For callbacks it is used to know which agreement function selector is called\n        bytes4 agreementSelector;\n        // User provided data for app callbacks\n        bytes userData;\n\n        //\n        // App context\n        //\n        // app allowance granted\n        uint256 appAllowanceGranted;\n        // app allowance wanted by the app callback\n        uint256 appAllowanceWanted;\n        // app allowance used, allowing negative values over a callback session\n        int256 appAllowanceUsed;\n        // app address\n        address appAddress;\n        // app allowance in super token\n        ISuperfluidToken appAllowanceToken;\n    }\n\n    function callAgreementWithContext(\n        ISuperAgreement agreementClass,\n        bytes calldata callData,\n        bytes calldata userData,\n        bytes calldata ctx\n    )\n        external\n        // validCtx(ctx)\n        // onlyAgreement(agreementClass)\n        returns (bytes memory newCtx, bytes memory returnedData);\n\n    function callAppActionWithContext(\n        ISuperApp app,\n        bytes calldata callData,\n        bytes calldata ctx\n    )\n        external\n        // validCtx(ctx)\n        // isAppActive(app)\n        returns (bytes memory newCtx);\n\n    function decodeCtx(bytes calldata ctx)\n        external pure\n        returns (Context memory context);\n\n    function isCtxValid(bytes calldata ctx) external view returns (bool);\n\n    /**************************************************************************\n    * Batch call\n    **************************************************************************/\n    /**\n     * @dev Batch operation data\n     */\n    struct Operation {\n        // Operation. Defined in BatchOperation (Definitions.sol)\n        uint32 operationType;\n        // Operation target\n        address target;\n        // Data specific to the operation\n        bytes data;\n    }\n\n    /**\n     * @dev Batch call function\n     * @param operations Array of batch operations.\n     */\n    function batchCall(Operation[] memory operations) external;\n\n    /**\n     * @dev Batch call function for trusted forwarders (EIP-2771)\n     * @param operations Array of batch operations.\n     */\n    function forwardBatchCall(Operation[] memory operations) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * TODO: turning these off because solidity-coverage don't like it\n     *************************************************************************/\n\n     /* /// @dev The current superfluid context is clean.\n     modifier cleanCtx() virtual;\n\n     /// @dev The superfluid context is valid.\n     modifier validCtx(bytes memory ctx) virtual;\n\n     /// @dev The agreement is a listed agreement.\n     modifier isAgreement(ISuperAgreement agreementClass) virtual;\n\n     // onlyGovernance\n\n     /// @dev The msg.sender must be a listed agreement.\n     modifier onlyAgreement() virtual;\n\n     /// @dev The app is registered and not jailed.\n     modifier isAppActive(ISuperApp app) virtual; */\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "content": "//SPDX-License-Identifier: AGPLv3\npragma solidity >=0.7.0;\npragma experimental ABIEncoderV2;\n\nimport {\n    ISuperfluid,\n    ISuperfluidToken\n} from \"../interfaces/superfluid/ISuperfluid.sol\";\n\nimport {\n    IConstantFlowAgreementV1\n} from \"../interfaces/agreements/IConstantFlowAgreementV1.sol\";\n\nlibrary CFAv1Library {\n\n    struct InitData {\n        ISuperfluid host;\n        IConstantFlowAgreementV1 cfa;\n    }\n\n    //@dev for working with the constant flow agreement within solidity\n    //the first set of functions are each for callAgreement()\n    //the second set of functions are each for use in callAgreementWithContext()\n\n     //create flow without userData\n    function createFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //create flow with userData\n    function createFlow(\n        InitData storage cfaLibrary, \n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n    //update flow without userData\n    function updateFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //update flow with userData\n    function updateFlow(\n        InitData storage cfaLibrary,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n    //delete flow\n    function deleteFlow(\n        InitData storage cfaLibrary,\n        address sender,\n        address receiver,\n        ISuperfluidToken token\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            \"0x\" //empty user data\n        );\n    }\n    \n\n    //delete flow with userData \n    function deleteFlow(\n        InitData storage cfaLibrary,\n        address sender,\n        address receiver,\n        ISuperfluidToken token,\n        bytes memory userData\n    ) internal {\n        cfaLibrary.host.callAgreement(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            userData\n        );\n    }\n\n  //create flow with ctx \n    function createFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //create flow with ctx and userData\n    function createFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.createFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n\n  //update flow with ctx but without userData \n    function updateFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //update flow with ctx and userData\n    function updateFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address receiver,\n        ISuperfluidToken token,\n        int96 flowRate,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.updateFlow.selector,\n                token,\n                receiver,\n                flowRate,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n\n  //delete flow with ctx \n    function deleteFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address sender,\n        address receiver,\n        ISuperfluidToken token\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            \"0x\", //empty user data\n            ctx\n        );\n    }\n\n    //delete flow with ctx and userData \n    function deleteFlowWithCtx(\n        InitData storage cfaLibrary,\n        bytes memory ctx,\n        address sender,\n        address receiver,\n        ISuperfluidToken token,\n        bytes memory userData\n    ) internal returns (bytes memory newCtx) {\n        (newCtx, ) = cfaLibrary.host.callAgreementWithContext(\n            cfaLibrary.cfa,\n            abi.encodeWithSelector(\n                cfaLibrary.cfa.deleteFlow.selector,\n                token,\n                sender,\n                receiver,\n                new bytes(0) // placeholder\n            ),\n            userData,\n            ctx\n        );\n    }\n}"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"../superfluid/ISuperAgreement.sol\";\nimport { ISuperfluidToken } from \"../superfluid/ISuperfluidToken.sol\";\n\n\n/**\n * @dev Superfluid's constant flow agreement interface\n *\n * @author Superfluid\n */\nabstract contract IConstantFlowAgreementV1 is ISuperAgreement {\n\n    /// @dev ISuperAgreement.agreementType implementation\n    function agreementType() external override pure returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\");\n    }\n\n    /**\n     * @dev Get the maximum flow rate allowed with the deposit\n     * @param deposit Deposit amount used for creating the flow\n     */\n    function getMaximumFlowRateFromDeposit(\n        ISuperfluidToken token,\n        uint256 deposit)\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @dev Get the deposit required for creating the flow\n     * @param flowRate Flow rate to be tested\n     * \n     * NOTE: \n     * - if calculated deposit (flowRate * liquidationPeriod) is less\n     *   than the minimum deposit, we use the minimum deposit otherwise\n     *   we use the calculated deposit\n     */\n    function getDepositRequiredForFlowRate(\n        ISuperfluidToken token,\n        int96 flowRate)\n        external view virtual\n        returns (uint256 deposit);\n\n    /**\n     * @dev Create a flow betwen sender and receiver.\n     * @param token Super token address.\n     * @param receiver Flow receiver address.\n     * @param flowRate New flow rate in amount per second.\n     *\n     * # App callbacks\n     *\n     * - AgreementCreated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - A deposit is taken as safety margin for the solvency agents.\n     * - A extra gas fee may be taken to pay for solvency agent liquidations.\n     */\n    function createFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev Update the flow rate between sender and receiver.\n     * @param token Super token address.\n     * @param receiver Flow receiver address.\n     * @param flowRate New flow rate in amount per second.\n     *\n     * # App callbacks\n     *\n     * - AgreementUpdated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - Only the flow sender may update the flow rate.\n     * - Even if the flow rate is zero, the flow is not deleted\n     * from the system.\n     * - Deposit amount will be adjusted accordingly.\n     * - No new gas fee is charged.\n     */\n    function updateFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n\n    /**\n     * @dev Get the flow data between `sender` and `receiver`.\n     * @param token Super token address.\n     * @param sender Flow receiver.\n     * @param receiver Flow sender.\n     * @return timestamp Timestamp of when the flow is updated.\n     * @return flowRate The flow rate.\n     * @return deposit The amount of deposit the flow.\n     * @return owedDeposit The amount of owed deposit of the flow.\n     */\n    function getFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @dev Get flow data using agreement ID\n     * @param token Super token address.\n     * @param agreementId The agreement ID.\n     * @return timestamp Timestamp of when the flow is updated.\n     * @return flowRate The flow rate.\n     * @return deposit The amount of deposit the flow.\n     * @return owedDeposit The amount of owed deposit of the flow.\n     */\n    function getFlowByID(\n       ISuperfluidToken token,\n       bytes32 agreementId\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @dev Get the aggregated flow info of the account\n     * @param token Super token address.\n    * @param account Account for the query.\n    */\n    function getAccountFlowInfo(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /**\n     * @dev Get the net flow rate of the account\n     * @param token Super token address.\n     * @param account Account for the query.\n     * @return flowRate Flow rate.\n     */\n    function getNetFlow(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @dev Delete the flow between sender and receiver\n     * @param token Super token address.\n     * @param ctx Context bytes.\n     * @param receiver Flow receiver address.\n     *\n     * # App callbacks\n     *\n     * - AgreementTerminated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * NOTE:\n     * - Both flow sender and receiver may delete the flow.\n     * - If Sender account is insolvent or in critical state, a solvency agent may\n     *   also terminate the agreement.\n     * - Gas fee may be returned to the sender.\n     */\n    function deleteFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n     /**\n      * @dev Flow updated event.\n      * @param token Super token address.\n      * @param sender Flow sender address.\n      * @param receiver Flow recipient address.\n      * @param flowRate Flow rate in amount per second for this flow.\n      * @param flowRate Total flow rate in amount per second for the sender.\n      * @param flowRate Total flow rate in amount per second for the receiver.\n      * @param userData The user provided data.\n      */\n     event FlowUpdated(\n         ISuperfluidToken indexed token,\n         address indexed sender,\n         address indexed receiver,\n         int96 flowRate,\n         int256 totalSenderFlowRate,\n         int256 totalReceiverFlowRate,\n         bytes userData\n     );\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\nimport { ISuperToken } from \"./ISuperToken.sol\";\nimport { ISuperfluidToken  } from \"./ISuperfluidToken.sol\";\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\n\n\n/**\n * @dev Superfluid's Governance interface\n *\n * @author Superfluid\n */\ninterface ISuperfluidGovernance {\n\n    /**\n     * @dev Replace the current governance with a new governance\n     */\n    function replaceGovernance(\n        ISuperfluid host,\n        address newGov) external;\n\n    /**\n     * @dev Register a new agreement class\n     */\n    function registerAgreementClass(\n        ISuperfluid host,\n        address agreementClass) external;\n\n    /**\n     * @dev Update logics of the contracts\n     *\n     * NOTE:\n     * - Because they might have inter-dependencies, it is good to have one single function to update them all\n     */\n    function updateContracts(\n        ISuperfluid host,\n        address hostNewLogic,\n        address[] calldata agreementClassNewLogics,\n        address superTokenFactoryNewLogic\n    ) external;\n\n    /**\n     * @dev Update supertoken logic contract to the latest that is managed by the super token factory\n     */\n    function batchUpdateSuperTokenLogic(\n        ISuperfluid host,\n        ISuperToken[] calldata tokens) external;\n\n    /// @dev Get configuration as address value\n    function getConfigAsAddress(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (address value);\n\n    /// @dev Get configuration as uint256 value\n    function getConfigAsUint256(\n        ISuperfluid host,\n        ISuperfluidToken superToken,\n        bytes32 key) external view returns (uint256 value);\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperAgreement } from \"./ISuperAgreement.sol\";\n\n\n/**\n * @title Superfluid's token interface.\n *\n * @author Superfluid\n */\ninterface ISuperfluidToken {\n\n    /**************************************************************************\n     * Basic information\n     *************************************************************************/\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /**\n     * @dev Encoded liquidation type data mainly used for handling stack to deep errors\n     * \n     * Note:\n     * - version: 1 \n     * - liquidationType key:\n     *    - 0 = reward account receives reward (PIC period)\n     *    - 1 = liquidator account receives reward (Pleb period)\n     *    - 2 = liquidator account receives reward (Pirate period/bailout)\n     */\n    struct LiquidationTypeData {\n        uint256 version;\n        uint8 liquidationType;\n    }\n\n    /**************************************************************************\n     * Real-time balance functions\n     *************************************************************************/\n\n    /**\n    * @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n    * @param account for the query\n    * @param timestamp Time of balance\n    * @return availableBalance Real-time balance\n    * @return deposit Account deposit\n    * @return owedDeposit Account owed Deposit\n    */\n    function realtimeBalanceOf(\n       address account,\n       uint256 timestamp\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /// @dev realtimeBalanceOf with timestamp equals to block timestamp\n    function realtimeBalanceOfNow(\n       address account\n    )\n        external view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit,\n            uint256 timestamp);\n\n    /**\n    * @dev Check if one account is critical\n    * @param account Account check if is critical by a future time\n    * @param timestamp Time of balance\n    * @return isCritical\n    */\n    function isAccountCritical(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n    * @dev Check if one account is critical now\n    * @param account Account check if is critical by a future time\n    * @return isCritical\n    */\n    function isAccountCriticalNow(\n        address account\n    )\n        external view\n        returns(bool isCritical);\n\n    /**\n     * @dev Check if one account is solvent\n     * @param account Account check if is solvent by a future time\n     * @param timestamp Time of balance\n     * @return isSolvent\n     */\n    function isAccountSolvent(\n        address account,\n        uint256 timestamp\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n     * @dev Check if one account is solvent now\n     * @param account Account check if is solvent now\n     * @return isSolvent\n     */\n    function isAccountSolventNow(\n        address account\n    )\n        external view\n        returns(bool isSolvent);\n\n    /**\n    * @dev Get a list of agreements that is active for the account\n    * @dev An active agreement is one that has state for the account\n    * @param account Account to query\n    * @return activeAgreements List of accounts that have non-zero states for the account\n    */\n    function getAccountActiveAgreements(address account)\n       external view\n       returns(ISuperAgreement[] memory activeAgreements);\n\n\n   /**************************************************************************\n    * Super Agreement hosting functions\n    *************************************************************************/\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function createAgreement(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n\n    /**\n     * @dev Agreement creation event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementCreated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Get data of the agreement\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @return data Data of the agreement\n     */\n    function getAgreementData(\n        address agreementClass,\n        bytes32 id,\n        uint dataLength\n    )\n        external view\n        returns(bytes32[] memory data);\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function updateAgreementData(\n        bytes32 id,\n        bytes32[] calldata data\n    )\n        external;\n\n    /**\n     * @dev Agreement creation event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementUpdated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Close the agreement\n     * @param id Agreement ID\n     */\n    function terminateAgreement(\n        bytes32 id,\n        uint dataLength\n    )\n        external;\n\n    /**\n     * @dev Agreement termination event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     */\n    event AgreementTerminated(\n        address indexed agreementClass,\n        bytes32 id\n    );\n\n    /**\n     * @dev Update agreement state slot\n     * @param account Account to be updated\n     *\n     * NOTE\n     * - To clear the storage out, provide zero-ed array of intended length\n     */\n    function updateAgreementStateSlot(\n        address account,\n        uint256 slotId,\n        bytes32[] calldata slotData\n    )\n        external;\n\n    /**\n     * @dev Agreement account state updated event\n     * @param agreementClass Contract address of the agreement\n     * @param account Account updated\n     * @param slotId slot id of the agreement state\n     */\n    event AgreementStateUpdated(\n        address indexed agreementClass,\n        address indexed account,\n        uint256 slotId\n    );\n\n    /**\n     * @dev Get data of the slot of the state of a agreement\n     * @param agreementClass Contract address of the agreement\n     * @param account Account to query\n     * @param slotId slot id of the state\n     * @param dataLength length of the state data\n     */\n    function getAgreementStateSlot(\n        address agreementClass,\n        address account,\n        uint256 slotId,\n        uint dataLength\n    )\n        external view\n        returns (bytes32[] memory slotData);\n\n    /**\n     * @dev Settle balance from an account by the agreement.\n     *      The agreement needs to make sure that the balance delta is balanced afterwards\n     * @param account Account to query.\n     * @param delta Amount of balance delta to be settled\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function settleBalance(\n        address account,\n        int256 delta\n    )\n        external;\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAccount Account that collect the reward\n     * @param rewardAmount Amount of liquidation reward\n     */\n    event AgreementLiquidated(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed rewardAccount,\n        uint256 rewardAmount\n    );\n\n    /**\n     * @dev System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\n     * @param bailoutAccount Account that bailout the penalty account\n     * @param bailoutAmount Amount of account bailout\n     */\n    event Bailout(\n        address indexed bailoutAccount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Agreement liquidation event (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Account of the agent that performed the liquidation.\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param bondAccount Account that collect the reward or bailout accounts\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of liquidation bailouot\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if bailout is equal to 0, then\n     *   - the bondAccount will get the rewardAmount,\n     *   - the penaltyAccount will pay for the rewardAmount.\n     * - if bailout is larger than 0, then\n     *   - the liquidatorAccount will get the rewardAmouont,\n     *   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n     *   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\n     */\n    event AgreementLiquidatedBy(\n        address liquidatorAccount,\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed bondAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    );\n\n    /**\n     * @dev Make liquidation payouts\n     * @param id Agreement ID\n     * @param liquidator Address of the executer of liquidation\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of account bailout needed\n     *\n     * NOTE:\n     * Liquidation rules:\n     *  - If a bailout is required (bailoutAmount > 0)\n     *     - the actual reward goes to the liquidator,\n     *     - while the reward account becomes the bailout account\n     *     - total bailout include: bailout amount + reward amount\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function makeLiquidationPayouts\n    (\n        bytes32 id,\n        address liquidator,\n        address penaltyAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    )\n        external;\n\n    /**\n     * @dev Agreement liquidation event v2 (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param targetAccount Account of the stream sender\n     * @param rewardAccount Account that collects the reward or bails out insolvent accounts\n     * @param rewardAmount The amount the reward recipient account balance should change by\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     * @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if the agreement is liquidated during the PIC period\n     *   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n     *   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the targetAccount is insolvent\n     *   - the liquidatorAccount will get the rewardAmount (single deposit)\n     *   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n     *   - the targetAccount will receive the bailoutAmount\n     */\n    event AgreementLiquidatedV2(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed liquidatorAccount,\n        address indexed targetAccount,\n        address rewardAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta,\n        bytes liquidationTypeData\n    );\n\n    /**\n     * @dev Make liquidation payouts (v2)\n     * @param id Agreement ID\n     * @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n     * @param targetAccount Account of the stream sender\n     * @param rewardAmount The amount the reward recepient account will receive\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     *\n     * - If a bailout is required (bailoutAmount > 0)\n     *   - the actual reward (single deposit) goes to the executor,\n     *   - while the reward account becomes the bailout account\n     *   - total bailout include: bailout amount + reward amount\n     *   - the targetAccount will be bailed out\n     * - If a bailout is not required\n     *   - the targetAccount will pay the rewardAmount\n     *   - the liquidator (reward account in PIC period) will receive the rewardAmount\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function makeLiquidationPayoutsV2\n    (\n        bytes32 id,\n        bytes memory liquidationTypeData,\n        address liquidatorAccount,\n        bool useDefaultRewardAccount,\n        address targetAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta\n    ) external;\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * NOTE: solidity-coverage not supporting it\n     *************************************************************************/\n\n     /// @dev The msg.sender must be host contract\n     //modifier onlyHost() virtual;\n\n    /// @dev The msg.sender must be a listed agreement.\n    //modifier onlyAgreement() virtual;\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperfluid } from \"./ISuperfluid.sol\";\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\nimport { TokenInfo } from \"../tokens/TokenInfo.sol\";\nimport { IERC777 } from \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\n *\n * @author Superfluid\n */\ninterface ISuperToken is ISuperfluidToken, TokenInfo, IERC20, IERC777 {\n\n    /// @dev Initialize the contract\n    function initialize(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        string calldata n,\n        string calldata s\n    ) external;\n\n    /**************************************************************************\n    * TokenInfo & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view override(IERC777, TokenInfo) returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: SuperToken always uses 18 decimals.\n     *\n     * Note: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view override(TokenInfo) returns (uint8);\n\n    /**************************************************************************\n    * ERC20 & ERC777\n    *************************************************************************/\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() external view override(IERC777, IERC20) returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address account) external view override(IERC777, IERC20) returns(uint256 balance);\n\n    /**************************************************************************\n    * ERC20\n    *************************************************************************/\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external override(IERC20) view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external override(IERC20) returns (bool);\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n     function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\n\n    /**************************************************************************\n    * ERC777\n    *************************************************************************/\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For super token contracts, this value is 1 always\n     */\n    function granularity() external view override(IERC777) returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(address recipient, uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external override(IERC777);\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external override(IERC777) view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external override(IERC777);\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external override(IERC777) view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external override(IERC777);\n\n    /**************************************************************************\n     * SuperToken custom token functions\n     *************************************************************************/\n\n    /**\n     * @dev Mint new tokens for the account\n     *\n     * Modifiers:\n     *  - onlySelf\n     */\n    function selfMint(\n        address account,\n        uint256 amount,\n        bytes memory userData\n    ) external;\n\n   /**\n    * @dev Burn existing tokens for the account\n    *\n    * Modifiers:\n    *  - onlySelf\n    */\n   function selfBurn(\n       address account,\n       uint256 amount,\n       bytes memory userData\n   ) external;\n\n    /**************************************************************************\n     * SuperToken extra functions\n     *************************************************************************/\n\n    /**\n     * @dev Transfer all available balance from `msg.sender` to `recipient`\n     */\n    function transferAll(address recipient) external;\n\n    /**************************************************************************\n     * ERC20 wrapping\n     *************************************************************************/\n\n    /**\n     * @dev Return the underlying token contract\n     * @return tokenAddr Underlying token address\n     */\n    function getUnderlyingToken() external view returns(address tokenAddr);\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken.\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     *\n     * NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n     * function you should ´approve´ this contract\n     */\n    function upgrade(uint256 amount) external;\n\n    /**\n     * @dev Upgrade ERC20 to SuperToken and transfer immediately\n     * @param to The account to received upgraded tokens\n     * @param amount Number of tokens to be upgraded (in 18 decimals)\n     * @param data User data for the TokensRecipient callback\n     *\n     * NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n     * function you should ´approve´ this contract\n     */\n    function upgradeTo(address to, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Token upgrade event\n     * @param account Account where tokens are upgraded to\n     * @param amount Amount of tokens upgraded (in 18 decimals)\n     */\n    event TokenUpgraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**\n     * @dev Downgrade SuperToken to ERC20.\n     * @dev It will call transfer to send tokens\n     * @param amount Number of tokens to be downgraded\n     */\n    function downgrade(uint256 amount) external;\n\n    /**\n     * @dev Token downgrade event\n     * @param account Account whose tokens are upgraded\n     * @param amount Amount of tokens downgraded\n     */\n    event TokenDowngraded(\n        address indexed account,\n        uint256 amount\n    );\n\n    /**************************************************************************\n    * Batch Operations\n    *************************************************************************/\n\n    /**\n    * @dev Perform ERC20 approve by host contract.\n    * @param account The account owner to be approved.\n    * @param spender The spender of account owner's funds.\n    * @param amount Number of tokens to be approved.\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationApprove(\n        address account,\n        address spender,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Perform ERC20 transfer from by host contract.\n    * @param account The account to spend sender's funds.\n    * @param spender  The account where the funds is sent from.\n    * @param recipient The recipient of thefunds.\n    * @param amount Number of tokens to be transferred.\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationTransferFrom(\n        address account,\n        address spender,\n        address recipient,\n        uint256 amount\n    ) external;\n\n    /**\n    * @dev Upgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be upgraded (in 18 decimals)\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationUpgrade(address account, uint256 amount) external;\n\n    /**\n    * @dev Downgrade ERC20 to SuperToken by host contract.\n    * @param account The account to be changed.\n    * @param amount Number of tokens to be downgraded (in 18 decimals)\n    *\n    * Modifiers:\n    *  - onlyHost\n    */\n    function operationDowngrade(address account, uint256 amount) external;\n\n\n    /**************************************************************************\n    * Function modifiers for access control and parameter validations\n    *\n    * While they cannot be explicitly stated in function definitions, they are\n    * listed in function definition comments instead for clarity.\n    *\n    * NOTE: solidity-coverage not supporting it\n    *************************************************************************/\n\n    /// @dev The msg.sender must be the contract itself\n    //modifier onlySelf() virtual\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\nimport {\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../tokens/ERC20WithTokenInfo.sol\";\n\n\ninterface ISuperTokenFactory {\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns(address host);\n\n    /// @dev Initialize the contract\n    function initialize() external;\n\n    /**\n     * @dev Get the current super token logic used by the factory\n     */\n    function getSuperTokenLogic() external view returns (ISuperToken superToken);\n\n    /**\n     * @dev Upgradability modes\n     */\n    enum Upgradability {\n        /// Non upgradable super token, `host.updateSuperTokenLogic` will revert\n        NON_UPGRADABLE,\n        /// Upgradable through `host.updateSuperTokenLogic` operation\n        SEMI_UPGRADABLE,\n        /// Always using the latest super token logic\n        FULL_UPGRADABE\n    }\n\n    /**\n     * @dev Create new super token wrapper for the underlying ERC20 token\n     * @param underlyingToken Underlying ERC20 token\n     * @param underlyingDecimals Underlying token decimals\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     */\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    /**\n     * @dev Create new super token wrapper for the underlying ERC20 token with extra token info\n     * @param underlyingToken Underlying ERC20 token\n     * @param upgradability Upgradability mode\n     * @param name Super token name\n     * @param symbol Super token symbol\n     *\n     * NOTE:\n     * - It assumes token provide the .decimals() function\n     */\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external\n        returns (ISuperToken superToken);\n\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external;\n\n    event SuperTokenLogicCreated(ISuperToken indexed tokenLogic);\n\n    event SuperTokenCreated(ISuperToken indexed token);\n\n    event CustomSuperTokenCreated(ISuperToken indexed token);\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperfluidToken } from \"./ISuperfluidToken.sol\";\n\n/**\n * @title Superfluid's agreement interface.\n *\n * @author Superfluid\n */\ninterface ISuperAgreement {\n\n    /**\n     * @dev Initialize the agreement contract\n     */\n    function initialize() external;\n\n    /**\n     * @dev Get the type of the agreement class.\n     */\n    function agreementType() external view returns (bytes32);\n\n    /**\n     * @dev Calculate the real-time balance for the account of this agreement class.\n     * @param account Account the state belongs to\n     * @param time Future time used for the calculation.\n     * @return dynamicBalance Dynamic balance portion of real-time balance of this agreement.\n     * @return deposit Account deposit amount of this agreement.\n     * @return owedDeposit Account owed deposit amount of this agreement.\n     */\n    function realtimeBalanceOf(\n        ISuperfluidToken token,\n        address account,\n        uint256 time\n    )\n        external\n        view\n        returns (\n            int256 dynamicBalance,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\nimport { ISuperToken } from \"./ISuperToken.sol\";\n\n\n/**\n * @title Superfluid's app interface.\n *\n * NOTE:\n * - Be fearful of the app jail, when the word permitted is used.\n *\n * @author Superfluid\n */\ninterface ISuperApp {\n\n    /**\n     * @dev Callback before a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * NOTE:\n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n     * @dev Callback after a new agreement is created.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param cbdata The data returned from the before-hook callback.\n     * @param ctx The context data.\n     * @return newCtx The current context of the transaction.\n     *\n     * NOTE:\n     * - State changes is permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function afterAgreementCreated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n     * @dev Callback before a new agreement is updated.\n     * @param superToken The super token used for the agreement.\n     * @param agreementClass The agreement class address.\n     * @param agreementId The agreementId\n     * @param agreementData The agreement data (non-compressed)\n     * @param ctx The context data.\n     * @return cbdata A free format in memory data the app can use to pass\n     *          arbitary information to the after-hook callback.\n     *\n     * NOTE:\n     * - It will be invoked with `staticcall`, no state changes are permitted.\n     * - Only revert with a \"reason\" is permitted.\n     */\n    function beforeAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n\n    /**\n    * @dev Callback after a new agreement is updated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * NOTE:\n    * - State changes is permitted.\n    * - Only revert with a \"reason\" is permitted.\n    */\n    function afterAgreementUpdated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n\n    /**\n    * @dev Callback before a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param ctx The context data.\n    * @return cbdata A free format in memory data the app can use to pass\n    *          arbitary information to the after-hook callback.\n    *\n    * NOTE:\n    * - It will be invoked with `staticcall`, no state changes are permitted.\n    * - Revert is not permitted.\n    */\n    function beforeAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata ctx\n    )\n        external\n        view\n        returns (bytes memory cbdata);\n\n    /**\n    * @dev Callback after a new agreement is terminated.\n    * @param superToken The super token used for the agreement.\n    * @param agreementClass The agreement class address.\n    * @param agreementId The agreementId\n    * @param agreementData The agreement data (non-compressed)\n    * @param cbdata The data returned from the before-hook callback.\n    * @param ctx The context data.\n    * @return newCtx The current context of the transaction.\n    *\n    * NOTE:\n    * - State changes is permitted.\n    * - Revert is not permitted.\n    */\n    function afterAgreementTerminated(\n        ISuperToken superToken,\n        address agreementClass,\n        bytes32 agreementId,\n        bytes calldata agreementData,\n        bytes calldata cbdata,\n        bytes calldata ctx\n    )\n        external\n        returns (bytes memory newCtx);\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.7.0;\n\n/**\n * @dev Super app definitions library\n */\nlibrary SuperAppDefinitions {\n\n    /**************************************************************************\n    / App manifest config word\n    /**************************************************************************/\n\n    /*\n     * App level is a way to allow the app to whitelist what other app it can\n     * interact with (aka. composite app feature).\n     *\n     * For more details, refer to the technical paper of superfluid protocol.\n     */\n    uint256 constant internal APP_LEVEL_MASK = 0xFF;\n\n    // The app is at the final level, hence it doesn't want to interact with any other app\n    uint256 constant internal APP_LEVEL_FINAL = 1 << 0;\n\n    // The app is at the second level, it may interact with other final level apps if whitelisted\n    uint256 constant internal APP_LEVEL_SECOND = 1 << 1;\n\n    function getAppLevel(uint256 configWord) internal pure returns (uint8) {\n        return uint8(configWord & APP_LEVEL_MASK);\n    }\n\n    uint256 constant internal APP_JAIL_BIT = 1 << 15;\n    function isAppJailed(uint256 configWord) internal pure returns (bool) {\n        return (configWord & SuperAppDefinitions.APP_JAIL_BIT) > 0;\n    }\n\n    /**************************************************************************\n    / Callback implementation bit masks\n    /**************************************************************************/\n    uint256 constant internal AGREEMENT_CALLBACK_NOOP_BITMASKS = 0xFF << 32;\n    uint256 constant internal BEFORE_AGREEMENT_CREATED_NOOP = 1 << (32 + 0);\n    uint256 constant internal AFTER_AGREEMENT_CREATED_NOOP = 1 << (32 + 1);\n    uint256 constant internal BEFORE_AGREEMENT_UPDATED_NOOP = 1 << (32 + 2);\n    uint256 constant internal AFTER_AGREEMENT_UPDATED_NOOP = 1 << (32 + 3);\n    uint256 constant internal BEFORE_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 4);\n    uint256 constant internal AFTER_AGREEMENT_TERMINATED_NOOP = 1 << (32 + 5);\n\n    /**************************************************************************\n    / App Jail Reasons\n    /**************************************************************************/\n\n    uint256 constant internal APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR = 1;\n    uint256 constant internal APP_RULE_NO_REGISTRATION_FOR_EOA = 2;\n    uint256 constant internal APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK = 10;\n    uint256 constant internal APP_RULE_NO_CRITICAL_SENDER_ACCOUNT = 11;\n    uint256 constant internal APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT = 12;\n    uint256 constant internal APP_RULE_CTX_IS_READONLY = 20;\n    uint256 constant internal APP_RULE_CTX_IS_NOT_CLEAN = 21;\n    uint256 constant internal APP_RULE_CTX_IS_MALFORMATED = 22;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED = 30;\n    uint256 constant internal APP_RULE_COMPOSITE_APP_IS_JAILED = 31;\n    uint256 constant internal APP_RULE_MAX_APP_LEVEL_REACHED = 40;\n}\n\n/**\n * @dev Context definitions library\n */\nlibrary ContextDefinitions {\n\n    /**************************************************************************\n    / Call info\n    /**************************************************************************/\n\n    // app level\n    uint256 constant internal CALL_INFO_APP_LEVEL_MASK = 0xFF;\n\n    // call type\n    uint256 constant internal CALL_INFO_CALL_TYPE_SHIFT = 32;\n    uint256 constant internal CALL_INFO_CALL_TYPE_MASK = 0xF << CALL_INFO_CALL_TYPE_SHIFT;\n    uint8 constant internal CALL_INFO_CALL_TYPE_AGREEMENT = 1;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_ACTION = 2;\n    uint8 constant internal CALL_INFO_CALL_TYPE_APP_CALLBACK = 3;\n\n    function decodeCallInfo(uint256 callInfo)\n        internal pure\n        returns (uint8 appLevel, uint8 callType)\n    {\n        appLevel = uint8(callInfo & CALL_INFO_APP_LEVEL_MASK);\n        callType = uint8((callInfo & CALL_INFO_CALL_TYPE_MASK) >> CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n    function encodeCallInfo(uint8 appLevel, uint8 callType)\n        internal pure\n        returns (uint256 callInfo)\n    {\n        return uint256(appLevel) | (uint256(callType) << CALL_INFO_CALL_TYPE_SHIFT);\n    }\n\n}\n\n/**\n * @dev Batch operation library\n */\nlibrary BatchOperation {\n    /**\n     * @dev ERC20.approve batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationApprove(\n     *     abi.decode(data, (address spender, uint256 amount))\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_APPROVE = 1;\n    /**\n     * @dev ERC20.transferFrom batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationTransferFrom(\n     *     abi.decode(data, (address sender, address recipient, uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_ERC20_TRANSFER_FROM = 2;\n    /**\n     * @dev SuperToken.upgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationUpgrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_UPGRADE = 1 + 100;\n    /**\n     * @dev SuperToken.downgrade batch operation type\n     *\n     * Call spec:\n     * ISuperToken(target).operationDowngrade(\n     *     abi.decode(data, (uint256 amount)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERTOKEN_DOWNGRADE = 2 + 100;\n    /**\n     * @dev Superfluid.callAgreement batch operation type\n     *\n     * Call spec:\n     * callAgreement(\n     *     ISuperAgreement(target)),\n     *     abi.decode(data, (bytes calldata, bytes userdata)\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT = 1 + 200;\n    /**\n     * @dev Superfluid.callAppAction batch operation type\n     *\n     * Call spec:\n     * callAppAction(\n     *     ISuperApp(target)),\n     *     data\n     * )\n     */\n    uint32 constant internal OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION = 2 + 200;\n}\n\nlibrary SuperfluidGovernanceConfigs {\n\n    bytes32 constant internal SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.superfluid.rewardAddress\");\n\n    bytes32 constant internal CFAv1_LIQUIDATION_PERIOD_CONFIG_KEY =\n        keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\");\n\n    bytes32 constant internal SUPERTOKEN_MINIMUM_DEPOSIT_KEY = \n        keccak256(\"org.superfluid-finance.superfluid.superTokenMinimumDeposit\");\n\n    function getTrustedForwarderConfigKey(address forwarder) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.trustedForwarder\",\n            forwarder));\n    }\n\n    function getAppRegistrationConfigKey(address deployer, string memory registrationKey) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\",\n            deployer,\n            registrationKey));\n    }\n\n    function getAppFactoryConfigKey(address factory) internal pure returns (bytes32) {\n        return keccak256(abi.encode(\n            \"org.superfluid-finance.superfluid.appWhiteListing.factory\",\n            factory));\n    }\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.5.0;\n\n/**\n * @dev ERC20 token info interface\n *\n * NOTE: ERC20 standard interface does not specify these functions, but\n * often the token implementations have them.\n *\n */\ninterface TokenInfo {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "content": "// SPDX-License-Identifier: AGPLv3\npragma solidity >= 0.5.0;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { TokenInfo } from \"./TokenInfo.sol\";\n\n\n/**\n *\n * @dev Interface for ERC20 token with token info\n *\n * NOTE: Using abstract contract instead of interfaces because old solidity\n * does not support interface inheriting other interfaces\n * solhint-disable-next-line no-empty-blocks\n *\n */\n// solhint-disable-next-line no-empty-blocks\nabstract contract ERC20WithTokenInfo is IERC20, TokenInfo {}\n"
      },
      "contracts/ControllerFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0;\r\n\r\nimport { Controller } from './Controller.sol';\r\n\r\ncontract ControllerFactory {\r\n\r\n    \r\n    mapping(address => address) controllers;\r\n\r\n    event newController(address indexed owner, address controller);\r\n\r\n    function deployController() public {\r\n\r\n        require(controllers[msg.sender] == address(0x0), \"You already own a controller\");\r\n\r\n        Controller controller = new Controller(msg.sender);\r\n\r\n        controllers[msg.sender] = address(controller);\r\n\r\n        emit newController(msg.sender, address(controller));\r\n    }\r\n\r\n    function getController() external view returns(address controller) {\r\n        return controllers[msg.sender];\r\n    }\r\n\r\n    function deactivateController() public {\r\n        require(controllers[msg.sender] != address(0x0), \"You don't own a controller\");\r\n        controllers[msg.sender] = address(0x0);\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "IERC777": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "AuthorizedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Burned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "RevokedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Sent",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "authorizeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultOperators",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "granularity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "isOperatorFor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorSend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "revokeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "send",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "authorizeOperator(address)": "959b8c3f",
              "balanceOf(address)": "70a08231",
              "burn(uint256,bytes)": "fe9d9303",
              "defaultOperators()": "06e48538",
              "granularity()": "556f0dc7",
              "isOperatorFor(address,address)": "d95b6371",
              "name()": "06fdde03",
              "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
              "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
              "revokeOperator(address)": "fad8b32a",
              "send(address,uint256,bytes)": "9bd9bbc6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "CFAv1Library": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806f2298a50e997082caa10dc49a510cbc56531ac5cfbf9a232c5a9bea290b6764736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH16 0x2298A50E997082CAA10DC49A510CBC56 MSTORE8 BYTE 0xC5 0xCF 0xBF SWAP11 0x23 0x2C GAS SWAP12 0xEA 0x29 SIGNEXTEND PUSH8 0x64736F6C63430008 STOP STOP CALLER ",
              "sourceMap": "296:7497:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220806f2298a50e997082caa10dc49a510cbc56531ac5cfbf9a232c5a9bea290b6764736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH16 0x2298A50E997082CAA10DC49A510CBC56 MSTORE8 BYTE 0xC5 0xCF 0xBF SWAP11 0x23 0x2C GAS SWAP12 0xEA 0x29 SIGNEXTEND PUSH8 0x64736F6C63430008 STOP STOP CALLER ",
              "sourceMap": "296:7497:2:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":\"CFAv1Library\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "IConstantFlowAgreementV1": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "totalSenderFlowRate",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "totalReceiverFlowRate",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "FlowUpdated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "agreementType",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "createFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "deleteFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountFlowInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "name": "getDepositRequiredForFlowRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "getFlow",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                }
              ],
              "name": "getFlowByID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                }
              ],
              "name": "getMaximumFlowRateFromDeposit",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getNetFlow",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "dynamicBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "updateFlow",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "agreementType()": "7730599e",
              "createFlow(address,address,int96,bytes)": "62fc305e",
              "deleteFlow(address,address,address,bytes)": "b4b333c6",
              "getAccountFlowInfo(address,address)": "0f1ac495",
              "getDepositRequiredForFlowRate(address,int96)": "8d997f6e",
              "getFlow(address,address,address)": "e6a1e888",
              "getFlowByID(address,bytes32)": "aabd2668",
              "getMaximumFlowRateFromDeposit(address,uint256)": "0602f7db",
              "getNetFlow(address,address)": "e8e7e2d1",
              "initialize()": "8129fc1c",
              "realtimeBalanceOf(address,address,uint256)": "9b2e48bc",
              "updateFlow(address,address,int96,bytes)": "50209a62"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalSenderFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalReceiverFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"FlowUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"name\":\"getDepositRequiredForFlowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"}],\"name\":\"getFlowByID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getMaximumFlowRateFromDeposit\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNetFlow\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid's constant flow agreement interface\",\"events\":{\"FlowUpdated(address,address,address,int96,int256,int256,bytes)\":{\"details\":\"Flow updated event.\",\"params\":{\"flowRate\":\"Total flow rate in amount per second for the receiver.\",\"receiver\":\"Flow recipient address.\",\"sender\":\"Flow sender address.\",\"token\":\"Super token address.\",\"userData\":\"The user provided data.\"}}},\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"ISuperAgreement.agreementType implementation\"},\"createFlow(address,address,int96,bytes)\":{\"details\":\"Create a flow betwen sender and receiver.\",\"params\":{\"flowRate\":\"New flow rate in amount per second. # App callbacks - AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - A deposit is taken as safety margin for the solvency agents. - A extra gas fee may be taken to pay for solvency agent liquidations.\",\"receiver\":\"Flow receiver address.\",\"token\":\"Super token address.\"}},\"deleteFlow(address,address,address,bytes)\":{\"details\":\"Delete the flow between sender and receiver\",\"params\":{\"ctx\":\"Context bytes.\",\"receiver\":\"Flow receiver address. # App callbacks - AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - Both flow sender and receiver may delete the flow. - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement. - Gas fee may be returned to the sender.\",\"token\":\"Super token address.\"}},\"getAccountFlowInfo(address,address)\":{\"details\":\"Get the aggregated flow info of the account\",\"params\":{\"account\":\"Account for the query.\",\"token\":\"Super token address.\"}},\"getDepositRequiredForFlowRate(address,int96)\":{\"details\":\"Get the deposit required for creating the flow\",\"params\":{\"flowRate\":\"Flow rate to be tested  NOTE:  - if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit\"}},\"getFlow(address,address,address)\":{\"details\":\"Get the flow data between `sender` and `receiver`.\",\"params\":{\"receiver\":\"Flow sender.\",\"sender\":\"Flow receiver.\",\"token\":\"Super token address.\"},\"returns\":{\"deposit\":\"The amount of deposit the flow.\",\"flowRate\":\"The flow rate.\",\"owedDeposit\":\"The amount of owed deposit of the flow.\",\"timestamp\":\"Timestamp of when the flow is updated.\"}},\"getFlowByID(address,bytes32)\":{\"details\":\"Get flow data using agreement ID\",\"params\":{\"agreementId\":\"The agreement ID.\",\"token\":\"Super token address.\"},\"returns\":{\"deposit\":\"The amount of deposit the flow.\",\"flowRate\":\"The flow rate.\",\"owedDeposit\":\"The amount of owed deposit of the flow.\",\"timestamp\":\"Timestamp of when the flow is updated.\"}},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"details\":\"Get the maximum flow rate allowed with the deposit\",\"params\":{\"deposit\":\"Deposit amount used for creating the flow\"}},\"getNetFlow(address,address)\":{\"details\":\"Get the net flow rate of the account\",\"params\":{\"account\":\"Account for the query.\",\"token\":\"Super token address.\"},\"returns\":{\"flowRate\":\"Flow rate.\"}},\"initialize()\":{\"details\":\"Initialize the agreement contract\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class.\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Future time used for the calculation.\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement.\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement.\",\"owedDeposit\":\"Account owed deposit amount of this agreement.\"}},\"updateFlow(address,address,int96,bytes)\":{\"details\":\"Update the flow rate between sender and receiver.\",\"params\":{\"flowRate\":\"New flow rate in amount per second. # App callbacks - AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver) NOTE: - Only the flow sender may update the flow rate. - Even if the flow rate is zero, the flow is not deleted from the system. - Deposit amount will be adjusted accordingly. - No new gas fee is charged.\",\"receiver\":\"Flow receiver address.\",\"token\":\"Super token address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":\"IConstantFlowAgreementV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "BatchOperation": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cac75ed5e89ae012b7b0688e06283ff0df8a26e66deb6ceb75d5fdc572ed2f1264736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0x5E 0xD5 0xE8 SWAP11 0xE0 SLT 0xB7 0xB0 PUSH9 0x8E06283FF0DF8A26E6 PUSH14 0xEB6CEB75D5FDC572ED2F1264736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "4204:1701:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cac75ed5e89ae012b7b0688e06283ff0df8a26e66deb6ceb75d5fdc572ed2f1264736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xC7 0x5E 0xD5 0xE8 SWAP11 0xE0 SLT 0xB7 0xB0 PUSH9 0x8E06283FF0DF8A26E6 PUSH14 0xEB6CEB75D5FDC572ED2F1264736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "4204:1701:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Batch operation library\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"OPERATION_TYPE_ERC20_APPROVE\":{\"details\":\"ERC20.approve batch operation type Call spec: ISuperToken(target).operationApprove(     abi.decode(data, (address spender, uint256 amount)) )\"},\"OPERATION_TYPE_ERC20_TRANSFER_FROM\":{\"details\":\"ERC20.transferFrom batch operation type Call spec: ISuperToken(target).operationTransferFrom(     abi.decode(data, (address sender, address recipient, uint256 amount) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT\":{\"details\":\"Superfluid.callAgreement batch operation type Call spec: callAgreement(     ISuperAgreement(target)),     abi.decode(data, (bytes calldata, bytes userdata) )\"},\"OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION\":{\"details\":\"Superfluid.callAppAction batch operation type Call spec: callAppAction(     ISuperApp(target)),     data )\"},\"OPERATION_TYPE_SUPERTOKEN_DOWNGRADE\":{\"details\":\"SuperToken.downgrade batch operation type Call spec: ISuperToken(target).operationDowngrade(     abi.decode(data, (uint256 amount) )\"},\"OPERATION_TYPE_SUPERTOKEN_UPGRADE\":{\"details\":\"SuperToken.upgrade batch operation type Call spec: ISuperToken(target).operationUpgrade(     abi.decode(data, (uint256 amount) )\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"BatchOperation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "ContextDefinitions": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c644bf29ca15905ba342bb2af956b26a8d1bc414810191c1d3185675861a39b964736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIFFICULTY 0xBF 0x29 0xCA ISZERO SWAP1 JUMPDEST LOG3 TIMESTAMP 0xBB 0x2A 0xF9 JUMP 0xB2 PUSH11 0x8D1BC414810191C1D31856 PUSH22 0x861A39B964736F6C6343000800003300000000000000 ",
              "sourceMap": "3006:1156:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c644bf29ca15905ba342bb2af956b26a8d1bc414810191c1d3185675861a39b964736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 DIFFICULTY 0xBF 0x29 0xCA ISZERO SWAP1 JUMPDEST LOG3 TIMESTAMP 0xBB 0x2A 0xF9 JUMP 0xB2 PUSH11 0x8D1BC414810191C1D31856 PUSH22 0x861A39B964736F6C6343000800003300000000000000 ",
              "sourceMap": "3006:1156:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Context definitions library\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"ContextDefinitions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "SuperAppDefinitions": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b420f502b708fb818243141715c576a98035b8b914fde003c717aebcad76048a64736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 KECCAK256 CREATE2 MUL 0xB7 ADDMOD 0xFB DUP2 DUP3 NUMBER EQ OR ISZERO 0xC5 PUSH23 0xA98035B8B914FDE003C717AEBCAD76048A64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "108:2852:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b420f502b708fb818243141715c576a98035b8b914fde003c717aebcad76048a64736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 KECCAK256 CREATE2 MUL 0xB7 ADDMOD 0xFB DUP2 DUP3 NUMBER EQ OR ISZERO 0xC5 PUSH23 0xA98035B8B914FDE003C717AEBCAD76048A64736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "108:2852:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Super app definitions library\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperAppDefinitions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        },
        "SuperfluidGovernanceConfigs": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b7283b9d24eaad03264efc958cf3d1866a09e64158dc7c4001833f1ac07dd0264736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x83B9D24EAAD03264EFC958CF3D1866A09E6415 DUP14 0xC7 0xC4 STOP XOR CALLER CALL 0xAC SMOD 0xDD MUL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "5907:1252:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b7283b9d24eaad03264efc958cf3d1866a09e64158dc7c4001833f1ac07dd0264736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x83B9D24EAAD03264EFC958CF3D1866A09E6415 DUP14 0xC7 0xC4 STOP XOR CALLER CALL 0xAC SMOD 0xDD MUL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "5907:1252:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":\"SuperfluidGovernanceConfigs\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "ISuperAgreement": {
          "abi": [
            {
              "inputs": [],
              "name": "agreementType",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "time",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "dynamicBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "agreementType()": "7730599e",
              "initialize()": "8129fc1c",
              "realtimeBalanceOf(address,address,uint256)": "9b2e48bc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class.\"},\"initialize()\":{\"details\":\"Initialize the agreement contract\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class.\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Future time used for the calculation.\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement.\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement.\",\"owedDeposit\":\"Account owed deposit amount of this agreement.\"}}},\"title\":\"Superfluid's agreement interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":\"ISuperAgreement\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "ISuperApp": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementCreated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementTerminated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "afterAgreementUpdated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementCreated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementTerminated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "agreementData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "beforeAgreementUpdated",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)": "d86ed3e5",
              "afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)": "53c11f99",
              "afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)": "230dbd29",
              "beforeAgreementCreated(address,address,bytes32,bytes,bytes)": "30d9c915",
              "beforeAgreementTerminated(address,address,bytes32,bytes,bytes)": "5f9e7d77",
              "beforeAgreementUpdated(address,address,bytes32,bytes,bytes)": "884d1f40"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"afterAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementCreated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementTerminated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"agreementData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"beforeAgreementUpdated\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{\"afterAgreementCreated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"afterAgreementTerminated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Revert is not permitted.\"}},\"afterAgreementUpdated(address,address,bytes32,bytes,bytes,bytes)\":{\"details\":\"Callback after a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"cbdata\":\"The data returned from the before-hook callback.\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"newCtx\":\"The current context of the transaction. NOTE: - State changes is permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"beforeAgreementCreated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is created.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\"}},\"beforeAgreementTerminated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is terminated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Revert is not permitted.\"}},\"beforeAgreementUpdated(address,address,bytes32,bytes,bytes)\":{\"details\":\"Callback before a new agreement is updated.\",\"params\":{\"agreementClass\":\"The agreement class address.\",\"agreementData\":\"The agreement data (non-compressed)\",\"agreementId\":\"The agreementId\",\"ctx\":\"The context data.\",\"superToken\":\"The super token used for the agreement.\"},\"returns\":{\"cbdata\":\"A free format in memory data the app can use to pass          arbitary information to the after-hook callback. NOTE: - It will be invoked with `staticcall`, no state changes are permitted. - Only revert with a \\\"reason\\\" is permitted.\"}}},\"title\":\"Superfluid's app interface. NOTE: - Be fearful of the app jail, when the word permitted is used.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":\"ISuperApp\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "ISuperToken": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bondAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidatedBy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                }
              ],
              "name": "AgreementLiquidatedV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                }
              ],
              "name": "AgreementStateUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "AgreementTerminated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "AuthorizedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bailoutAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "Bailout",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Burned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Minted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "RevokedOperator",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "Sent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenDowngraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "authorizeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "createAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "defaultOperators",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "downgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountActiveAgreements",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "activeAgreements",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementData",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementStateSlot",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getUnderlyingToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddr",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "granularity",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "underlyingDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "n",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "s",
                  "type": "string"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountCritical",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountCriticalNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountSolvent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountSolventNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenHolder",
                  "type": "address"
                }
              ],
              "name": "isOperatorFor",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "liquidator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "makeLiquidationPayouts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "useDefaultRewardAccount",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                }
              ],
              "name": "makeLiquidationPayoutsV2",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationApprove",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationDowngrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "operationUpgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "operatorData",
                  "type": "bytes"
                }
              ],
              "name": "operatorSend",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "realtimeBalanceOfNow",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "revokeOperator",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "selfBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "selfMint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "send",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "settleBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "terminateAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "transferAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementData",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementStateSlot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "upgrade",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "authorizeOperator(address)": "959b8c3f",
              "balanceOf(address)": "70a08231",
              "burn(uint256,bytes)": "fe9d9303",
              "createAgreement(bytes32,bytes32[])": "12a6a3f8",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "defaultOperators()": "06e48538",
              "downgrade(uint256)": "11bcc81e",
              "getAccountActiveAgreements(address)": "386fa221",
              "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
              "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
              "getHost()": "20bc4425",
              "getUnderlyingToken()": "ee719bc8",
              "granularity()": "556f0dc7",
              "increaseAllowance(address,uint256)": "39509351",
              "initialize(address,uint8,string,string)": "42fe0980",
              "isAccountCritical(address,uint256)": "d9d078d6",
              "isAccountCriticalNow(address)": "79359f6f",
              "isAccountSolvent(address,uint256)": "b84cdd4a",
              "isAccountSolventNow(address)": "bb0d196e",
              "isOperatorFor(address,address)": "d95b6371",
              "makeLiquidationPayouts(bytes32,address,address,uint256,uint256)": "8ddd1c0f",
              "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
              "name()": "06fdde03",
              "operationApprove(address,address,uint256)": "62aa5287",
              "operationDowngrade(address,uint256)": "245887fc",
              "operationTransferFrom(address,address,address,uint256)": "16d055d6",
              "operationUpgrade(address,uint256)": "ca789464",
              "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
              "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
              "realtimeBalanceOf(address,uint256)": "eb3537cc",
              "realtimeBalanceOfNow(address)": "2ec8eec7",
              "revokeOperator(address)": "fad8b32a",
              "selfBurn(address,uint256,bytes)": "9d876741",
              "selfMint(address,uint256,bytes)": "c68d4283",
              "send(address,uint256,bytes)": "9bd9bbc6",
              "settleBalance(address,int256)": "cf97256d",
              "symbol()": "95d89b41",
              "terminateAgreement(bytes32,uint256)": "27048397",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferAll(address)": "a3a7e7f3",
              "transferFrom(address,address,uint256)": "23b872dd",
              "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
              "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
              "upgrade(uint256)": "45977d03",
              "upgradeTo(address,uint256,bytes)": "5b9d09cc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"makeLiquidationPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are upgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: SuperToken always uses 18 decimals. Note: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"Get a list of agreements that is active for the accountAn active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of a agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For super token contracts, this value is 1 always\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"Check if one account is critical\",\"params\":{\"account\":\"Account check if is critical by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"Check if one account is critical now\",\"params\":{\"account\":\"Account check if is critical by a future time\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"Check if one account is solvent\",\"params\":{\"account\":\"Account check if is solvent by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isAccountSolventNow(address)\":{\"details\":\"Check if one account is solvent now\",\"params\":{\"account\":\"Account check if is solvent now\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayouts(bytes32,address,address,uint256,uint256)\":{\"details\":\"Make liquidation payouts\",\"params\":{\"bailoutAmount\":\"Amount of account bailout needed NOTE: Liquidation rules:  - If a bailout is required (bailoutAmount > 0)     - the actual reward goes to the liquidator,     - while the reward account becomes the bailout account     - total bailout include: bailout amount + reward amount Modifiers:  - onlyAgreement\",\"id\":\"Agreement ID\",\"liquidator\":\"Address of the executer of liquidation\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recepient account will receive\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount Modifiers:  - onlyAgreement\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved. Modifiers:  - onlyHost\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals) Modifiers:  - onlyHost\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transfer from by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred. Modifiers:  - onlyHost\",\"recipient\":\"The recipient of thefunds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals) Modifiers:  - onlyHost\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account Modifiers:  - onlySelf\"},\"selfMint(address,uint256,bytes)\":{\"details\":\"Mint new tokens for the account Modifiers:  - onlySelf\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"settleBalance(address,int256)\":{\"details\":\"Settle balance from an account by the agreement.      The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled Modifiers:  - onlyAgreement\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated NOTE - To clear the storage out, provide zero-ed array of intended length\"}},\"upgrade(uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals) NOTE: It will use \\u00b4transferFrom\\u00b4 to get tokens. Before calling this function you should \\u00b4approve\\u00b4 this contract\"}},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"data\":\"User data for the TokensRecipient callback NOTE: It will use \\u00b4transferFrom\\u00b4 to get tokens. Before calling this function you should \\u00b4approve\\u00b4 this contract\",\"to\":\"The account to received upgraded tokens\"}}},\"title\":\"Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "ISuperTokenFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "CustomSuperTokenCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SuperTokenCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "tokenLogic",
                  "type": "address"
                }
              ],
              "name": "SuperTokenLogicCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ERC20WithTokenInfo",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "enum ISuperTokenFactory.Upgradability",
                  "name": "upgradability",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "name": "createERC20Wrapper",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "underlyingDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "enum ISuperTokenFactory.Upgradability",
                  "name": "upgradability",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "name": "createERC20Wrapper",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenLogic",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "superToken",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "customSuperTokenProxy",
                  "type": "address"
                }
              ],
              "name": "initializeCustomSuperToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createERC20Wrapper(address,uint8,string,string)": "431f1481",
              "createERC20Wrapper(address,uint8,uint8,string,string)": "a6d0c534",
              "getHost()": "20bc4425",
              "getSuperTokenLogic()": "9470a5b2",
              "initialize()": "8129fc1c",
              "initializeCustomSuperToken(address)": "d412d344"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createERC20Wrapper(address,uint8,string,string)\":{\"details\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\",\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol NOTE: - It assumes token provide the .decimals() function\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"details\":\"Create new super token wrapper for the underlying ERC20 token\",\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getSuperTokenLogic()\":{\"details\":\"Get the current super token logic used by the factory\"},\"initialize()\":{\"details\":\"Initialize the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":\"ISuperTokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "ISuperfluid": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "AgreementClassRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "AgreementClassUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "AppRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "oldGov",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "GovernanceReplaced",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reason",
                  "type": "uint256"
                }
              ],
              "name": "Jail",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "contract ISuperTokenFactory",
                  "name": "newFactory",
                  "type": "address"
                }
              ],
              "name": "SuperTokenFactoryUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "SuperTokenLogicUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "addToAgreementClassesBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "newBitmap",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "targetApp",
                  "type": "address"
                }
              ],
              "name": "allowCompositeApp",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsedDelta",
                  "type": "int256"
                }
              ],
              "name": "appCallbackPop",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "appAllowanceGranted",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsed",
                  "type": "int256"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "appAllowanceToken",
                  "type": "address"
                }
              ],
              "name": "appCallbackPush",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "appCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operationType",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Operation[]",
                  "name": "operations",
                  "type": "tuple[]"
                }
              ],
              "name": "batchCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "name": "callAgreement",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAgreementWithContext",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ],
              "name": "callAppAction",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "returnedData",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppActionWithContext",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isTermination",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppAfterCallback",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "appCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isTermination",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "callAppBeforeCallback",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "cbdata",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "appAllowanceWantedMore",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "appAllowanceUsedDelta",
                  "type": "int256"
                }
              ],
              "name": "ctxUseAllowance",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "decodeCtx",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "appLevel",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "callType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "msgSender",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes4",
                      "name": "agreementSelector",
                      "type": "bytes4"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "appAllowanceGranted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "appAllowanceWanted",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "appAllowanceUsed",
                      "type": "int256"
                    },
                    {
                      "internalType": "address",
                      "name": "appAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "contract ISuperfluidToken",
                      "name": "appAllowanceToken",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Context",
                  "name": "context",
                  "type": "tuple"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "operationType",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ISuperfluid.Operation[]",
                  "name": "operations",
                  "type": "tuple[]"
                }
              ],
              "name": "forwardBatchCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "getAgreementClass",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "getAppLevel",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "appLevel",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "getAppManifest",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSuperApp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isJailed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "noopMask",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGovernance",
              "outputs": [
                {
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "governance",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenFactory",
              "outputs": [
                {
                  "internalType": "contract ISuperTokenFactory",
                  "name": "factory",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSuperTokenFactoryLogic",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "logic",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "name": "isAgreementClassListed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "yes",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "isAgreementTypeListed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "yes",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "isApp",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                }
              ],
              "name": "isAppJailed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isJail",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "targetApp",
                  "type": "address"
                }
              ],
              "name": "isCompositeAppAllowed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isAppAllowed",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                }
              ],
              "name": "isCtxValid",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "ctx",
                  "type": "bytes"
                },
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "reason",
                  "type": "uint256"
                }
              ],
              "name": "jailApp",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "newCtx",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                }
              ],
              "name": "mapAgreementClasses",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "agreementClasses",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClassLogic",
                  "type": "address"
                }
              ],
              "name": "registerAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                }
              ],
              "name": "registerApp",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperApp",
                  "name": "app",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                }
              ],
              "name": "registerAppByFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "configWord",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "registrationKey",
                  "type": "string"
                }
              ],
              "name": "registerAppWithKey",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "bitmap",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "agreementType",
                  "type": "bytes32"
                }
              ],
              "name": "removeFromAgreementClassesBitmap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "newBitmap",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluidGovernance",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "replaceGovernance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperAgreement",
                  "name": "agreementClassLogic",
                  "type": "address"
                }
              ],
              "name": "updateAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperTokenFactory",
                  "name": "newFactory",
                  "type": "address"
                }
              ],
              "name": "updateSuperTokenFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "updateSuperTokenLogic",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addToAgreementClassesBitmap(uint256,bytes32)": "bced3ddc",
              "allowCompositeApp(address)": "57121e0c",
              "appCallbackPop(bytes,int256)": "989b0c3e",
              "appCallbackPush(bytes,address,uint256,int256,address)": "768fabb0",
              "batchCall((uint32,address,bytes)[])": "6ad3ca7d",
              "callAgreement(address,bytes,bytes)": "39255d5b",
              "callAgreementWithContext(address,bytes,bytes,bytes)": "4329d293",
              "callAppAction(address,bytes)": "1e855cf3",
              "callAppActionWithContext(address,bytes,bytes)": "ba48b5f8",
              "callAppAfterCallback(address,bytes,bool,bytes)": "1e6d0a84",
              "callAppBeforeCallback(address,bytes,bool,bytes)": "74041e02",
              "ctxUseAllowance(bytes,uint256,int256)": "0792f20a",
              "decodeCtx(bytes)": "3f6c923a",
              "forwardBatchCall((uint32,address,bytes)[])": "670e77e3",
              "getAgreementClass(bytes32)": "b6d200de",
              "getAppLevel(address)": "13349046",
              "getAppManifest(address)": "f9f522f4",
              "getGovernance()": "289b3c0d",
              "getSuperTokenFactory()": "731aed6e",
              "getSuperTokenFactoryLogic()": "f2e55caf",
              "isAgreementClassListed(address)": "8ca48484",
              "isAgreementTypeListed(bytes32)": "e8dccb7d",
              "isApp(address)": "3ca3ad4e",
              "isAppJailed(address)": "6b4f3335",
              "isCompositeAppAllowed(address,address)": "bb84cfa1",
              "isCtxValid(bytes)": "bf428734",
              "jailApp(bytes,address,uint256)": "b724211e",
              "mapAgreementClasses(uint256)": "c56a069d",
              "registerAgreementClass(address)": "15a024e1",
              "registerApp(uint256)": "ad3915c8",
              "registerAppByFactory(address,uint256)": "f3733052",
              "registerAppWithKey(uint256,string)": "bd1c448b",
              "removeFromAgreementClassesBitmap(uint256,bytes32)": "a5dbbbcd",
              "replaceGovernance(address)": "7283100c",
              "updateAgreementClass(address)": "06cecba8",
              "updateSuperTokenFactory(address)": "54fbc493",
              "updateSuperTokenLogic(address)": "787afde7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"AgreementClassUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"AppRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"oldGov\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"GovernanceReplaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"Jail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"SuperTokenFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"addToAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"allowCompositeApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsedDelta\",\"type\":\"int256\"}],\"name\":\"appCallbackPop\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceGranted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsed\",\"type\":\"int256\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appAllowanceToken\",\"type\":\"address\"}],\"name\":\"appCallbackPush\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"appCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"batchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"callAgreement\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAgreementWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"callAppAction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnedData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppActionWithContext\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppAfterCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"appCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isTermination\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"callAppBeforeCallback\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cbdata\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceWantedMore\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsedDelta\",\"type\":\"int256\"}],\"name\":\"ctxUseAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decodeCtx\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"appLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"callType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"agreementSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceGranted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"appAllowanceWanted\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"appAllowanceUsed\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"appAddress\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"appAllowanceToken\",\"type\":\"address\"}],\"internalType\":\"struct ISuperfluid.Context\",\"name\":\"context\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"name\":\"forwardBatchCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"getAgreementClass\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"appLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"getAppManifest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSuperApp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isJailed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"noopMask\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"governance\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactory\",\"outputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"factory\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenFactoryLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"isAgreementClassListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"isAgreementTypeListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isApp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"isAppJailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isJail\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"targetApp\",\"type\":\"address\"}],\"name\":\"isCompositeAppAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAppAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"isCtxValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"},{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"jailApp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"}],\"name\":\"mapAgreementClasses\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"agreementClasses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperApp\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"}],\"name\":\"registerAppByFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"configWord\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registrationKey\",\"type\":\"string\"}],\"name\":\"registerAppWithKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bitmap\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"agreementType\",\"type\":\"bytes32\"}],\"name\":\"removeFromAgreementClassesBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBitmap\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidGovernance\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperAgreement\",\"name\":\"agreementClassLogic\",\"type\":\"address\"}],\"name\":\"updateAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperTokenFactory\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateSuperTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"updateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid host interface. It is the central contract of the system where super agreement, super app and super token features are connected together. The superfluid host contract is also the entry point for the protocol users, where batch call and meta transaction are provided for UX improvements.\",\"events\":{\"AppRegistered(address)\":{\"details\":\"App registered event\"},\"Jail(address,uint256)\":{\"details\":\"Jail event for the app\"}},\"kind\":\"dev\",\"methods\":{\"addToAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"Create a new bitmask by adding a agreement class to it.\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"allowCompositeApp(address)\":{\"details\":\"White-list the target app for app composition for the source app (msg.sender)\",\"params\":{\"targetApp\":\"The taget super app address\"}},\"batchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function\",\"params\":{\"operations\":\"Array of batch operations.\"}},\"callAgreement(address,bytes,bytes)\":{\"details\":\"Call agreement function\",\"params\":{\"callData\":\"The contextual call data with placeholder ctx\",\"userData\":\"Extra user data being sent to the super app callbacks\"}},\"callAppAction(address,bytes)\":{\"details\":\"Call app action\",\"params\":{\"callData\":\"The contextual call data. NOTE: See callAgreement about contextual call data.\"}},\"forwardBatchCall((uint32,address,bytes)[])\":{\"details\":\"Batch call function for trusted forwarders (EIP-2771)\",\"params\":{\"operations\":\"Array of batch operations.\"}},\"getAgreementClass(bytes32)\":{\"details\":\"Get agreement class\"},\"getAppLevel(address)\":{\"details\":\"Query app level\",\"params\":{\"app\":\"Super app address\"}},\"getAppManifest(address)\":{\"details\":\"Get the manifest of the super app\",\"params\":{\"app\":\"Super app address\"}},\"getGovernance()\":{\"details\":\"Get the current governace of the Superfluid host\"},\"getSuperTokenFactory()\":{\"details\":\"Get the super token factory\",\"returns\":{\"factory\":\"The factory\"}},\"getSuperTokenFactoryLogic()\":{\"details\":\"Get the super token factory logic (applicable to upgradable deployment)\",\"returns\":{\"logic\":\"The factory logic\"}},\"isAgreementClassListed(address)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isAgreementTypeListed(bytes32)\":{\"details\":\"Check if the agreement class is whitelisted\"},\"isApp(address)\":{\"details\":\"Query if the app is registered\",\"params\":{\"app\":\"Super app address\"}},\"isAppJailed(address)\":{\"details\":\"Query if the app has been jailed\",\"params\":{\"app\":\"Super app address\"}},\"isCompositeAppAllowed(address,address)\":{\"details\":\"Query if source app  is allowed to call the target app as downstream app.\",\"params\":{\"app\":\"Super app address\",\"targetApp\":\"The taget super app address\"}},\"mapAgreementClasses(uint256)\":{\"details\":\"Map list of the agreement classes using a bitmap\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"registerAgreementClass(address)\":{\"details\":\"Register a new agreement class to the system\",\"params\":{\"agreementClassLogic\":\"INitial agreement class code Modifiers:  - onlyGovernance\"}},\"registerApp(uint256)\":{\"details\":\"Message sender declares it as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions`\"}},\"registerAppByFactory(address,uint256)\":{\"details\":\"Message sender declares app as a super app\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions` NOTE: only factory contracts authorized by governance can register super apps\"}},\"registerAppWithKey(uint256,string)\":{\"details\":\"Message sender declares it as a super app, using a registration key\",\"params\":{\"configWord\":\"The super app manifest configuration, flags are defined in                   `SuperAppDefinitions`\",\"registrationKey\":\"The registration key issued by the governance\"}},\"removeFromAgreementClassesBitmap(uint256,bytes32)\":{\"details\":\"Create a new bitmask by removing a agreement class from it.\",\"params\":{\"bitmap\":\"Agreement class bitmap\"}},\"replaceGovernance(address)\":{\"details\":\"Replace the current governance with a new one\"},\"updateAgreementClass(address)\":{\"details\":\"Update code of an agreement class\",\"params\":{\"agreementClassLogic\":\"New code for the agreement class Modifiers:  - onlyGovernance\"}},\"updateSuperTokenFactory(address)\":{\"details\":\"Update super token factory\",\"params\":{\"newFactory\":\"New factory logic\"}},\"updateSuperTokenLogic(address)\":{\"details\":\"Update the super token logic to the latest NOTE: - Refer toISuperTokenFactory.Upgradability for expected behaviours.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":\"ISuperfluid\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "ISuperfluidGovernance": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperToken[]",
                  "name": "tokens",
                  "type": "address[]"
                }
              ],
              "name": "batchUpdateSuperTokenLogic",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "getConfigAsAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "value",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract ISuperfluidToken",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "getConfigAsUint256",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                }
              ],
              "name": "registerAgreementClass",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newGov",
                  "type": "address"
                }
              ],
              "name": "replaceGovernance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "hostNewLogic",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "agreementClassNewLogics",
                  "type": "address[]"
                },
                {
                  "internalType": "address",
                  "name": "superTokenFactoryNewLogic",
                  "type": "address"
                }
              ],
              "name": "updateContracts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "batchUpdateSuperTokenLogic(address,address[])": "42148deb",
              "getConfigAsAddress(address,address,bytes32)": "8369a0f1",
              "getConfigAsUint256(address,address,bytes32)": "80f70cba",
              "registerAgreementClass(address,address)": "cadf8f85",
              "replaceGovernance(address,address)": "44864b25",
              "updateContracts(address,address,address[],address)": "427942a4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"batchUpdateSuperTokenLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getConfigAsUint256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"}],\"name\":\"registerAgreementClass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newGov\",\"type\":\"address\"}],\"name\":\"replaceGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hostNewLogic\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"agreementClassNewLogics\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"superTokenFactoryNewLogic\",\"type\":\"address\"}],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"Superfluid's Governance interface\",\"kind\":\"dev\",\"methods\":{\"batchUpdateSuperTokenLogic(address,address[])\":{\"details\":\"Update supertoken logic contract to the latest that is managed by the super token factory\"},\"getConfigAsAddress(address,address,bytes32)\":{\"details\":\"Get configuration as address value\"},\"getConfigAsUint256(address,address,bytes32)\":{\"details\":\"Get configuration as uint256 value\"},\"registerAgreementClass(address,address)\":{\"details\":\"Register a new agreement class\"},\"replaceGovernance(address,address)\":{\"details\":\"Replace the current governance with a new governance\"},\"updateContracts(address,address,address[],address)\":{\"details\":\"Update logics of the contracts NOTE: - Because they might have inter-dependencies, it is good to have one single function to update them all\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":\"ISuperfluidGovernance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "ISuperfluidToken": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bondAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "AgreementLiquidatedBy",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                }
              ],
              "name": "AgreementLiquidatedV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                }
              ],
              "name": "AgreementStateUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                }
              ],
              "name": "AgreementTerminated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "AgreementUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "bailoutAccount",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "Bailout",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "createAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getAccountActiveAgreements",
              "outputs": [
                {
                  "internalType": "contract ISuperAgreement[]",
                  "name": "activeAgreements",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementData",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "agreementClass",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "getAgreementStateSlot",
              "outputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHost",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "host",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountCritical",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountCriticalNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isCritical",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "isAccountSolvent",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "isAccountSolventNow",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isSolvent",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "liquidator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "penaltyAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bailoutAmount",
                  "type": "uint256"
                }
              ],
              "name": "makeLiquidationPayouts",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "liquidationTypeData",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "liquidatorAccount",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "useDefaultRewardAccount",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "targetAccount",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "targetAccountBalanceDelta",
                  "type": "int256"
                }
              ],
              "name": "makeLiquidationPayoutsV2",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "realtimeBalanceOf",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "realtimeBalanceOfNow",
              "outputs": [
                {
                  "internalType": "int256",
                  "name": "availableBalance",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "deposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "owedDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "int256",
                  "name": "delta",
                  "type": "int256"
                }
              ],
              "name": "settleBalance",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "dataLength",
                  "type": "uint256"
                }
              ],
              "name": "terminateAgreement",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "id",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementData",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slotId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "slotData",
                  "type": "bytes32[]"
                }
              ],
              "name": "updateAgreementStateSlot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createAgreement(bytes32,bytes32[])": "12a6a3f8",
              "getAccountActiveAgreements(address)": "386fa221",
              "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
              "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
              "getHost()": "20bc4425",
              "isAccountCritical(address,uint256)": "d9d078d6",
              "isAccountCriticalNow(address)": "79359f6f",
              "isAccountSolvent(address,uint256)": "b84cdd4a",
              "isAccountSolventNow(address)": "bb0d196e",
              "makeLiquidationPayouts(bytes32,address,address,uint256,uint256)": "8ddd1c0f",
              "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
              "realtimeBalanceOf(address,uint256)": "eb3537cc",
              "realtimeBalanceOfNow(address)": "2ec8eec7",
              "settleBalance(address,int256)": "cf97256d",
              "terminateAgreement(bytes32,uint256)": "27048397",
              "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
              "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"makeLiquidationPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement creation event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"details\":\"Agreement liquidation event (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot NOTE: Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode) NOTE: Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the liquidatorAccount will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the rewardAccount will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAccount\":\"Account that collects the reward or bails out insolvent accounts\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement termination event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement creation event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"details\":\"System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"Get a list of agreements that is active for the accountAn active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of a agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"Check if one account is critical\",\"params\":{\"account\":\"Account check if is critical by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"Check if one account is critical now\",\"params\":{\"account\":\"Account check if is critical by a future time\"},\"returns\":{\"isCritical\":\"isCritical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"Check if one account is solvent\",\"params\":{\"account\":\"Account check if is solvent by a future time\",\"timestamp\":\"Time of balance\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"isAccountSolventNow(address)\":{\"details\":\"Check if one account is solvent now\",\"params\":{\"account\":\"Account check if is solvent now\"},\"returns\":{\"isSolvent\":\"isSolvent\"}},\"makeLiquidationPayouts(bytes32,address,address,uint256,uint256)\":{\"details\":\"Make liquidation payouts\",\"params\":{\"bailoutAmount\":\"Amount of account bailout needed NOTE: Liquidation rules:  - If a bailout is required (bailoutAmount > 0)     - the actual reward goes to the liquidator,     - while the reward account becomes the bailout account     - total bailout include: bailout amount + reward amount Modifiers:  - onlyAgreement\",\"id\":\"Agreement ID\",\"liquidator\":\"Address of the executer of liquidation\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recepient account will receive\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount Modifiers:  - onlyAgreement\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\"},\"settleBalance(address,int256)\":{\"details\":\"Settle balance from an account by the agreement.      The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled Modifiers:  - onlyAgreement\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated NOTE - To clear the storage out, provide zero-ed array of intended length\"}}},\"title\":\"Superfluid's token interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "ERC20WithTokenInfo": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for ERC20 token with token info NOTE: Using abstract contract instead of interfaces because old solidity does not support interface inheriting other interfaces solhint-disable-next-line no-empty-blocks\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":\"ERC20WithTokenInfo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "TokenInfo": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token info interface NOTE: ERC20 standard interface does not specify these functions, but often the token implementations have them.\",\"kind\":\"dev\",\"methods\":{\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":\"TokenInfo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]}},\"version\":1}"
        }
      },
      "contracts/Controller.sol": {
        "Controller": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "streamAddress",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "newStream",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                }
              ],
              "name": "createNewStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllStreamers",
              "outputs": [
                {
                  "internalType": "contract Streamer[]",
                  "name": "_streamers",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:805:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7:143:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "233:207:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "279:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "288:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "281:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "281:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "281:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "243:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "305:128:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "320:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "334:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "324:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "349:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "395:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "391:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "391:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "359:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "359:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "349:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "203:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "214:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "226:6:17",
                            "type": ""
                          }
                        ],
                        "src": "156:284:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "491:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "501:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "473:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "483:7:17",
                            "type": ""
                          }
                        ],
                        "src": "446:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "603:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "625:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "575:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "585:7:17",
                            "type": ""
                          }
                        ],
                        "src": "548:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "723:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "780:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "789:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "782:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "782:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "782:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "771:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "753:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "743:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "743:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "736:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "733:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "716:5:17",
                            "type": ""
                          }
                        ],
                        "src": "680:122:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506040516132333803806132338339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6131258061010e6000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063962a4948146200003f578063a32c47c41462000061575b600080fd5b6200004962000081565b60405162000058919062000509565b60405180910390f35b6200007f600480360381019062000079919062000333565b62000111565b005b606060018054806020026020016040519081016040528092919081815260200182805480156200010757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620000bc575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200016a57600080fd5b600086868660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878787604051620001a19062000293565b620001b397969594939291906200052d565b604051809103906000f080158015620001d0573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f1e129934fd1c0e40f1b0f98f531dce9e51f68ca6588c4d4dfdf7a9a2332207808287896040516200028293929190620004cc565b60405180910390a250505050505050565b6129ef806200070183390190565b600081359050620002b281620006b2565b92915050565b600081359050620002c981620006cc565b92915050565b600081359050620002e081620006e6565b92915050565b60008083601f840112620002f957600080fd5b8235905067ffffffffffffffff8111156200031357600080fd5b6020830191508360018202830111156200032c57600080fd5b9250929050565b60008060008060008060a087890312156200034d57600080fd5b60006200035d89828a01620002b8565b96505060206200037089828a01620002a1565b95505060406200038389828a01620002a1565b94505060606200039689828a01620002cf565b935050608087013567ffffffffffffffff811115620003b457600080fd5b620003c289828a01620002e6565b92509250509295509295509295565b6000620003df838362000477565b60208301905092915050565b620003f681620005ed565b82525050565b60006200040982620005b3565b620004158185620005cb565b93506200042283620005a3565b8060005b83811015620004595781516200043d8882620003d1565b97506200044a83620005be565b92505060018101905062000426565b5085935050505092915050565b620004718162000642565b82525050565b62000482816200066a565b82525050565b620004938162000615565b82525050565b6000620004a78385620005dc565b9350620004b683858462000692565b620004c183620006a1565b840190509392505050565b6000606082019050620004e36000830186620003eb565b620004f26020830185620003eb565b620005016040830184620003eb565b949350505050565b60006020820190508181036000830152620005258184620003fc565b905092915050565b600060c08201905062000544600083018a62000466565b620005536020830189620003eb565b620005626040830188620003eb565b620005716060830187620003eb565b62000580608083018662000488565b81810360a08301526200059581848662000499565b905098975050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620005fa8262000622565b9050919050565b60006200060e82620005ed565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064f8262000656565b9050919050565b6000620006638262000622565b9050919050565b600062000677826200067e565b9050919050565b60006200068b8262000622565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b620006bd81620005ed565b8114620006c957600080fd5b50565b620006d78162000601565b8114620006e357600080fd5b50565b620006f18162000615565b8114620006fd57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620029ef380380620029ef833981810160405281019062000037919062000499565b60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000b9919062000559565b60206040518083038186803b158015620000d257600080fd5b505afa158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200046d565b73ffffffffffffffffffffffffffffffffffffffff16815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055508060029080519060200190620002c7929190620002ef565b506000600160146101000a81548160ff02191690831515021790555050505050505062000782565b828054620002fd9062000686565b90600052602060002090601f0160209004810192826200032157600085556200036d565b82601f106200033c57805160ff19168380011785556200036d565b828001600101855582156200036d579182015b828111156200036c5782518255916020019190600101906200034f565b5b5090506200037c919062000380565b5090565b5b808211156200039b57600081600090555060010162000381565b5090565b6000620003b6620003b084620005aa565b62000576565b905082815260208101848484011115620003cf57600080fd5b620003dc84828562000650565b509392505050565b600081519050620003f5816200071a565b92915050565b6000815190506200040c8162000734565b92915050565b60008151905062000423816200074e565b92915050565b6000815190506200043a8162000768565b92915050565b600082601f8301126200045257600080fd5b8151620004648482602086016200039f565b91505092915050565b6000602082840312156200048057600080fd5b60006200049084828501620003fb565b91505092915050565b60008060008060008060c08789031215620004b357600080fd5b6000620004c389828a0162000412565b9650506020620004d689828a01620003e4565b9550506040620004e989828a01620003e4565b9450506060620004fc89828a01620003e4565b93505060806200050f89828a0162000429565b92505060a087015167ffffffffffffffff8111156200052d57600080fd5b6200053b89828a0162000440565b9150509295509295509295565b6200055381620005f1565b82525050565b600060208201905062000570600083018462000548565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620005a0576200059f620006eb565b5b8060405250919050565b600067ffffffffffffffff821115620005c857620005c7620006eb565b5b601f19601f8301169050602081019050919050565b6000620005ea8262000630565b9050919050565b6000819050919050565b60006200060882620005dd565b9050919050565b60006200061c82620005dd565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200067057808201518184015260208101905062000653565b8381111562000680576000848401525b50505050565b600060028204905060018216806200069f57607f821691505b60208210811415620006b657620006b5620006bc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200072581620005dd565b81146200073157600080fd5b50565b6200073f81620005fb565b81146200074b57600080fd5b50565b62000759816200060f565b81146200076557600080fd5b50565b620007738162000623565b81146200077f57600080fd5b50565b61225d80620007926000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b914616111610097578063d3112b2e11610066578063d3112b2e14610243578063f7260d3e14610262578063fc0c546a14610280578063ffe5c5521461029e57610100565b8063b9146161146101cf578063c47f0027146101ed578063ca13bf6514610209578063cca3a90e1461022757610100565b80635a096b2f116100d35780635a096b2f1461017b5780639dad93821461019f578063b6b55f25146101a9578063b87fe774146101c557610100565b806302fb0c5e1461010557806306fdde031461012357806312065fe0146101415780632e1a7d4d1461015f575b600080fd5b61010d6102a8565b60405161011a9190611c71565b60405180910390f35b61012b6102bb565b6040516101389190611e3c565b60405180910390f35b610149610349565b6040516101569190611efe565b60405180910390f35b6101796004803603810190610174919061193a565b6103fa565b005b6101836105dd565b6040516101969796959493929190611dc6565b60405180910390f35b6101a76107ed565b005b6101c360048036038101906101be919061193a565b6109c9565b005b6101cd610b1b565b005b6101d7610c0e565b6040516101e49190611efe565b60405180910390f35b610207600480360381019061020291906118f5565b610ce7565b005b610211610cfd565b60405161021e9190611dab565b60405180910390f35b610241600480360381019061023c919061184f565b610d0e565b005b61024b610e49565b604051610259929190611d82565b60405180910390f35b61026a610e9b565b6040516102779190611bf6565b60405180910390f35b610288610ec1565b6040516102959190611ccf565b60405180910390f35b6102a6610ee7565b005b600160149054906101000a900460ff1681565b600280546102c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906120fb565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a59190611bf6565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611963565b905090565b806000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104569190611bf6565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611963565b10156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611ede565b60405180910390fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610545929190611c48565b602060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061188b565b9050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611ebe565b60405180910390fd5b5050565b600080600080606060008060008054906101000a9004600b0b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900460ff1660023073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561069457600080fd5b505afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611963565b3073ffffffffffffffffffffffffffffffffffffffff1663b91461616040518163ffffffff1660e01b815260040160206040518083038186803b15801561071257600080fd5b505afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611963565b828054610756906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906120fb565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b50505050509250965096509650965096509650965090919293949596565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084757600080fd5b60011515600160149054906101000a900460ff1615151461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611e9e565b60405180910390fd5b6108f933600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b6109ac6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109579190611bf6565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611963565b6103fa565b6000600160146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2357600080fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a8393929190611c11565b602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061188b565b905080610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611ebe565b60405180910390fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7557600080fd5b60011515600160149054906101000a900460ff16151514610b9557600080fd5b6000600160146101000a81548160ff021916908315150217905550610c0c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b565b60008060009054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c889190611bf6565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611963565b610ce29190611fb2565b905090565b818160029190610cf8929190611691565b505050565b60008054906101000a9004600b0b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6857600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff160217905550610e45600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046112f3909392919063ffffffff16565b5050565b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4157600080fd5b60001515600160149054906101000a900460ff16151514610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90611e5e565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555060008054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110289190611bf6565b60206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611963565b10156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e7e565b60405180910390fd5b611122600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046114c2909392919063ffffffff16565b565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff8111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112075781602001600182028036833780820191505090505b5060405160240161121b9493929190611cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611295929190611c8c565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112ec91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff8111156113a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b506040516024016113ea9493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611464929190611c8c565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114bb91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115611573577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115a55781602001600182028036833780820191505090505b506040516024016115b99493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611633929190611c8c565b600060405180830381600087803b15801561164d57600080fd5b505af1158015611661573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061168a91906118b4565b5050505050565b82805461169d906120fb565b90600052602060002090601f0160209004810192826116bf5760008555611706565b82601f106116d857803560ff1916838001178555611706565b82800160010185558215611706579182015b828111156117055782358255916020019190600101906116ea565b5b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600061174761174284611f4a565b611f19565b90508281526020810184848401111561175f57600080fd5b61176a8482856120c8565b509392505050565b600081359050611781816121cb565b92915050565b600081519050611796816121e2565b92915050565b600082601f8301126117ad57600080fd5b81516117bd848260208601611734565b91505092915050565b6000813590506117d5816121f9565b92915050565b60008083601f8401126117ed57600080fd5b8235905067ffffffffffffffff81111561180657600080fd5b60208301915083600182028301111561181e57600080fd5b9250929050565b60008135905061183481612210565b92915050565b60008151905061184981612210565b92915050565b6000806040838503121561186257600080fd5b600061187085828601611772565b9250506020611881858286016117c6565b9150509250929050565b60006020828403121561189d57600080fd5b60006118ab84828501611787565b91505092915050565b6000602082840312156118c657600080fd5b600082015167ffffffffffffffff8111156118e057600080fd5b6118ec8482850161179c565b91505092915050565b6000806020838503121561190857600080fd5b600083013567ffffffffffffffff81111561192257600080fd5b61192e858286016117db565b92509250509250929050565b60006020828403121561194c57600080fd5b600061195a84828501611825565b91505092915050565b60006020828403121561197557600080fd5b60006119838482850161183a565b91505092915050565b61199581611fe3565b82525050565b6119a481611ff5565b82525050565b60006119b582611f7a565b6119bf8185611f90565b93506119cf8185602086016120c8565b6119d8816121ba565b840191505092915050565b6119ec81612038565b82525050565b6119fb8161205c565b82525050565b611a0a81612080565b82525050565b611a19816120a4565b82525050565b611a2881612001565b82525050565b6000611a3982611f85565b611a438185611fa1565b9350611a538185602086016120c8565b611a5c816121ba565b840191505092915050565b6000611a74601883611fa1565b91507f612073747265616d20697320616c7265616479206f70656e00000000000000006000830152602082019050919050565b6000611ab4600283611f90565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000611af4601d83611fa1565b91507f4e6f7420656e6f7567682062616c616e6365206465706f73697465642e0000006000830152602082019050919050565b6000611b34601683611fa1565b91507f7468652073747265616d206973206e6f74206f70656e000000000000000000006000830152602082019050919050565b6000611b74601683611fa1565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b6000611bb4601383611fa1565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b611bf08161202e565b82525050565b6000602082019050611c0b600083018461198c565b92915050565b6000606082019050611c26600083018661198c565b611c33602083018561198c565b611c406040830184611be7565b949350505050565b6000604082019050611c5d600083018561198c565b611c6a6020830184611be7565b9392505050565b6000602082019050611c86600083018461199b565b92915050565b6000606082019050611ca160008301856119e3565b8181036020830152611cb381846119aa565b90508181036040830152611cc681611aa7565b90509392505050565b6000602082019050611ce460008301846119f2565b92915050565b6000608082019050611cff6000830187611a01565b611d0c602083018661198c565b611d19604083018561198c565b8181036060830152611d2b81846119aa565b905095945050505050565b6000608082019050611d4b6000830187611a01565b611d58602083018661198c565b611d656040830185611a1f565b8181036060830152611d7781846119aa565b905095945050505050565b6000604082019050611d976000830185611a10565b611da460208301846119e3565b9392505050565b6000602082019050611dc06000830184611a1f565b92915050565b600060e082019050611ddb600083018a611a1f565b611de860208301896119f2565b611df5604083018861198c565b611e02606083018761199b565b8181036080830152611e148186611a2e565b9050611e2360a0830185611be7565b611e3060c0830184611be7565b98975050505050505050565b60006020820190508181036000830152611e568184611a2e565b905092915050565b60006020820190508181036000830152611e7781611a67565b9050919050565b60006020820190508181036000830152611e9781611ae7565b9050919050565b60006020820190508181036000830152611eb781611b27565b9050919050565b60006020820190508181036000830152611ed781611b67565b9050919050565b60006020820190508181036000830152611ef781611ba7565b9050919050565b6000602082019050611f136000830184611be7565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611f4057611f3f61218b565b5b8060405250919050565b600067ffffffffffffffff821115611f6557611f6461218b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fbd8261202e565b9150611fc88361202e565b925082611fd857611fd761212d565b5b828204905092915050565b6000611fee8261200e565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120438261204a565b9050919050565b60006120558261200e565b9050919050565b60006120678261206e565b9050919050565b60006120798261200e565b9050919050565b600061208b82612092565b9050919050565b600061209d8261200e565b9050919050565b60006120af826120b6565b9050919050565b60006120c18261200e565b9050919050565b60005b838110156120e65780820151818401526020810190506120cb565b838111156120f5576000848401525b50505050565b6000600282049050600182168061211357607f821691505b602082108114156121275761212661215c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6121d481611fe3565b81146121df57600080fd5b50565b6121eb81611ff5565b81146121f657600080fd5b50565b61220281612001565b811461220d57600080fd5b50565b6122198161202e565b811461222457600080fd5b5056fea26469706673582212206a5491999b82a47319233b792d2536be71bd630226c3fe7776041c6c675512f364736f6c63430008000033a2646970667358221220a73181687532fd739bda5d12b747f26c7413f342d8deb331cdad5439a74f25bd64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3233 CODESIZE SUB DUP1 PUSH2 0x3233 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3125 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x3A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x962A4948 EQ PUSH3 0x3F JUMPI DUP1 PUSH4 0xA32C47C4 EQ PUSH3 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x49 PUSH3 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x79 SWAP2 SWAP1 PUSH3 0x333 JUMP JUMPDEST PUSH3 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x107 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0xBC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x1A1 SWAP1 PUSH3 0x293 JUMP JUMPDEST PUSH3 0x1B3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E129934FD1C0E40F1B0F98F531DCE9E51F68CA6588C4D4DFDF7A9A233220780 DUP3 DUP8 DUP10 PUSH1 0x40 MLOAD PUSH3 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF DUP1 PUSH3 0x701 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2B2 DUP2 PUSH3 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C9 DUP2 PUSH3 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2E0 DUP2 PUSH3 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x35D DUP10 DUP3 DUP11 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x370 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x383 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x396 DUP10 DUP3 DUP11 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C2 DUP10 DUP3 DUP11 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF DUP4 DUP4 PUSH3 0x477 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F6 DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x409 DUP3 PUSH3 0x5B3 JUMP JUMPDEST PUSH3 0x415 DUP2 DUP6 PUSH3 0x5CB JUMP JUMPDEST SWAP4 POP PUSH3 0x422 DUP4 PUSH3 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x459 JUMPI DUP2 MLOAD PUSH3 0x43D DUP9 DUP3 PUSH3 0x3D1 JUMP JUMPDEST SWAP8 POP PUSH3 0x44A DUP4 PUSH3 0x5BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x426 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x471 DUP2 PUSH3 0x642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x482 DUP2 PUSH3 0x66A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x493 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP4 DUP6 PUSH3 0x5DC JUMP JUMPDEST SWAP4 POP PUSH3 0x4B6 DUP4 DUP6 DUP5 PUSH3 0x692 JUMP JUMPDEST PUSH3 0x4C1 DUP4 PUSH3 0x6A1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x4E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x4F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x501 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x3EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x525 DUP2 DUP5 PUSH3 0x3FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x544 PUSH1 0x0 DUP4 ADD DUP11 PUSH3 0x466 JUMP JUMPDEST PUSH3 0x553 PUSH1 0x20 DUP4 ADD DUP10 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x562 PUSH1 0x40 DUP4 ADD DUP9 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 PUSH1 0x60 DUP4 ADD DUP8 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x580 PUSH1 0x80 DUP4 ADD DUP7 PUSH3 0x488 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH3 0x595 DUP2 DUP5 DUP7 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FA DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60E DUP3 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x64F DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x663 DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x677 DUP3 PUSH3 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x68B DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6BD DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP2 EQ PUSH3 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6D7 DUP2 PUSH3 0x601 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F1 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP2 EQ PUSH3 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29EF CODESIZE SUB DUP1 PUSH3 0x29EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C7 SWAP3 SWAP2 SWAP1 PUSH3 0x2EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x782 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2FD SWAP1 PUSH3 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x321 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x33C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x36D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x36C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x37C SWAP2 SWAP1 PUSH3 0x380 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x39B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x5AA JUMP JUMPDEST PUSH3 0x576 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3DC DUP5 DUP3 DUP6 PUSH3 0x650 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x40C DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43A DUP2 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x464 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x490 DUP5 DUP3 DUP6 ADD PUSH3 0x3FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4C3 DUP10 DUP3 DUP11 ADD PUSH3 0x412 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4D6 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4E9 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4FC DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x50F DUP10 DUP3 DUP11 ADD PUSH3 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53B DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x553 DUP2 PUSH3 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x6EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x6EB JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EA DUP3 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x670 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x653 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x725 DUP2 PUSH3 0x5DD JUMP JUMPDEST DUP2 EQ PUSH3 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x73F DUP2 PUSH3 0x5FB JUMP JUMPDEST DUP2 EQ PUSH3 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x759 DUP2 PUSH3 0x60F JUMP JUMPDEST DUP2 EQ PUSH3 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x623 JUMP JUMPDEST DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225D DUP1 PUSH3 0x792 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033A26469706673 PC 0x22 SLT KECCAK256 0xA7 BALANCE DUP2 PUSH9 0x7532FD739BDA5D12B7 SELFBALANCE CALLCODE PUSH13 0x7413F342D8DEB331CDAD5439A7 0x4F 0x25 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "223:805:14:-:0;;;351:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;398:6;390:5;;:14;;;;;;;;;;;;;;;;;;351:60;223:805;;7:143:17;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;223:805:14:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8194:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "224:107:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "234:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "256:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "243:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "243:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "319:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperfluid_$2287",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:46:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "272:53:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "272:53:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperfluid_$2287",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "202:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "210:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "218:5:17",
                            "type": ""
                          }
                        ],
                        "src": "152:179:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "387:85:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "397:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "419:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "406:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "406:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "397:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "460:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "435:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "435:31:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "365:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "373:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "381:5:17",
                            "type": ""
                          }
                        ],
                        "src": "337:135:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "567:277:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "616:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "625:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "628:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "618:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "618:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "618:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "595:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "603:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "591:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "591:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "587:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "587:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "580:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "580:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "577:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "641:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "664:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "651:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "651:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "641:6:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "714:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "723:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "726:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "716:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "716:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "716:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "686:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "694:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "683:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "683:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "680:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "739:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "755:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "763:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "751:17:17"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "739:8:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "822:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "831:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "834:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "824:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "824:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "824:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "787:8:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "801:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "809:4:17",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "797:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "797:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "783:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "783:32:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "817:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "780:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "777:2:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "534:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "542:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "550:8:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "560:6:17",
                            "type": ""
                          }
                        ],
                        "src": "492:352:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1022:841:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1069:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1078:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1081:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1071:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1071:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1071:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1043:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1052:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1039:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1039:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1064:3:17",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1035:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1035:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1032:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1095:137:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1110:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1124:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1114:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1139:83:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1194:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1205:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1190:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1190:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1214:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperfluid_$2287",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:40:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1149:73:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1139:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1242:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1257:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1271:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1261:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1287:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1322:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1333:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1318:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1318:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1297:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1297:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1287:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1370:118:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1385:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1399:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1389:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1415:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1450:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1461:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1446:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1446:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1470:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1425:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1425:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1415:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1498:116:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1513:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1527:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1517:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1543:61:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1576:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1587:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1572:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1572:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1596:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "1553:18:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1553:51:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1543:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1624:232:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1639:47:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1670:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1681:3:17",
                                            "type": "",
                                            "value": "128"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1666:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1666:19:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1653:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1653:33:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1643:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1733:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1742:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1745:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1735:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1735:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1735:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1705:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1713:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1702:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1702:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "1699:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1763:83:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1818:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1829:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1814:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1814:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1838:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1781:32:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1781:65:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1763:6:17"
                                    },
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1771:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperfluid_$2287t_addresst_addresst_int96t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "952:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "963:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "975:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "983:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "991:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "999:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1007:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1015:6:17",
                            "type": ""
                          }
                        ],
                        "src": "850:1013:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1966:116:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2027:6:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2035:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_Streamer_$3261_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1976:50:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1976:63:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1976:63:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2048:28:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2066:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2071:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2062:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2062:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2048:10:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_contract$_Streamer_$3261_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1939:6:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1947:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "1955:10:17",
                            "type": ""
                          }
                        ],
                        "src": "1869:213:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2153:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2170:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2193:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2175:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2175:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2163:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2163:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2163:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2141:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2148:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2088:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2393:676:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2403:85:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2482:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2417:64:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2417:71:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2407:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2497:93:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2578:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2583:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2504:73:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2504:86:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2497:3:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2599:88:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2681:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:66:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2614:73:17"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "2603:7:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2696:21:17",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "2710:7:17"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2700:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2786:258:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2800:34:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "2827:6:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2821:5:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2821:13:17"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "2804:13:17",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2847:87:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2915:13:17"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "2930:3:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_contract$_Streamer_$3261_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "2854:60:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2854:80:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2847:3:17"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2947:87:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3027:6:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2957:69:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2957:77:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2947:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2748:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2751:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2745:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2745:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2759:18:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2761:14:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2770:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2773:1:17",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2766:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2766:9:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2761:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2730:14:17",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2732:10:17",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2741:1:17",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "2736:1:17",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "2726:318:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3053:10:17",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3060:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3053:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2372:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2379:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2388:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2252:817:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3160:86:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3177:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3233:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluid_$2287_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3182:50:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3182:57:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3170:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3170:70:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3170:70:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3148:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3155:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3075:171:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3324:83:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3341:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3394:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_Streamer_$3261_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3346:47:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3346:54:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3334:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3334:67:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3334:67:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_Streamer_$3261_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3312:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3319:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3252:155:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3474:51:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3491:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3512:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "3496:15:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3496:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3484:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3484:35:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3484:35:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int96_to_t_int96_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3462:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3469:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3413:112:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3657:202:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3667:78:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3733:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3738:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3674:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3674:71:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3667:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "3779:5:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3786:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3791:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3755:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3755:43:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3755:43:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3807:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3818:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3845:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "3823:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3823:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3814:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3814:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3807:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "3630:5:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3637:6:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3645:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3653:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3555:304:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4019:288:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4029:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4041:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4052:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4037:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4037:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4029:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4109:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4122:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4133:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4118:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4065:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4065:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4065:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4190:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4203:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4214:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4199:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4199:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4146:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4146:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4146:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4272:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4285:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4296:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4281:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4281:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4228:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4228:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4228:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3975:9:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3987:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3995:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4003:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4014:4:17",
                            "type": ""
                          }
                        ],
                        "src": "3865:442:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4478:242:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4488:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4500:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4511:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4496:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4496:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4488:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4535:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4546:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4531:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4531:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "4554:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4560:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4550:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4550:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4524:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4524:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4524:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4580:133:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "4708:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4588:110:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4588:125:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4580:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4450:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4462:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4473:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4313:407:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5010:634:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5020:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5032:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5043:3:17",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5028:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5028:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5020:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5121:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5134:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5145:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5130:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5130:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5057:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5057:91:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5057:91:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5202:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5215:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5226:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5211:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5211:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5158:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5158:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5158:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5284:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5297:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5308:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5293:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5293:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5240:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5240:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5240:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5366:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5379:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5390:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5375:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5375:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5322:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5322:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5322:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5444:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5457:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5468:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5453:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5453:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5404:39:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5404:69:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5404:69:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5494:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5505:3:17",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5490:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5490:19:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "5515:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5521:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5511:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5511:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5483:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5483:49:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5483:49:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5541:96:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "5615:6:17"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5623:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "5632:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5549:65:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5549:88:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5541:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluid_$2287_t_address_t_address_t_address_t_int96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_address_t_int96_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4934:9:17",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "4946:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4954:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4962:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4970:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4978:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4986:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4994:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5005:4:17",
                            "type": ""
                          }
                        ],
                        "src": "4726:918:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5739:60:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5749:11:17",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "5757:3:17"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "5749:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5770:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5782:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5787:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5778:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5778:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "5770:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "5726:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "5734:4:17",
                            "type": ""
                          }
                        ],
                        "src": "5650:149:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5896:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5907:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5923:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5917:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5917:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5907:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5879:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5889:6:17",
                            "type": ""
                          }
                        ],
                        "src": "5805:131:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6034:38:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6044:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "6056:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6061:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6052:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6052:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "6044:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "6021:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "6029:4:17",
                            "type": ""
                          }
                        ],
                        "src": "5942:130:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6189:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6206:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6211:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6199:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6199:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6199:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6227:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6246:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6251:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6242:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6242:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6227:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6161:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6166:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "6177:11:17",
                            "type": ""
                          }
                        ],
                        "src": "6078:184:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6364:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6381:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6386:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6374:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6374:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6374:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6402:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6421:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6426:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6417:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6417:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6402:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6336:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6341:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "6352:11:17",
                            "type": ""
                          }
                        ],
                        "src": "6268:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6488:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6498:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6527:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6509:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6509:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6498:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6470:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6480:7:17",
                            "type": ""
                          }
                        ],
                        "src": "6443:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6610:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6620:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6649:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "6631:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6631:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6620:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperfluid_$2287",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6592:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6602:7:17",
                            "type": ""
                          }
                        ],
                        "src": "6545:116:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6710:48:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6720:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6742:2:17",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6746:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "6731:10:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6731:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6720:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6692:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6702:7:17",
                            "type": ""
                          }
                        ],
                        "src": "6667:91:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6809:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6819:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6834:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6841:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6830:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6830:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6819:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6791:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "6801:7:17",
                            "type": ""
                          }
                        ],
                        "src": "6764:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6976:86:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6986:70:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7050:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluid_$2287_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6999:50:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6999:57:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6986:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2287_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6956:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6966:9:17",
                            "type": ""
                          }
                        ],
                        "src": "6896:166:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7148:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7158:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7189:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7171:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7171:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7158:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2287_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7128:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7138:9:17",
                            "type": ""
                          }
                        ],
                        "src": "7068:133:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7284:83:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7294:67:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7355:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_Streamer_$3261_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7307:47:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7307:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7294:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Streamer_$3261_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7264:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7274:9:17",
                            "type": ""
                          }
                        ],
                        "src": "7207:160:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7450:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7460:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7491:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7473:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7473:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7460:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Streamer_$3261_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7430:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7440:9:17",
                            "type": ""
                          }
                        ],
                        "src": "7373:130:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7560:103:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "7583:3:17"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "7588:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7593:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "7570:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7570:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7570:30:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "7641:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7646:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7637:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7637:16:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7655:1:17",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7630:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7630:27:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7630:27:17"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "7542:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "7547:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7552:6:17",
                            "type": ""
                          }
                        ],
                        "src": "7509:154:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7717:54:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7727:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7745:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7752:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7741:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7741:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7761:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7757:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7757:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7737:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7737:28:17"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "7727:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7700:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "7710:6:17",
                            "type": ""
                          }
                        ],
                        "src": "7669:102:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7820:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7877:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7886:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7889:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7879:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7879:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7879:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7843:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7868:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "7850:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7850:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7840:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7840:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7833:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7833:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7830:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7813:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7777:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7968:99:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8045:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8054:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8057:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8047:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8047:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8047:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7991:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8036:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperfluid_$2287",
                                          "nodeType": "YulIdentifier",
                                          "src": "7998:37:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7998:44:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7988:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7988:55:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7981:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7981:63:17"
                              },
                              "nodeType": "YulIf",
                              "src": "7978:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperfluid_$2287",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7961:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7905:162:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8114:77:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8169:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8178:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8181:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8171:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8171:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8171:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8137:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8160:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "8144:15:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8144:22:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "8134:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8134:33:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8127:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8127:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "8124:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8107:5:17",
                            "type": ""
                          }
                        ],
                        "src": "8073:118:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ISuperfluid_$2287(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ISuperfluid_$2287(value)\n    }\n\n    function abi_decode_t_int96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperfluid_$2287t_addresst_addresst_int96t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperfluid_$2287(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value4, value5 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_contract$_Streamer_$3261_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_contract$_Streamer_$3261_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // contract Streamer[] -> address[]\n    function abi_encode_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_contract$_Streamer_$3261_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluid_$2287_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Streamer_$3261_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_Streamer_$3261_to_t_address(value))\n    }\n\n    function abi_encode_t_int96_to_t_int96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int96(value))\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluid_$2287_t_address_t_address_t_address_t_int96_t_string_calldata_ptr__to_t_address_t_address_t_address_t_address_t_int96_t_string_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value5, value6,  tail)\n\n    }\n\n    function array_dataslot_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISuperfluid_$2287(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2287_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluid_$2287_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2287_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Streamer_$3261_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Streamer_$3261_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Streamer_$3261_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperfluid_$2287(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperfluid_$2287(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063962a4948146200003f578063a32c47c41462000061575b600080fd5b6200004962000081565b60405162000058919062000509565b60405180910390f35b6200007f600480360381019062000079919062000333565b62000111565b005b606060018054806020026020016040519081016040528092919081815260200182805480156200010757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620000bc575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200016a57600080fd5b600086868660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878787604051620001a19062000293565b620001b397969594939291906200052d565b604051809103906000f080158015620001d0573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f1e129934fd1c0e40f1b0f98f531dce9e51f68ca6588c4d4dfdf7a9a2332207808287896040516200028293929190620004cc565b60405180910390a250505050505050565b6129ef806200070183390190565b600081359050620002b281620006b2565b92915050565b600081359050620002c981620006cc565b92915050565b600081359050620002e081620006e6565b92915050565b60008083601f840112620002f957600080fd5b8235905067ffffffffffffffff8111156200031357600080fd5b6020830191508360018202830111156200032c57600080fd5b9250929050565b60008060008060008060a087890312156200034d57600080fd5b60006200035d89828a01620002b8565b96505060206200037089828a01620002a1565b95505060406200038389828a01620002a1565b94505060606200039689828a01620002cf565b935050608087013567ffffffffffffffff811115620003b457600080fd5b620003c289828a01620002e6565b92509250509295509295509295565b6000620003df838362000477565b60208301905092915050565b620003f681620005ed565b82525050565b60006200040982620005b3565b620004158185620005cb565b93506200042283620005a3565b8060005b83811015620004595781516200043d8882620003d1565b97506200044a83620005be565b92505060018101905062000426565b5085935050505092915050565b620004718162000642565b82525050565b62000482816200066a565b82525050565b620004938162000615565b82525050565b6000620004a78385620005dc565b9350620004b683858462000692565b620004c183620006a1565b840190509392505050565b6000606082019050620004e36000830186620003eb565b620004f26020830185620003eb565b620005016040830184620003eb565b949350505050565b60006020820190508181036000830152620005258184620003fc565b905092915050565b600060c08201905062000544600083018a62000466565b620005536020830189620003eb565b620005626040830188620003eb565b620005716060830187620003eb565b62000580608083018662000488565b81810360a08301526200059581848662000499565b905098975050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620005fa8262000622565b9050919050565b60006200060e82620005ed565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064f8262000656565b9050919050565b6000620006638262000622565b9050919050565b600062000677826200067e565b9050919050565b60006200068b8262000622565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b620006bd81620005ed565b8114620006c957600080fd5b50565b620006d78162000601565b8114620006e357600080fd5b50565b620006f18162000615565b8114620006fd57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620029ef380380620029ef833981810160405281019062000037919062000499565b60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000b9919062000559565b60206040518083038186803b158015620000d257600080fd5b505afa158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200046d565b73ffffffffffffffffffffffffffffffffffffffff16815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055508060029080519060200190620002c7929190620002ef565b506000600160146101000a81548160ff02191690831515021790555050505050505062000782565b828054620002fd9062000686565b90600052602060002090601f0160209004810192826200032157600085556200036d565b82601f106200033c57805160ff19168380011785556200036d565b828001600101855582156200036d579182015b828111156200036c5782518255916020019190600101906200034f565b5b5090506200037c919062000380565b5090565b5b808211156200039b57600081600090555060010162000381565b5090565b6000620003b6620003b084620005aa565b62000576565b905082815260208101848484011115620003cf57600080fd5b620003dc84828562000650565b509392505050565b600081519050620003f5816200071a565b92915050565b6000815190506200040c8162000734565b92915050565b60008151905062000423816200074e565b92915050565b6000815190506200043a8162000768565b92915050565b600082601f8301126200045257600080fd5b8151620004648482602086016200039f565b91505092915050565b6000602082840312156200048057600080fd5b60006200049084828501620003fb565b91505092915050565b60008060008060008060c08789031215620004b357600080fd5b6000620004c389828a0162000412565b9650506020620004d689828a01620003e4565b9550506040620004e989828a01620003e4565b9450506060620004fc89828a01620003e4565b93505060806200050f89828a0162000429565b92505060a087015167ffffffffffffffff8111156200052d57600080fd5b6200053b89828a0162000440565b9150509295509295509295565b6200055381620005f1565b82525050565b600060208201905062000570600083018462000548565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620005a0576200059f620006eb565b5b8060405250919050565b600067ffffffffffffffff821115620005c857620005c7620006eb565b5b601f19601f8301169050602081019050919050565b6000620005ea8262000630565b9050919050565b6000819050919050565b60006200060882620005dd565b9050919050565b60006200061c82620005dd565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200067057808201518184015260208101905062000653565b8381111562000680576000848401525b50505050565b600060028204905060018216806200069f57607f821691505b60208210811415620006b657620006b5620006bc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200072581620005dd565b81146200073157600080fd5b50565b6200073f81620005fb565b81146200074b57600080fd5b50565b62000759816200060f565b81146200076557600080fd5b50565b620007738162000623565b81146200077f57600080fd5b50565b61225d80620007926000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b914616111610097578063d3112b2e11610066578063d3112b2e14610243578063f7260d3e14610262578063fc0c546a14610280578063ffe5c5521461029e57610100565b8063b9146161146101cf578063c47f0027146101ed578063ca13bf6514610209578063cca3a90e1461022757610100565b80635a096b2f116100d35780635a096b2f1461017b5780639dad93821461019f578063b6b55f25146101a9578063b87fe774146101c557610100565b806302fb0c5e1461010557806306fdde031461012357806312065fe0146101415780632e1a7d4d1461015f575b600080fd5b61010d6102a8565b60405161011a9190611c71565b60405180910390f35b61012b6102bb565b6040516101389190611e3c565b60405180910390f35b610149610349565b6040516101569190611efe565b60405180910390f35b6101796004803603810190610174919061193a565b6103fa565b005b6101836105dd565b6040516101969796959493929190611dc6565b60405180910390f35b6101a76107ed565b005b6101c360048036038101906101be919061193a565b6109c9565b005b6101cd610b1b565b005b6101d7610c0e565b6040516101e49190611efe565b60405180910390f35b610207600480360381019061020291906118f5565b610ce7565b005b610211610cfd565b60405161021e9190611dab565b60405180910390f35b610241600480360381019061023c919061184f565b610d0e565b005b61024b610e49565b604051610259929190611d82565b60405180910390f35b61026a610e9b565b6040516102779190611bf6565b60405180910390f35b610288610ec1565b6040516102959190611ccf565b60405180910390f35b6102a6610ee7565b005b600160149054906101000a900460ff1681565b600280546102c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906120fb565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a59190611bf6565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611963565b905090565b806000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104569190611bf6565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611963565b10156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611ede565b60405180910390fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610545929190611c48565b602060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061188b565b9050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611ebe565b60405180910390fd5b5050565b600080600080606060008060008054906101000a9004600b0b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900460ff1660023073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561069457600080fd5b505afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611963565b3073ffffffffffffffffffffffffffffffffffffffff1663b91461616040518163ffffffff1660e01b815260040160206040518083038186803b15801561071257600080fd5b505afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611963565b828054610756906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906120fb565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b50505050509250965096509650965096509650965090919293949596565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084757600080fd5b60011515600160149054906101000a900460ff1615151461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611e9e565b60405180910390fd5b6108f933600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b6109ac6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109579190611bf6565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611963565b6103fa565b6000600160146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2357600080fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a8393929190611c11565b602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061188b565b905080610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611ebe565b60405180910390fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7557600080fd5b60011515600160149054906101000a900460ff16151514610b9557600080fd5b6000600160146101000a81548160ff021916908315150217905550610c0c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b565b60008060009054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c889190611bf6565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611963565b610ce29190611fb2565b905090565b818160029190610cf8929190611691565b505050565b60008054906101000a9004600b0b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6857600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff160217905550610e45600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046112f3909392919063ffffffff16565b5050565b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4157600080fd5b60001515600160149054906101000a900460ff16151514610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90611e5e565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555060008054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110289190611bf6565b60206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611963565b10156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e7e565b60405180910390fd5b611122600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046114c2909392919063ffffffff16565b565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff8111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112075781602001600182028036833780820191505090505b5060405160240161121b9493929190611cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611295929190611c8c565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112ec91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff8111156113a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b506040516024016113ea9493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611464929190611c8c565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114bb91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115611573577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115a55781602001600182028036833780820191505090505b506040516024016115b99493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611633929190611c8c565b600060405180830381600087803b15801561164d57600080fd5b505af1158015611661573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061168a91906118b4565b5050505050565b82805461169d906120fb565b90600052602060002090601f0160209004810192826116bf5760008555611706565b82601f106116d857803560ff1916838001178555611706565b82800160010185558215611706579182015b828111156117055782358255916020019190600101906116ea565b5b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600061174761174284611f4a565b611f19565b90508281526020810184848401111561175f57600080fd5b61176a8482856120c8565b509392505050565b600081359050611781816121cb565b92915050565b600081519050611796816121e2565b92915050565b600082601f8301126117ad57600080fd5b81516117bd848260208601611734565b91505092915050565b6000813590506117d5816121f9565b92915050565b60008083601f8401126117ed57600080fd5b8235905067ffffffffffffffff81111561180657600080fd5b60208301915083600182028301111561181e57600080fd5b9250929050565b60008135905061183481612210565b92915050565b60008151905061184981612210565b92915050565b6000806040838503121561186257600080fd5b600061187085828601611772565b9250506020611881858286016117c6565b9150509250929050565b60006020828403121561189d57600080fd5b60006118ab84828501611787565b91505092915050565b6000602082840312156118c657600080fd5b600082015167ffffffffffffffff8111156118e057600080fd5b6118ec8482850161179c565b91505092915050565b6000806020838503121561190857600080fd5b600083013567ffffffffffffffff81111561192257600080fd5b61192e858286016117db565b92509250509250929050565b60006020828403121561194c57600080fd5b600061195a84828501611825565b91505092915050565b60006020828403121561197557600080fd5b60006119838482850161183a565b91505092915050565b61199581611fe3565b82525050565b6119a481611ff5565b82525050565b60006119b582611f7a565b6119bf8185611f90565b93506119cf8185602086016120c8565b6119d8816121ba565b840191505092915050565b6119ec81612038565b82525050565b6119fb8161205c565b82525050565b611a0a81612080565b82525050565b611a19816120a4565b82525050565b611a2881612001565b82525050565b6000611a3982611f85565b611a438185611fa1565b9350611a538185602086016120c8565b611a5c816121ba565b840191505092915050565b6000611a74601883611fa1565b91507f612073747265616d20697320616c7265616479206f70656e00000000000000006000830152602082019050919050565b6000611ab4600283611f90565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000611af4601d83611fa1565b91507f4e6f7420656e6f7567682062616c616e6365206465706f73697465642e0000006000830152602082019050919050565b6000611b34601683611fa1565b91507f7468652073747265616d206973206e6f74206f70656e000000000000000000006000830152602082019050919050565b6000611b74601683611fa1565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b6000611bb4601383611fa1565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b611bf08161202e565b82525050565b6000602082019050611c0b600083018461198c565b92915050565b6000606082019050611c26600083018661198c565b611c33602083018561198c565b611c406040830184611be7565b949350505050565b6000604082019050611c5d600083018561198c565b611c6a6020830184611be7565b9392505050565b6000602082019050611c86600083018461199b565b92915050565b6000606082019050611ca160008301856119e3565b8181036020830152611cb381846119aa565b90508181036040830152611cc681611aa7565b90509392505050565b6000602082019050611ce460008301846119f2565b92915050565b6000608082019050611cff6000830187611a01565b611d0c602083018661198c565b611d19604083018561198c565b8181036060830152611d2b81846119aa565b905095945050505050565b6000608082019050611d4b6000830187611a01565b611d58602083018661198c565b611d656040830185611a1f565b8181036060830152611d7781846119aa565b905095945050505050565b6000604082019050611d976000830185611a10565b611da460208301846119e3565b9392505050565b6000602082019050611dc06000830184611a1f565b92915050565b600060e082019050611ddb600083018a611a1f565b611de860208301896119f2565b611df5604083018861198c565b611e02606083018761199b565b8181036080830152611e148186611a2e565b9050611e2360a0830185611be7565b611e3060c0830184611be7565b98975050505050505050565b60006020820190508181036000830152611e568184611a2e565b905092915050565b60006020820190508181036000830152611e7781611a67565b9050919050565b60006020820190508181036000830152611e9781611ae7565b9050919050565b60006020820190508181036000830152611eb781611b27565b9050919050565b60006020820190508181036000830152611ed781611b67565b9050919050565b60006020820190508181036000830152611ef781611ba7565b9050919050565b6000602082019050611f136000830184611be7565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611f4057611f3f61218b565b5b8060405250919050565b600067ffffffffffffffff821115611f6557611f6461218b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fbd8261202e565b9150611fc88361202e565b925082611fd857611fd761212d565b5b828204905092915050565b6000611fee8261200e565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120438261204a565b9050919050565b60006120558261200e565b9050919050565b60006120678261206e565b9050919050565b60006120798261200e565b9050919050565b600061208b82612092565b9050919050565b600061209d8261200e565b9050919050565b60006120af826120b6565b9050919050565b60006120c18261200e565b9050919050565b60005b838110156120e65780820151818401526020810190506120cb565b838111156120f5576000848401525b50505050565b6000600282049050600182168061211357607f821691505b602082108114156121275761212661215c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6121d481611fe3565b81146121df57600080fd5b50565b6121eb81611ff5565b81146121f657600080fd5b50565b61220281612001565b811461220d57600080fd5b50565b6122198161202e565b811461222457600080fd5b5056fea26469706673582212206a5491999b82a47319233b792d2536be71bd630226c3fe7776041c6c675512f364736f6c63430008000033a2646970667358221220a73181687532fd739bda5d12b747f26c7413f342d8deb331cdad5439a74f25bd64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x3A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x962A4948 EQ PUSH3 0x3F JUMPI DUP1 PUSH4 0xA32C47C4 EQ PUSH3 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x49 PUSH3 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x79 SWAP2 SWAP1 PUSH3 0x333 JUMP JUMPDEST PUSH3 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x107 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0xBC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x1A1 SWAP1 PUSH3 0x293 JUMP JUMPDEST PUSH3 0x1B3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E129934FD1C0E40F1B0F98F531DCE9E51F68CA6588C4D4DFDF7A9A233220780 DUP3 DUP8 DUP10 PUSH1 0x40 MLOAD PUSH3 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF DUP1 PUSH3 0x701 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2B2 DUP2 PUSH3 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C9 DUP2 PUSH3 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2E0 DUP2 PUSH3 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x35D DUP10 DUP3 DUP11 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x370 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x383 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x396 DUP10 DUP3 DUP11 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C2 DUP10 DUP3 DUP11 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF DUP4 DUP4 PUSH3 0x477 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F6 DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x409 DUP3 PUSH3 0x5B3 JUMP JUMPDEST PUSH3 0x415 DUP2 DUP6 PUSH3 0x5CB JUMP JUMPDEST SWAP4 POP PUSH3 0x422 DUP4 PUSH3 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x459 JUMPI DUP2 MLOAD PUSH3 0x43D DUP9 DUP3 PUSH3 0x3D1 JUMP JUMPDEST SWAP8 POP PUSH3 0x44A DUP4 PUSH3 0x5BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x426 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x471 DUP2 PUSH3 0x642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x482 DUP2 PUSH3 0x66A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x493 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP4 DUP6 PUSH3 0x5DC JUMP JUMPDEST SWAP4 POP PUSH3 0x4B6 DUP4 DUP6 DUP5 PUSH3 0x692 JUMP JUMPDEST PUSH3 0x4C1 DUP4 PUSH3 0x6A1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x4E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x4F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x501 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x3EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x525 DUP2 DUP5 PUSH3 0x3FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x544 PUSH1 0x0 DUP4 ADD DUP11 PUSH3 0x466 JUMP JUMPDEST PUSH3 0x553 PUSH1 0x20 DUP4 ADD DUP10 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x562 PUSH1 0x40 DUP4 ADD DUP9 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 PUSH1 0x60 DUP4 ADD DUP8 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x580 PUSH1 0x80 DUP4 ADD DUP7 PUSH3 0x488 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH3 0x595 DUP2 DUP5 DUP7 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FA DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60E DUP3 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x64F DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x663 DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x677 DUP3 PUSH3 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x68B DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6BD DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP2 EQ PUSH3 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6D7 DUP2 PUSH3 0x601 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F1 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP2 EQ PUSH3 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29EF CODESIZE SUB DUP1 PUSH3 0x29EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C7 SWAP3 SWAP2 SWAP1 PUSH3 0x2EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x782 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2FD SWAP1 PUSH3 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x321 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x33C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x36D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x36C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x37C SWAP2 SWAP1 PUSH3 0x380 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x39B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x5AA JUMP JUMPDEST PUSH3 0x576 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3DC DUP5 DUP3 DUP6 PUSH3 0x650 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x40C DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43A DUP2 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x464 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x490 DUP5 DUP3 DUP6 ADD PUSH3 0x3FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4C3 DUP10 DUP3 DUP11 ADD PUSH3 0x412 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4D6 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4E9 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4FC DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x50F DUP10 DUP3 DUP11 ADD PUSH3 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53B DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x553 DUP2 PUSH3 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x6EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x6EB JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EA DUP3 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x670 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x653 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x725 DUP2 PUSH3 0x5DD JUMP JUMPDEST DUP2 EQ PUSH3 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x73F DUP2 PUSH3 0x5FB JUMP JUMPDEST DUP2 EQ PUSH3 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x759 DUP2 PUSH3 0x60F JUMP JUMPDEST DUP2 EQ PUSH3 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x623 JUMP JUMPDEST DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225D DUP1 PUSH3 0x792 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033A26469706673 PC 0x22 SLT KECCAK256 0xA7 BALANCE DUP2 PUSH9 0x7532FD739BDA5D12B7 SELFBALANCE CALLCODE PUSH13 0x7413F342D8DEB331CDAD5439A7 0x4F 0x25 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "223:805:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;545:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;913:112;962:28;1009:9;1002:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:112;:::o;545:362::-;321:5;;;;;;;;;;307:19;;:10;:19;;;299:28;;;;;;699:17:::1;732:4;738:9;749:6;757:5;::::0;::::1;;;;;;;;764:9;775:5;;719:62;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;699:82;;800:9;815:8;800:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:10;840:59;;;870:8;881:6;889:9;840:59;;;;;;;;:::i;:::-;;;;;;;;337:1;545:362:::0;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:179::-;;256:6;243:20;234:29;;272:53;319:5;272:53;:::i;:::-;224:107;;;;:::o;337:135::-;;419:6;406:20;397:29;;435:31;460:5;435:31;:::i;:::-;387:85;;;;:::o;492:352::-;;;610:3;603:4;595:6;591:17;587:27;577:2;;628:1;625;618:12;577:2;664:6;651:20;641:30;;694:18;686:6;683:30;680:2;;;726:1;723;716:12;680:2;763:4;755:6;751:17;739:29;;817:3;809:4;801:6;797:17;787:8;783:32;780:41;777:2;;;834:1;831;824:12;777:2;567:277;;;;;:::o;850:1013::-;;;;;;;1064:3;1052:9;1043:7;1039:23;1035:33;1032:2;;;1081:1;1078;1071:12;1032:2;1124:1;1149:73;1214:7;1205:6;1194:9;1190:22;1149:73;:::i;:::-;1139:83;;1095:137;1271:2;1297:53;1342:7;1333:6;1322:9;1318:22;1297:53;:::i;:::-;1287:63;;1242:118;1399:2;1425:53;1470:7;1461:6;1450:9;1446:22;1425:53;:::i;:::-;1415:63;;1370:118;1527:2;1553:51;1596:7;1587:6;1576:9;1572:22;1553:51;:::i;:::-;1543:61;;1498:116;1681:3;1670:9;1666:19;1653:33;1713:18;1705:6;1702:30;1699:2;;;1745:1;1742;1735:12;1699:2;1781:65;1838:7;1829:6;1818:9;1814:22;1781:65;:::i;:::-;1763:83;;;;1624:232;1022:841;;;;;;;;:::o;1869:213::-;;1976:63;2035:3;2027:6;1976:63;:::i;:::-;2071:4;2066:3;2062:14;2048:28;;1966:116;;;;:::o;2088:118::-;2175:24;2193:5;2175:24;:::i;:::-;2170:3;2163:37;2153:53;;:::o;2252:817::-;;2417:71;2482:5;2417:71;:::i;:::-;2504:86;2583:6;2578:3;2504:86;:::i;:::-;2497:93;;2614:73;2681:5;2614:73;:::i;:::-;2710:7;2741:1;2726:318;2751:6;2748:1;2745:13;2726:318;;;2827:6;2821:13;2854:80;2930:3;2915:13;2854:80;:::i;:::-;2847:87;;2957:77;3027:6;2957:77;:::i;:::-;2947:87;;2786:258;2773:1;2770;2766:9;2761:14;;2726:318;;;2730:14;3060:3;3053:10;;2393:676;;;;;;;:::o;3075:171::-;3182:57;3233:5;3182:57;:::i;:::-;3177:3;3170:70;3160:86;;:::o;3252:155::-;3346:54;3394:5;3346:54;:::i;:::-;3341:3;3334:67;3324:83;;:::o;3413:112::-;3496:22;3512:5;3496:22;:::i;:::-;3491:3;3484:35;3474:51;;:::o;3555:304::-;;3674:71;3738:6;3733:3;3674:71;:::i;:::-;3667:78;;3755:43;3791:6;3786:3;3779:5;3755:43;:::i;:::-;3823:29;3845:6;3823:29;:::i;:::-;3818:3;3814:39;3807:46;;3657:202;;;;;:::o;3865:442::-;;4052:2;4041:9;4037:18;4029:26;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;4146:72;4214:2;4203:9;4199:18;4190:6;4146:72;:::i;:::-;4228;4296:2;4285:9;4281:18;4272:6;4228:72;:::i;:::-;4019:288;;;;;;:::o;4313:407::-;;4511:2;4500:9;4496:18;4488:26;;4560:9;4554:4;4550:20;4546:1;4535:9;4531:17;4524:47;4588:125;4708:4;4699:6;4588:125;:::i;:::-;4580:133;;4478:242;;;;:::o;4726:918::-;;5043:3;5032:9;5028:19;5020:27;;5057:91;5145:1;5134:9;5130:17;5121:6;5057:91;:::i;:::-;5158:72;5226:2;5215:9;5211:18;5202:6;5158:72;:::i;:::-;5240;5308:2;5297:9;5293:18;5284:6;5240:72;:::i;:::-;5322;5390:2;5379:9;5375:18;5366:6;5322:72;:::i;:::-;5404:69;5468:3;5457:9;5453:19;5444:6;5404:69;:::i;:::-;5521:9;5515:4;5511:20;5505:3;5494:9;5490:19;5483:49;5549:88;5632:4;5623:6;5615;5549:88;:::i;:::-;5541:96;;5010:634;;;;;;;;;;:::o;5650:149::-;;5757:3;5749:11;;5787:4;5782:3;5778:14;5770:22;;5739:60;;;:::o;5805:131::-;;5923:5;5917:12;5907:22;;5896:40;;;:::o;5942:130::-;;6061:4;6056:3;6052:14;6044:22;;6034:38;;;:::o;6078:184::-;;6211:6;6206:3;6199:19;6251:4;6246:3;6242:14;6227:29;;6189:73;;;;:::o;6268:169::-;;6386:6;6381:3;6374:19;6426:4;6421:3;6417:14;6402:29;;6364:73;;;;:::o;6443:96::-;;6509:24;6527:5;6509:24;:::i;:::-;6498:35;;6488:51;;;:::o;6545:116::-;;6631:24;6649:5;6631:24;:::i;:::-;6620:35;;6610:51;;;:::o;6667:91::-;;6746:5;6742:2;6731:21;6720:32;;6710:48;;;:::o;6764:126::-;;6841:42;6834:5;6830:54;6819:65;;6809:81;;;:::o;6896:166::-;;6999:57;7050:5;6999:57;:::i;:::-;6986:70;;6976:86;;;:::o;7068:133::-;;7171:24;7189:5;7171:24;:::i;:::-;7158:37;;7148:53;;;:::o;7207:160::-;;7307:54;7355:5;7307:54;:::i;:::-;7294:67;;7284:83;;;:::o;7373:130::-;;7473:24;7491:5;7473:24;:::i;:::-;7460:37;;7450:53;;;:::o;7509:154::-;7593:6;7588:3;7583;7570:30;7655:1;7646:6;7641:3;7637:16;7630:27;7560:103;;;:::o;7669:102::-;;7761:2;7757:7;7752:2;7745:5;7741:14;7737:28;7727:38;;7717:54;;;:::o;7777:122::-;7850:24;7868:5;7850:24;:::i;:::-;7843:5;7840:35;7830:2;;7889:1;7886;7879:12;7830:2;7820:79;:::o;7905:162::-;7998:44;8036:5;7998:44;:::i;:::-;7991:5;7988:55;7978:2;;8057:1;8054;8047:12;7978:2;7968:99;:::o;8073:118::-;8144:22;8160:5;8144:22;:::i;:::-;8137:5;8134:33;8124:2;;8181:1;8178;8171:12;8124:2;8114:77;:::o"
            },
            "methodIdentifiers": {
              "createNewStream(address,address,address,int96,string)": "a32c47c4",
              "getAllStreamers()": "962a4948"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"streamAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"newStream\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createNewStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStreamers\",\"outputs\":[{\"internalType\":\"contract Streamer[]\",\"name\":\"_streamers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Controller.sol\":\"Controller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]},\"contracts/Controller.sol\":{\"keccak256\":\"0x7f3684ccccbcbc228e927b1b5033f84aaadd70767430cc71009a0e5836063a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f353a111d83e800e0b9c8b46a854134ccffba3caff52ae06b4281890d97919da\",\"dweb:/ipfs/QmWoRk3ji7SLP1Wba7Zr8MuCMU4cAs5cL3mQfLwz82JSPm\"]},\"contracts/Streamer.sol\":{\"keccak256\":\"0x884c1a80df2603c456356f318dffc83ede3c56b44b13cbd20f0840f8887c8565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc23147bc8f49636d9831595ead9ec345c2f9c6cb50a6a74b195edc0a6621a67\",\"dweb:/ipfs/QmXNAQw5ir33nsASqhydT2TBE4CRGEUw2xscngSDzn38t7\"]}},\"version\":1}"
        }
      },
      "contracts/ControllerFactory.sol": {
        "ControllerFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "newController",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "deactivateController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deployController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getController",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506137a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063111f1f60146100465780633018205f146100505780637cc9788e1461006e575b600080fd5b61004e610078565b005b6100586101c6565b604051610065919061049b565b60405180910390f35b61007661022c565b005b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013d906104b6565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906104d6565b60405180910390fd5b600033604051610308906103ff565b610312919061049b565b604051809103906000f08015801561032e573d6000803e3d6000fd5b509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f4e86881fac0380386a30750e414f06a5314c48d4c8a8f08df75d0dca4f66c1f0826040516103f4919061049b565b60405180910390a250565b6132338061053a83390190565b61041581610507565b82525050565b6000610428601a836104f6565b91507f596f7520646f6e2774206f776e206120636f6e74726f6c6c65720000000000006000830152602082019050919050565b6000610468601c836104f6565b91507f596f7520616c7265616479206f776e206120636f6e74726f6c6c6572000000006000830152602082019050919050565b60006020820190506104b0600083018461040c565b92915050565b600060208201905081810360008301526104cf8161041b565b9050919050565b600060208201905081810360008301526104ef8161045b565b9050919050565b600082825260208201905092915050565b600061051282610519565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fe608060405234801561001057600080fd5b506040516132333803806132338339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6131258061010e6000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c8063962a4948146200003f578063a32c47c41462000061575b600080fd5b6200004962000081565b60405162000058919062000509565b60405180910390f35b6200007f600480360381019062000079919062000333565b62000111565b005b606060018054806020026020016040519081016040528092919081815260200182805480156200010757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620000bc575b5050505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200016a57600080fd5b600086868660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16878787604051620001a19062000293565b620001b397969594939291906200052d565b604051809103906000f080158015620001d0573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f1e129934fd1c0e40f1b0f98f531dce9e51f68ca6588c4d4dfdf7a9a2332207808287896040516200028293929190620004cc565b60405180910390a250505050505050565b6129ef806200070183390190565b600081359050620002b281620006b2565b92915050565b600081359050620002c981620006cc565b92915050565b600081359050620002e081620006e6565b92915050565b60008083601f840112620002f957600080fd5b8235905067ffffffffffffffff8111156200031357600080fd5b6020830191508360018202830111156200032c57600080fd5b9250929050565b60008060008060008060a087890312156200034d57600080fd5b60006200035d89828a01620002b8565b96505060206200037089828a01620002a1565b95505060406200038389828a01620002a1565b94505060606200039689828a01620002cf565b935050608087013567ffffffffffffffff811115620003b457600080fd5b620003c289828a01620002e6565b92509250509295509295509295565b6000620003df838362000477565b60208301905092915050565b620003f681620005ed565b82525050565b60006200040982620005b3565b620004158185620005cb565b93506200042283620005a3565b8060005b83811015620004595781516200043d8882620003d1565b97506200044a83620005be565b92505060018101905062000426565b5085935050505092915050565b620004718162000642565b82525050565b62000482816200066a565b82525050565b620004938162000615565b82525050565b6000620004a78385620005dc565b9350620004b683858462000692565b620004c183620006a1565b840190509392505050565b6000606082019050620004e36000830186620003eb565b620004f26020830185620003eb565b620005016040830184620003eb565b949350505050565b60006020820190508181036000830152620005258184620003fc565b905092915050565b600060c08201905062000544600083018a62000466565b620005536020830189620003eb565b620005626040830188620003eb565b620005716060830187620003eb565b62000580608083018662000488565b81810360a08301526200059581848662000499565b905098975050505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620005fa8262000622565b9050919050565b60006200060e82620005ed565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200064f8262000656565b9050919050565b6000620006638262000622565b9050919050565b600062000677826200067e565b9050919050565b60006200068b8262000622565b9050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b620006bd81620005ed565b8114620006c957600080fd5b50565b620006d78162000601565b8114620006e357600080fd5b50565b620006f18162000615565b8114620006fd57600080fd5b5056fe60806040523480156200001157600080fd5b50604051620029ef380380620029ef833981810160405281019062000037919062000499565b60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000b9919062000559565b60206040518083038186803b158015620000d257600080fd5b505afa158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200046d565b73ffffffffffffffffffffffffffffffffffffffff16815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055508060029080519060200190620002c7929190620002ef565b506000600160146101000a81548160ff02191690831515021790555050505050505062000782565b828054620002fd9062000686565b90600052602060002090601f0160209004810192826200032157600085556200036d565b82601f106200033c57805160ff19168380011785556200036d565b828001600101855582156200036d579182015b828111156200036c5782518255916020019190600101906200034f565b5b5090506200037c919062000380565b5090565b5b808211156200039b57600081600090555060010162000381565b5090565b6000620003b6620003b084620005aa565b62000576565b905082815260208101848484011115620003cf57600080fd5b620003dc84828562000650565b509392505050565b600081519050620003f5816200071a565b92915050565b6000815190506200040c8162000734565b92915050565b60008151905062000423816200074e565b92915050565b6000815190506200043a8162000768565b92915050565b600082601f8301126200045257600080fd5b8151620004648482602086016200039f565b91505092915050565b6000602082840312156200048057600080fd5b60006200049084828501620003fb565b91505092915050565b60008060008060008060c08789031215620004b357600080fd5b6000620004c389828a0162000412565b9650506020620004d689828a01620003e4565b9550506040620004e989828a01620003e4565b9450506060620004fc89828a01620003e4565b93505060806200050f89828a0162000429565b92505060a087015167ffffffffffffffff8111156200052d57600080fd5b6200053b89828a0162000440565b9150509295509295509295565b6200055381620005f1565b82525050565b600060208201905062000570600083018462000548565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620005a0576200059f620006eb565b5b8060405250919050565b600067ffffffffffffffff821115620005c857620005c7620006eb565b5b601f19601f8301169050602081019050919050565b6000620005ea8262000630565b9050919050565b6000819050919050565b60006200060882620005dd565b9050919050565b60006200061c82620005dd565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200067057808201518184015260208101905062000653565b8381111562000680576000848401525b50505050565b600060028204905060018216806200069f57607f821691505b60208210811415620006b657620006b5620006bc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200072581620005dd565b81146200073157600080fd5b50565b6200073f81620005fb565b81146200074b57600080fd5b50565b62000759816200060f565b81146200076557600080fd5b50565b620007738162000623565b81146200077f57600080fd5b50565b61225d80620007926000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b914616111610097578063d3112b2e11610066578063d3112b2e14610243578063f7260d3e14610262578063fc0c546a14610280578063ffe5c5521461029e57610100565b8063b9146161146101cf578063c47f0027146101ed578063ca13bf6514610209578063cca3a90e1461022757610100565b80635a096b2f116100d35780635a096b2f1461017b5780639dad93821461019f578063b6b55f25146101a9578063b87fe774146101c557610100565b806302fb0c5e1461010557806306fdde031461012357806312065fe0146101415780632e1a7d4d1461015f575b600080fd5b61010d6102a8565b60405161011a9190611c71565b60405180910390f35b61012b6102bb565b6040516101389190611e3c565b60405180910390f35b610149610349565b6040516101569190611efe565b60405180910390f35b6101796004803603810190610174919061193a565b6103fa565b005b6101836105dd565b6040516101969796959493929190611dc6565b60405180910390f35b6101a76107ed565b005b6101c360048036038101906101be919061193a565b6109c9565b005b6101cd610b1b565b005b6101d7610c0e565b6040516101e49190611efe565b60405180910390f35b610207600480360381019061020291906118f5565b610ce7565b005b610211610cfd565b60405161021e9190611dab565b60405180910390f35b610241600480360381019061023c919061184f565b610d0e565b005b61024b610e49565b604051610259929190611d82565b60405180910390f35b61026a610e9b565b6040516102779190611bf6565b60405180910390f35b610288610ec1565b6040516102959190611ccf565b60405180910390f35b6102a6610ee7565b005b600160149054906101000a900460ff1681565b600280546102c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906120fb565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a59190611bf6565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611963565b905090565b806000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104569190611bf6565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611963565b10156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611ede565b60405180910390fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610545929190611c48565b602060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061188b565b9050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611ebe565b60405180910390fd5b5050565b600080600080606060008060008054906101000a9004600b0b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900460ff1660023073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561069457600080fd5b505afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611963565b3073ffffffffffffffffffffffffffffffffffffffff1663b91461616040518163ffffffff1660e01b815260040160206040518083038186803b15801561071257600080fd5b505afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611963565b828054610756906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906120fb565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b50505050509250965096509650965096509650965090919293949596565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084757600080fd5b60011515600160149054906101000a900460ff1615151461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611e9e565b60405180910390fd5b6108f933600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b6109ac6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109579190611bf6565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611963565b6103fa565b6000600160146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2357600080fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a8393929190611c11565b602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061188b565b905080610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611ebe565b60405180910390fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7557600080fd5b60011515600160149054906101000a900460ff16151514610b9557600080fd5b6000600160146101000a81548160ff021916908315150217905550610c0c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b565b60008060009054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c889190611bf6565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611963565b610ce29190611fb2565b905090565b818160029190610cf8929190611691565b505050565b60008054906101000a9004600b0b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6857600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff160217905550610e45600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046112f3909392919063ffffffff16565b5050565b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4157600080fd5b60001515600160149054906101000a900460ff16151514610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90611e5e565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555060008054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110289190611bf6565b60206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611963565b10156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e7e565b60405180910390fd5b611122600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046114c2909392919063ffffffff16565b565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff8111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112075781602001600182028036833780820191505090505b5060405160240161121b9493929190611cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611295929190611c8c565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112ec91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff8111156113a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b506040516024016113ea9493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611464929190611c8c565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114bb91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115611573577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115a55781602001600182028036833780820191505090505b506040516024016115b99493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611633929190611c8c565b600060405180830381600087803b15801561164d57600080fd5b505af1158015611661573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061168a91906118b4565b5050505050565b82805461169d906120fb565b90600052602060002090601f0160209004810192826116bf5760008555611706565b82601f106116d857803560ff1916838001178555611706565b82800160010185558215611706579182015b828111156117055782358255916020019190600101906116ea565b5b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600061174761174284611f4a565b611f19565b90508281526020810184848401111561175f57600080fd5b61176a8482856120c8565b509392505050565b600081359050611781816121cb565b92915050565b600081519050611796816121e2565b92915050565b600082601f8301126117ad57600080fd5b81516117bd848260208601611734565b91505092915050565b6000813590506117d5816121f9565b92915050565b60008083601f8401126117ed57600080fd5b8235905067ffffffffffffffff81111561180657600080fd5b60208301915083600182028301111561181e57600080fd5b9250929050565b60008135905061183481612210565b92915050565b60008151905061184981612210565b92915050565b6000806040838503121561186257600080fd5b600061187085828601611772565b9250506020611881858286016117c6565b9150509250929050565b60006020828403121561189d57600080fd5b60006118ab84828501611787565b91505092915050565b6000602082840312156118c657600080fd5b600082015167ffffffffffffffff8111156118e057600080fd5b6118ec8482850161179c565b91505092915050565b6000806020838503121561190857600080fd5b600083013567ffffffffffffffff81111561192257600080fd5b61192e858286016117db565b92509250509250929050565b60006020828403121561194c57600080fd5b600061195a84828501611825565b91505092915050565b60006020828403121561197557600080fd5b60006119838482850161183a565b91505092915050565b61199581611fe3565b82525050565b6119a481611ff5565b82525050565b60006119b582611f7a565b6119bf8185611f90565b93506119cf8185602086016120c8565b6119d8816121ba565b840191505092915050565b6119ec81612038565b82525050565b6119fb8161205c565b82525050565b611a0a81612080565b82525050565b611a19816120a4565b82525050565b611a2881612001565b82525050565b6000611a3982611f85565b611a438185611fa1565b9350611a538185602086016120c8565b611a5c816121ba565b840191505092915050565b6000611a74601883611fa1565b91507f612073747265616d20697320616c7265616479206f70656e00000000000000006000830152602082019050919050565b6000611ab4600283611f90565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000611af4601d83611fa1565b91507f4e6f7420656e6f7567682062616c616e6365206465706f73697465642e0000006000830152602082019050919050565b6000611b34601683611fa1565b91507f7468652073747265616d206973206e6f74206f70656e000000000000000000006000830152602082019050919050565b6000611b74601683611fa1565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b6000611bb4601383611fa1565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b611bf08161202e565b82525050565b6000602082019050611c0b600083018461198c565b92915050565b6000606082019050611c26600083018661198c565b611c33602083018561198c565b611c406040830184611be7565b949350505050565b6000604082019050611c5d600083018561198c565b611c6a6020830184611be7565b9392505050565b6000602082019050611c86600083018461199b565b92915050565b6000606082019050611ca160008301856119e3565b8181036020830152611cb381846119aa565b90508181036040830152611cc681611aa7565b90509392505050565b6000602082019050611ce460008301846119f2565b92915050565b6000608082019050611cff6000830187611a01565b611d0c602083018661198c565b611d19604083018561198c565b8181036060830152611d2b81846119aa565b905095945050505050565b6000608082019050611d4b6000830187611a01565b611d58602083018661198c565b611d656040830185611a1f565b8181036060830152611d7781846119aa565b905095945050505050565b6000604082019050611d976000830185611a10565b611da460208301846119e3565b9392505050565b6000602082019050611dc06000830184611a1f565b92915050565b600060e082019050611ddb600083018a611a1f565b611de860208301896119f2565b611df5604083018861198c565b611e02606083018761199b565b8181036080830152611e148186611a2e565b9050611e2360a0830185611be7565b611e3060c0830184611be7565b98975050505050505050565b60006020820190508181036000830152611e568184611a2e565b905092915050565b60006020820190508181036000830152611e7781611a67565b9050919050565b60006020820190508181036000830152611e9781611ae7565b9050919050565b60006020820190508181036000830152611eb781611b27565b9050919050565b60006020820190508181036000830152611ed781611b67565b9050919050565b60006020820190508181036000830152611ef781611ba7565b9050919050565b6000602082019050611f136000830184611be7565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611f4057611f3f61218b565b5b8060405250919050565b600067ffffffffffffffff821115611f6557611f6461218b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fbd8261202e565b9150611fc88361202e565b925082611fd857611fd761212d565b5b828204905092915050565b6000611fee8261200e565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120438261204a565b9050919050565b60006120558261200e565b9050919050565b60006120678261206e565b9050919050565b60006120798261200e565b9050919050565b600061208b82612092565b9050919050565b600061209d8261200e565b9050919050565b60006120af826120b6565b9050919050565b60006120c18261200e565b9050919050565b60005b838110156120e65780820151818401526020810190506120cb565b838111156120f5576000848401525b50505050565b6000600282049050600182168061211357607f821691505b602082108114156121275761212661215c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6121d481611fe3565b81146121df57600080fd5b50565b6121eb81611ff5565b81146121f657600080fd5b50565b61220281612001565b811461220d57600080fd5b50565b6122198161202e565b811461222457600080fd5b5056fea26469706673582212206a5491999b82a47319233b792d2536be71bd630226c3fe7776041c6c675512f364736f6c63430008000033a2646970667358221220a73181687532fd739bda5d12b747f26c7413f342d8deb331cdad5439a74f25bd64736f6c63430008000033a26469706673582212201b98d5c83e9561a5c2eb911c736c0e9ca89eb7f37654aa2b9bdfecd5705ba3bb64736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37A2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x111F1F60 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3018205F EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x7CC9788E EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D SWAP1 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH2 0x308 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E86881FAC0380386A30750E414F06A5314C48D4C8A8F08DF75D0DCA4F66C1F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3233 DUP1 PUSH2 0x53A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH1 0x1A DUP4 PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520646F6E2774206F776E206120636F6E74726F6C6C6572000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 PUSH1 0x1C DUP4 PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520616C7265616479206F776E206120636F6E74726F6C6C657200000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF DUP2 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3233 CODESIZE SUB DUP1 PUSH2 0x3233 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3125 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x3A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x962A4948 EQ PUSH3 0x3F JUMPI DUP1 PUSH4 0xA32C47C4 EQ PUSH3 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x49 PUSH3 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x79 SWAP2 SWAP1 PUSH3 0x333 JUMP JUMPDEST PUSH3 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x107 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0xBC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x1A1 SWAP1 PUSH3 0x293 JUMP JUMPDEST PUSH3 0x1B3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E129934FD1C0E40F1B0F98F531DCE9E51F68CA6588C4D4DFDF7A9A233220780 DUP3 DUP8 DUP10 PUSH1 0x40 MLOAD PUSH3 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF DUP1 PUSH3 0x701 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2B2 DUP2 PUSH3 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C9 DUP2 PUSH3 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2E0 DUP2 PUSH3 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x35D DUP10 DUP3 DUP11 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x370 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x383 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x396 DUP10 DUP3 DUP11 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C2 DUP10 DUP3 DUP11 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF DUP4 DUP4 PUSH3 0x477 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F6 DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x409 DUP3 PUSH3 0x5B3 JUMP JUMPDEST PUSH3 0x415 DUP2 DUP6 PUSH3 0x5CB JUMP JUMPDEST SWAP4 POP PUSH3 0x422 DUP4 PUSH3 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x459 JUMPI DUP2 MLOAD PUSH3 0x43D DUP9 DUP3 PUSH3 0x3D1 JUMP JUMPDEST SWAP8 POP PUSH3 0x44A DUP4 PUSH3 0x5BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x426 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x471 DUP2 PUSH3 0x642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x482 DUP2 PUSH3 0x66A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x493 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP4 DUP6 PUSH3 0x5DC JUMP JUMPDEST SWAP4 POP PUSH3 0x4B6 DUP4 DUP6 DUP5 PUSH3 0x692 JUMP JUMPDEST PUSH3 0x4C1 DUP4 PUSH3 0x6A1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x4E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x4F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x501 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x3EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x525 DUP2 DUP5 PUSH3 0x3FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x544 PUSH1 0x0 DUP4 ADD DUP11 PUSH3 0x466 JUMP JUMPDEST PUSH3 0x553 PUSH1 0x20 DUP4 ADD DUP10 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x562 PUSH1 0x40 DUP4 ADD DUP9 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 PUSH1 0x60 DUP4 ADD DUP8 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x580 PUSH1 0x80 DUP4 ADD DUP7 PUSH3 0x488 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH3 0x595 DUP2 DUP5 DUP7 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FA DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60E DUP3 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x64F DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x663 DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x677 DUP3 PUSH3 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x68B DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6BD DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP2 EQ PUSH3 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6D7 DUP2 PUSH3 0x601 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F1 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP2 EQ PUSH3 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29EF CODESIZE SUB DUP1 PUSH3 0x29EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C7 SWAP3 SWAP2 SWAP1 PUSH3 0x2EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x782 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2FD SWAP1 PUSH3 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x321 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x33C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x36D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x36C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x37C SWAP2 SWAP1 PUSH3 0x380 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x39B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x5AA JUMP JUMPDEST PUSH3 0x576 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3DC DUP5 DUP3 DUP6 PUSH3 0x650 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x40C DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43A DUP2 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x464 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x490 DUP5 DUP3 DUP6 ADD PUSH3 0x3FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4C3 DUP10 DUP3 DUP11 ADD PUSH3 0x412 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4D6 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4E9 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4FC DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x50F DUP10 DUP3 DUP11 ADD PUSH3 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53B DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x553 DUP2 PUSH3 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x6EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x6EB JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EA DUP3 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x670 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x653 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x725 DUP2 PUSH3 0x5DD JUMP JUMPDEST DUP2 EQ PUSH3 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x73F DUP2 PUSH3 0x5FB JUMP JUMPDEST DUP2 EQ PUSH3 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x759 DUP2 PUSH3 0x60F JUMP JUMPDEST DUP2 EQ PUSH3 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x623 JUMP JUMPDEST DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225D DUP1 PUSH3 0x792 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033A26469706673 PC 0x22 SLT KECCAK256 0xA7 BALANCE DUP2 PUSH9 0x7532FD739BDA5D12B7 SELFBALANCE CALLCODE PUSH13 0x7413F342D8DEB331CDAD5439A7 0x4F 0x25 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP9 0xD5 0xC8 RETURNDATACOPY SWAP6 PUSH2 0xA5C2 0xEB SWAP2 SHR PUSH20 0x6C0E9CA89EB7F37654AA2B9BDFECD5705BA3BB64 PUSH20 0x6F6C634300080000330000000000000000000000 ",
              "sourceMap": "111:802:15:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2277:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "72:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "89:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "112:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "94:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "94:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "82:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "60:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "67:3:17",
                            "type": ""
                          }
                        ],
                        "src": "7:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "277:178:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "287:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "353:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "358:2:17",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "294:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "294:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "287:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "382:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "387:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "378:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "378:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "391:28:17",
                                    "type": "",
                                    "value": "You don't own a controller"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "371:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "371:49:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "371:49:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "430:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "441:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "446:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "437:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "437:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "430:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "265:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "273:3:17",
                            "type": ""
                          }
                        ],
                        "src": "131:324:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "607:180:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "617:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "683:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "688:2:17",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "712:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "717:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "708:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "708:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "721:30:17",
                                    "type": "",
                                    "value": "You already own a controller"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "701:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "701:51:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "701:51:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "762:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "773:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "778:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "769:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "769:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "762:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "595:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "603:3:17",
                            "type": ""
                          }
                        ],
                        "src": "461:326:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "891:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "901:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "913:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "924:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "909:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "909:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "981:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "994:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1005:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "990:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "990:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "937:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "937:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "937:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "863:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "875:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "886:4:17",
                            "type": ""
                          }
                        ],
                        "src": "793:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1192:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1202:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1214:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1225:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1210:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1210:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1202:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1249:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1260:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1245:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1245:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "1268:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1274:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1264:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1264:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1238:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1238:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1238:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1294:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1428:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1302:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1294:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1172:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1187:4:17",
                            "type": ""
                          }
                        ],
                        "src": "1021:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1617:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1627:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1639:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1650:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1635:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1635:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1627:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1674:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1685:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1670:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1670:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "1693:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1699:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1689:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1689:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1663:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1663:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1663:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1719:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "1853:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "1727:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1727:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1719:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1597:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1612:4:17",
                            "type": ""
                          }
                        ],
                        "src": "1446:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1967:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1984:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1989:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1977:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1977:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1977:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2005:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2024:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2029:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2020:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2020:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2005:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1939:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1944:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "1955:11:17",
                            "type": ""
                          }
                        ],
                        "src": "1871:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2091:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2101:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2130:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2112:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2112:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2101:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2073:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2083:7:17",
                            "type": ""
                          }
                        ],
                        "src": "2046:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2193:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2203:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2218:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2225:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2214:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2214:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2203:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2175:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2185:7:17",
                            "type": ""
                          }
                        ],
                        "src": "2148:126:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"You don't own a controller\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"You already own a controller\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x111F1F60 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3018205F EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x7CC9788E EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x22C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D SWAP1 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH2 0x308 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E86881FAC0380386A30750E414F06A5314C48D4C8A8F08DF75D0DCA4F66C1F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x3233 DUP1 PUSH2 0x53A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x415 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428 PUSH1 0x1A DUP4 PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520646F6E2774206F776E206120636F6E74726F6C6C6572000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x468 PUSH1 0x1C DUP4 PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520616C7265616479206F776E206120636F6E74726F6C6C657200000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CF DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4EF DUP2 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3233 CODESIZE SUB DUP1 PUSH2 0x3233 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0xE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD DUP5 DUP3 DUP6 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1 DUP2 PUSH2 0xB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3125 DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x3A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x962A4948 EQ PUSH3 0x3F JUMPI DUP1 PUSH4 0xA32C47C4 EQ PUSH3 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x49 PUSH3 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x79 SWAP2 SWAP1 PUSH3 0x333 JUMP JUMPDEST PUSH3 0x111 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x107 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0xBC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x1A1 SWAP1 PUSH3 0x293 JUMP JUMPDEST PUSH3 0x1B3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E129934FD1C0E40F1B0F98F531DCE9E51F68CA6588C4D4DFDF7A9A233220780 DUP3 DUP8 DUP10 PUSH1 0x40 MLOAD PUSH3 0x282 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29EF DUP1 PUSH3 0x701 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2B2 DUP2 PUSH3 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2C9 DUP2 PUSH3 0x6CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x2E0 DUP2 PUSH3 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH3 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH3 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x35D DUP10 DUP3 DUP11 ADD PUSH3 0x2B8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x370 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x383 DUP10 DUP3 DUP11 ADD PUSH3 0x2A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x396 DUP10 DUP3 DUP11 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3C2 DUP10 DUP3 DUP11 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF DUP4 DUP4 PUSH3 0x477 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F6 DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x409 DUP3 PUSH3 0x5B3 JUMP JUMPDEST PUSH3 0x415 DUP2 DUP6 PUSH3 0x5CB JUMP JUMPDEST SWAP4 POP PUSH3 0x422 DUP4 PUSH3 0x5A3 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x459 JUMPI DUP2 MLOAD PUSH3 0x43D DUP9 DUP3 PUSH3 0x3D1 JUMP JUMPDEST SWAP8 POP PUSH3 0x44A DUP4 PUSH3 0x5BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x426 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x471 DUP2 PUSH3 0x642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x482 DUP2 PUSH3 0x66A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x493 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4A7 DUP4 DUP6 PUSH3 0x5DC JUMP JUMPDEST SWAP4 POP PUSH3 0x4B6 DUP4 DUP6 DUP5 PUSH3 0x692 JUMP JUMPDEST PUSH3 0x4C1 DUP4 PUSH3 0x6A1 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x4E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x4F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x501 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x3EB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x525 DUP2 DUP5 PUSH3 0x3FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH3 0x544 PUSH1 0x0 DUP4 ADD DUP11 PUSH3 0x466 JUMP JUMPDEST PUSH3 0x553 PUSH1 0x20 DUP4 ADD DUP10 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x562 PUSH1 0x40 DUP4 ADD DUP9 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x571 PUSH1 0x60 DUP4 ADD DUP8 PUSH3 0x3EB JUMP JUMPDEST PUSH3 0x580 PUSH1 0x80 DUP4 ADD DUP7 PUSH3 0x488 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH3 0x595 DUP2 DUP5 DUP7 PUSH3 0x499 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5FA DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x60E DUP3 PUSH3 0x5ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x64F DUP3 PUSH3 0x656 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x663 DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x677 DUP3 PUSH3 0x67E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x68B DUP3 PUSH3 0x622 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6BD DUP2 PUSH3 0x5ED JUMP JUMPDEST DUP2 EQ PUSH3 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6D7 DUP2 PUSH3 0x601 JUMP JUMPDEST DUP2 EQ PUSH3 0x6E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x6F1 DUP2 PUSH3 0x615 JUMP JUMPDEST DUP2 EQ PUSH3 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29EF CODESIZE SUB DUP1 PUSH3 0x29EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C7 SWAP3 SWAP2 SWAP1 PUSH3 0x2EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x782 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2FD SWAP1 PUSH3 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x321 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x33C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x36D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x36C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x37C SWAP2 SWAP1 PUSH3 0x380 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x39B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x5AA JUMP JUMPDEST PUSH3 0x576 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3DC DUP5 DUP3 DUP6 PUSH3 0x650 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x40C DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43A DUP2 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x464 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x490 DUP5 DUP3 DUP6 ADD PUSH3 0x3FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4C3 DUP10 DUP3 DUP11 ADD PUSH3 0x412 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4D6 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4E9 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4FC DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x50F DUP10 DUP3 DUP11 ADD PUSH3 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53B DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x553 DUP2 PUSH3 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x6EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x6EB JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EA DUP3 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x670 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x653 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x725 DUP2 PUSH3 0x5DD JUMP JUMPDEST DUP2 EQ PUSH3 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x73F DUP2 PUSH3 0x5FB JUMP JUMPDEST DUP2 EQ PUSH3 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x759 DUP2 PUSH3 0x60F JUMP JUMPDEST DUP2 EQ PUSH3 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x623 JUMP JUMPDEST DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225D DUP1 PUSH3 0x792 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033A26469706673 PC 0x22 SLT KECCAK256 0xA7 BALANCE DUP2 PUSH9 0x7532FD739BDA5D12B7 SELFBALANCE CALLCODE PUSH13 0x7413F342D8DEB331CDAD5439A7 0x4F 0x25 0xBD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP9 0xD5 0xC8 RETURNDATACOPY SWAP6 PUSH2 0xA5C2 0xEB SWAP2 SHR PUSH20 0x6C0E9CA89EB7F37654AA2B9BDFECD5705BA3BB64 PUSH20 0x6F6C634300080000330000000000000000000000 ",
              "sourceMap": "111:802:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:185;;;:::i;:::-;;601:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:321;;;:::i;:::-;;725:185;818:3;783:39;;:11;:23;795:10;783:23;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;775:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;898:3;864:11;:23;876:10;864:23;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;725:185::o;601:116::-;648:18;686:11;:23;698:10;686:23;;;;;;;;;;;;;;;;;;;;;;;;;679:30;;601:116;:::o;272:321::-;363:3;328:39;;:11;:23;340:10;328:23;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;320:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;413:21;452:10;437:26;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;413:50;;510:10;476:11;:23;488:10;476:23;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;553:10;539:46;;;573:10;539:46;;;;;;:::i;:::-;;;;;;;;272:321;:::o;-1:-1:-1:-;;;;;;;;:::o;7:118:17:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:324::-;;294:67;358:2;353:3;294:67;:::i;:::-;287:74;;391:28;387:1;382:3;378:11;371:49;446:2;441:3;437:12;430:19;;277:178;;;:::o;461:326::-;;624:67;688:2;683:3;624:67;:::i;:::-;617:74;;721:30;717:1;712:3;708:11;701:51;778:2;773:3;769:12;762:19;;607:180;;;:::o;793:222::-;;924:2;913:9;909:18;901:26;;937:71;1005:1;994:9;990:17;981:6;937:71;:::i;:::-;891:124;;;;:::o;1021:419::-;;1225:2;1214:9;1210:18;1202:26;;1274:9;1268:4;1264:20;1260:1;1249:9;1245:17;1238:47;1302:131;1428:4;1302:131;:::i;:::-;1294:139;;1192:248;;;:::o;1446:419::-;;1650:2;1639:9;1635:18;1627:26;;1699:9;1693:4;1689:20;1685:1;1674:9;1670:17;1663:47;1727:131;1853:4;1727:131;:::i;:::-;1719:139;;1617:248;;;:::o;1871:169::-;;1989:6;1984:3;1977:19;2029:4;2024:3;2020:14;2005:29;;1967:73;;;;:::o;2046:96::-;;2112:24;2130:5;2112:24;:::i;:::-;2101:35;;2091:51;;;:::o;2148:126::-;;2225:42;2218:5;2214:54;2203:65;;2193:81;;;:::o"
            },
            "methodIdentifiers": {
              "deactivateController()": "111f1f60",
              "deployController()": "7cc9788e",
              "getController()": "3018205f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"newController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deactivateController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ControllerFactory.sol\":\"ControllerFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]},\"contracts/Controller.sol\":{\"keccak256\":\"0x7f3684ccccbcbc228e927b1b5033f84aaadd70767430cc71009a0e5836063a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f353a111d83e800e0b9c8b46a854134ccffba3caff52ae06b4281890d97919da\",\"dweb:/ipfs/QmWoRk3ji7SLP1Wba7Zr8MuCMU4cAs5cL3mQfLwz82JSPm\"]},\"contracts/ControllerFactory.sol\":{\"keccak256\":\"0x196137de8d882b031b505e4fac8f36660d595bf115889edd565af7cf4614fe07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73500616888ddbdba5204e5019d12db8f817dab014355d498d5d3cc24c57281c\",\"dweb:/ipfs/QmSceFPs6hRKpdQ1VUK8whnJbvMhSr4f7AyccxemwtfSRw\"]},\"contracts/Streamer.sol\":{\"keccak256\":\"0x884c1a80df2603c456356f318dffc83ede3c56b44b13cbd20f0840f8887c8565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc23147bc8f49636d9831595ead9ec345c2f9c6cb50a6a74b195edc0a6621a67\",\"dweb:/ipfs/QmXNAQw5ir33nsASqhydT2TBE4CRGEUw2xscngSDzn38t7\"]}},\"version\":1}"
        }
      },
      "contracts/Streamer.sol": {
        "Streamer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "active",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cfaV1",
              "outputs": [
                {
                  "internalType": "contract ISuperfluid",
                  "name": "host",
                  "type": "address"
                },
                {
                  "internalType": "contract IConstantFlowAgreementV1",
                  "name": "cfa",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closeStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                }
              ],
              "name": "editStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "flowRate",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "",
                  "type": "int96"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStreamData",
              "outputs": [
                {
                  "internalType": "int96",
                  "name": "_flowRate",
                  "type": "int96"
                },
                {
                  "internalType": "contract ISuperToken",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_receiver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_active",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "_balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_eta",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStreamerETA",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "openStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseStream",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "receiver",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                }
              ],
              "name": "setName",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract ISuperToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:6152:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "102:258:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "112:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "178:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "136:41:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "136:49:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "121:14:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "121:65:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "112:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "202:5:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "209:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "195:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "195:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "195:21:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "225:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "240:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "247:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "236:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "236:16:17"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "229:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "290:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "299:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "302:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "292:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "292:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "292:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "271:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "276:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "267:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "267:16:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "285:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "264:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "264:25:17"
                              },
                              "nodeType": "YulIf",
                              "src": "261:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "337:3:17"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "342:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "347:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "315:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "315:39:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "315:39:17"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "75:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "80:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "88:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "96:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7:353:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "429:80:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "439:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "454:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "448:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "448:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "439:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "497:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "470:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "470:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "470:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "407:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "415:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "423:5:17",
                            "type": ""
                          }
                        ],
                        "src": "366:143:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "602:104:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "612:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "621:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "612:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "694:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperAgreement_$1276",
                                  "nodeType": "YulIdentifier",
                                  "src": "643:50:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "643:57:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "643:57:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperAgreement_$1276_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "580:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "588:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "596:5:17",
                            "type": ""
                          }
                        ],
                        "src": "515:191:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "795:100:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "805:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "820:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "814:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "814:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "883:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_ISuperfluid_$2287",
                                  "nodeType": "YulIdentifier",
                                  "src": "836:46:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "836:53:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "836:53:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_ISuperfluid_$2287_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "773:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "781:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "789:5:17",
                            "type": ""
                          }
                        ],
                        "src": "712:183:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "962:78:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "972:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "987:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "981:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "981:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "972:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1028:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1003:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1003:31:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "940:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "948:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "956:5:17",
                            "type": ""
                          }
                        ],
                        "src": "901:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1133:215:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1182:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1191:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1194:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1184:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1184:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1184:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1161:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1169:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1157:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1157:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1176:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1153:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1153:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1146:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1146:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1143:2:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1207:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1227:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1221:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1221:13:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1211:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1243:99:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1323:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1311:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1311:17:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1330:6:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1338:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1252:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1252:90:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1243:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1111:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1119:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1127:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1060:288:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1455:231:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1501:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1510:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1513:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1503:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1503:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1503:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1476:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1472:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1472:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1497:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1468:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1468:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1465:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1527:152:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1542:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1556:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1546:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1571:98:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1641:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1652:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1637:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1637:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1661:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperAgreement_$1276_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1581:55:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1581:88:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1571:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperAgreement_$1276_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1425:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1436:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1448:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1354:332:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1882:1019:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1929:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1938:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1941:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1931:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1931:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1931:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1903:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1912:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1899:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1899:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1924:3:17",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1895:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1895:33:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1892:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1955:148:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1970:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1984:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1974:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1999:94:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2065:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2076:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2061:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2061:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2085:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_ISuperfluid_$2287_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2009:51:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2009:84:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1999:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2113:129:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2128:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2142:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2132:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2158:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2204:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2215:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2200:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2200:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2224:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2168:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2168:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2158:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2252:129:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2267:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2281:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2271:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2297:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2343:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2354:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2339:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2339:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2363:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2307:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2307:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2297:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2391:129:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2406:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2420:2:17",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2410:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2436:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2482:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2493:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2478:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2478:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2502:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2446:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2446:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2436:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2530:128:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2545:17:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2559:3:17",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2549:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2576:72:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2620:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2631:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2616:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2616:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2640:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2586:29:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2586:62:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "2576:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2668:226:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2683:40:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2707:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2718:3:17",
                                            "type": "",
                                            "value": "160"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2703:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2703:19:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2697:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2697:26:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2687:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2770:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2779:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2782:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2772:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2772:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2772:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2742:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2750:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2739:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2739:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "2736:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2800:84:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2856:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2867:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2852:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2852:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2876:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2810:41:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2810:74:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "2800:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_ISuperfluid_$2287t_addresst_addresst_addresst_int96t_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1812:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1823:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1835:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1843:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1851:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1859:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1867:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1875:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1692:1209:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2972:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2989:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3012:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2994:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2994:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2982:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2982:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2982:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2960:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2967:3:17",
                            "type": ""
                          }
                        ],
                        "src": "2907:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3129:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3139:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3151:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3162:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3147:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3147:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3139:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3219:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3232:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3243:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3228:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3228:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3175:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3175:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3175:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3101:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3113:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3124:4:17",
                            "type": ""
                          }
                        ],
                        "src": "3031:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3299:243:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3309:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3325:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3319:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3319:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3309:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3337:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3359:6:17"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3367:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3355:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3355:17:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "3341:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3483:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3485:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3485:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3485:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3426:10:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3438:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3423:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3423:34:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3462:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3474:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3459:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3459:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "3420:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3420:62:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3417:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3521:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "3525:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3514:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3514:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3514:22:17"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "3283:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "3292:6:17",
                            "type": ""
                          }
                        ],
                        "src": "3259:283:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3615:265:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3720:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3722:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3722:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3722:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3692:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3700:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3689:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3689:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3686:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3772:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3788:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3796:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3784:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3784:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3807:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3803:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3803:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3780:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3780:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "3772:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3850:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3862:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3868:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3858:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3858:15:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "3850:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3599:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "3610:4:17",
                            "type": ""
                          }
                        ],
                        "src": "3548:332:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3931:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3941:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3970:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "3952:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3952:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3941:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3913:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3923:7:17",
                            "type": ""
                          }
                        ],
                        "src": "3886:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4033:32:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4043:16:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4054:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4043:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4015:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4025:7:17",
                            "type": ""
                          }
                        ],
                        "src": "3988:77:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4140:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4150:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4179:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4161:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4161:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4150:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperAgreement_$1276",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4122:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4132:7:17",
                            "type": ""
                          }
                        ],
                        "src": "4071:120:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4262:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4272:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4301:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4283:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4283:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4272:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_ISuperfluid_$2287",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4244:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4254:7:17",
                            "type": ""
                          }
                        ],
                        "src": "4197:116:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4362:48:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4372:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4394:2:17",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4398:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "4383:10:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4383:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4372:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4344:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4354:7:17",
                            "type": ""
                          }
                        ],
                        "src": "4319:91:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4461:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4471:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4486:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4493:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4482:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4482:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4471:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4443:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4453:7:17",
                            "type": ""
                          }
                        ],
                        "src": "4416:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4597:258:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4607:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4616:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4611:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4676:63:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "4701:3:17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4706:1:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4697:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4697:11:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4720:3:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4725:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4716:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4716:11:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4710:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4710:18:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4690:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4690:39:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4690:39:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4637:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4640:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4634:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4634:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4648:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4650:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4659:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4662:2:17",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4655:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4655:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4650:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4630:3:17",
                                "statements": []
                              },
                              "src": "4626:113:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4773:76:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "4823:3:17"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "4828:6:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4819:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4819:16:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4837:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4812:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4812:27:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4812:27:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4754:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4757:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4751:13:17"
                              },
                              "nodeType": "YulIf",
                              "src": "4748:2:17"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "4579:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "4584:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4589:6:17",
                            "type": ""
                          }
                        ],
                        "src": "4548:307:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4912:269:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4922:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "4936:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4942:1:17",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "4932:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4932:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4922:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4953:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "4983:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4989:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4979:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4979:12:17"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "4957:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5030:51:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5044:27:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "5058:6:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5066:4:17",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "5054:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5054:17:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5044:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "5010:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5003:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5000:2:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5133:42:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nodeType": "YulIdentifier",
                                        "src": "5147:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5147:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5147:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "5097:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5120:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5128:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5117:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5117:14:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "5094:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5094:38:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5091:2:17"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "4896:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4905:6:17",
                            "type": ""
                          }
                        ],
                        "src": "4861:320:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5215:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5232:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5235:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5225:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5225:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5225:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5329:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5332:4:17",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5322:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5322:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5322:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5353:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5356:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5346:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5346:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5346:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5187:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5401:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5418:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5421:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5411:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5411:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5411:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5515:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5518:4:17",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5508:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5508:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5508:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5539:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5542:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5532:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5532:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5532:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5373:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5602:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5659:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5668:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5671:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5661:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5661:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5661:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5625:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5650:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "5632:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5632:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5622:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5622:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5615:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5615:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5612:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5595:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5559:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5754:103:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5835:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5844:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5847:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5837:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5837:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5837:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5777:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5826:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperAgreement_$1276",
                                          "nodeType": "YulIdentifier",
                                          "src": "5784:41:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5784:48:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5774:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5774:59:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5767:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5767:67:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5764:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperAgreement_$1276",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5747:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5687:170:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5926:99:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6003:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6012:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6015:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6005:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6005:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6005:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5949:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5994:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_ISuperfluid_$2287",
                                          "nodeType": "YulIdentifier",
                                          "src": "5956:37:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5956:44:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "5946:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5946:55:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5939:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5939:63:17"
                              },
                              "nodeType": "YulIf",
                              "src": "5936:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_ISuperfluid_$2287",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5919:5:17",
                            "type": ""
                          }
                        ],
                        "src": "5863:162:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6072:77:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6127:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6136:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6139:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6129:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6129:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6129:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6095:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "6118:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "6102:15:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6102:22:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6092:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6092:33:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6085:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6085:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "6082:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6065:5:17",
                            "type": ""
                          }
                        ],
                        "src": "6031:118:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ISuperAgreement_$1276_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISuperAgreement_$1276(value)\n    }\n\n    function abi_decode_t_contract$_ISuperfluid_$2287_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISuperfluid_$2287(value)\n    }\n\n    function abi_decode_t_int96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperAgreement_$1276_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperAgreement_$1276_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ISuperfluid_$2287t_addresst_addresst_addresst_int96t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISuperfluid_$2287_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_int96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value5 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_contract$_ISuperAgreement_$1276(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_ISuperfluid_$2287(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperAgreement_$1276(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperAgreement_$1276(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISuperfluid_$2287(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISuperfluid_$2287(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b50604051620029ef380380620029ef833981810160405281019062000037919062000499565b60405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1663b6d200de7fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd36040518263ffffffff1660e01b8152600401620000b9919062000559565b60206040518083038186803b158015620000d257600080fd5b505afa158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200046d565b73ffffffffffffffffffffffffffffffffffffffff16815250600460008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff1602179055508060029080519060200190620002c7929190620002ef565b506000600160146101000a81548160ff02191690831515021790555050505050505062000782565b828054620002fd9062000686565b90600052602060002090601f0160209004810192826200032157600085556200036d565b82601f106200033c57805160ff19168380011785556200036d565b828001600101855582156200036d579182015b828111156200036c5782518255916020019190600101906200034f565b5b5090506200037c919062000380565b5090565b5b808211156200039b57600081600090555060010162000381565b5090565b6000620003b6620003b084620005aa565b62000576565b905082815260208101848484011115620003cf57600080fd5b620003dc84828562000650565b509392505050565b600081519050620003f5816200071a565b92915050565b6000815190506200040c8162000734565b92915050565b60008151905062000423816200074e565b92915050565b6000815190506200043a8162000768565b92915050565b600082601f8301126200045257600080fd5b8151620004648482602086016200039f565b91505092915050565b6000602082840312156200048057600080fd5b60006200049084828501620003fb565b91505092915050565b60008060008060008060c08789031215620004b357600080fd5b6000620004c389828a0162000412565b9650506020620004d689828a01620003e4565b9550506040620004e989828a01620003e4565b9450506060620004fc89828a01620003e4565b93505060806200050f89828a0162000429565b92505060a087015167ffffffffffffffff8111156200052d57600080fd5b6200053b89828a0162000440565b9150509295509295509295565b6200055381620005f1565b82525050565b600060208201905062000570600083018462000548565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620005a0576200059f620006eb565b5b8060405250919050565b600067ffffffffffffffff821115620005c857620005c7620006eb565b5b601f19601f8301169050602081019050919050565b6000620005ea8262000630565b9050919050565b6000819050919050565b60006200060882620005dd565b9050919050565b60006200061c82620005dd565b9050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200067057808201518184015260208101905062000653565b8381111562000680576000848401525b50505050565b600060028204905060018216806200069f57607f821691505b60208210811415620006b657620006b5620006bc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200072581620005dd565b81146200073157600080fd5b50565b6200073f81620005fb565b81146200074b57600080fd5b50565b62000759816200060f565b81146200076557600080fd5b50565b620007738162000623565b81146200077f57600080fd5b50565b61225d80620007926000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b914616111610097578063d3112b2e11610066578063d3112b2e14610243578063f7260d3e14610262578063fc0c546a14610280578063ffe5c5521461029e57610100565b8063b9146161146101cf578063c47f0027146101ed578063ca13bf6514610209578063cca3a90e1461022757610100565b80635a096b2f116100d35780635a096b2f1461017b5780639dad93821461019f578063b6b55f25146101a9578063b87fe774146101c557610100565b806302fb0c5e1461010557806306fdde031461012357806312065fe0146101415780632e1a7d4d1461015f575b600080fd5b61010d6102a8565b60405161011a9190611c71565b60405180910390f35b61012b6102bb565b6040516101389190611e3c565b60405180910390f35b610149610349565b6040516101569190611efe565b60405180910390f35b6101796004803603810190610174919061193a565b6103fa565b005b6101836105dd565b6040516101969796959493929190611dc6565b60405180910390f35b6101a76107ed565b005b6101c360048036038101906101be919061193a565b6109c9565b005b6101cd610b1b565b005b6101d7610c0e565b6040516101e49190611efe565b60405180910390f35b610207600480360381019061020291906118f5565b610ce7565b005b610211610cfd565b60405161021e9190611dab565b60405180910390f35b610241600480360381019061023c919061184f565b610d0e565b005b61024b610e49565b604051610259929190611d82565b60405180910390f35b61026a610e9b565b6040516102779190611bf6565b60405180910390f35b610288610ec1565b6040516102959190611ccf565b60405180910390f35b6102a6610ee7565b005b600160149054906101000a900460ff1681565b600280546102c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906120fb565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a59190611bf6565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611963565b905090565b806000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104569190611bf6565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611963565b10156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611ede565b60405180910390fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610545929190611c48565b602060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061188b565b9050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611ebe565b60405180910390fd5b5050565b600080600080606060008060008054906101000a9004600b0b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900460ff1660023073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561069457600080fd5b505afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611963565b3073ffffffffffffffffffffffffffffffffffffffff1663b91461616040518163ffffffff1660e01b815260040160206040518083038186803b15801561071257600080fd5b505afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611963565b828054610756906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906120fb565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b50505050509250965096509650965096509650965090919293949596565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084757600080fd5b60011515600160149054906101000a900460ff1615151461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611e9e565b60405180910390fd5b6108f933600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b6109ac6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109579190611bf6565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611963565b6103fa565b6000600160146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2357600080fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a8393929190611c11565b602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061188b565b905080610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611ebe565b60405180910390fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7557600080fd5b60011515600160149054906101000a900460ff16151514610b9557600080fd5b6000600160146101000a81548160ff021916908315150217905550610c0c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b565b60008060009054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c889190611bf6565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611963565b610ce29190611fb2565b905090565b818160029190610cf8929190611691565b505050565b60008054906101000a9004600b0b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6857600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff160217905550610e45600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046112f3909392919063ffffffff16565b5050565b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4157600080fd5b60001515600160149054906101000a900460ff16151514610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90611e5e565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555060008054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110289190611bf6565b60206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611963565b10156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e7e565b60405180910390fd5b611122600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046114c2909392919063ffffffff16565b565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff8111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112075781602001600182028036833780820191505090505b5060405160240161121b9493929190611cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611295929190611c8c565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112ec91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff8111156113a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b506040516024016113ea9493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611464929190611c8c565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114bb91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115611573577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115a55781602001600182028036833780820191505090505b506040516024016115b99493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611633929190611c8c565b600060405180830381600087803b15801561164d57600080fd5b505af1158015611661573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061168a91906118b4565b5050505050565b82805461169d906120fb565b90600052602060002090601f0160209004810192826116bf5760008555611706565b82601f106116d857803560ff1916838001178555611706565b82800160010185558215611706579182015b828111156117055782358255916020019190600101906116ea565b5b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600061174761174284611f4a565b611f19565b90508281526020810184848401111561175f57600080fd5b61176a8482856120c8565b509392505050565b600081359050611781816121cb565b92915050565b600081519050611796816121e2565b92915050565b600082601f8301126117ad57600080fd5b81516117bd848260208601611734565b91505092915050565b6000813590506117d5816121f9565b92915050565b60008083601f8401126117ed57600080fd5b8235905067ffffffffffffffff81111561180657600080fd5b60208301915083600182028301111561181e57600080fd5b9250929050565b60008135905061183481612210565b92915050565b60008151905061184981612210565b92915050565b6000806040838503121561186257600080fd5b600061187085828601611772565b9250506020611881858286016117c6565b9150509250929050565b60006020828403121561189d57600080fd5b60006118ab84828501611787565b91505092915050565b6000602082840312156118c657600080fd5b600082015167ffffffffffffffff8111156118e057600080fd5b6118ec8482850161179c565b91505092915050565b6000806020838503121561190857600080fd5b600083013567ffffffffffffffff81111561192257600080fd5b61192e858286016117db565b92509250509250929050565b60006020828403121561194c57600080fd5b600061195a84828501611825565b91505092915050565b60006020828403121561197557600080fd5b60006119838482850161183a565b91505092915050565b61199581611fe3565b82525050565b6119a481611ff5565b82525050565b60006119b582611f7a565b6119bf8185611f90565b93506119cf8185602086016120c8565b6119d8816121ba565b840191505092915050565b6119ec81612038565b82525050565b6119fb8161205c565b82525050565b611a0a81612080565b82525050565b611a19816120a4565b82525050565b611a2881612001565b82525050565b6000611a3982611f85565b611a438185611fa1565b9350611a538185602086016120c8565b611a5c816121ba565b840191505092915050565b6000611a74601883611fa1565b91507f612073747265616d20697320616c7265616479206f70656e00000000000000006000830152602082019050919050565b6000611ab4600283611f90565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000611af4601d83611fa1565b91507f4e6f7420656e6f7567682062616c616e6365206465706f73697465642e0000006000830152602082019050919050565b6000611b34601683611fa1565b91507f7468652073747265616d206973206e6f74206f70656e000000000000000000006000830152602082019050919050565b6000611b74601683611fa1565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b6000611bb4601383611fa1565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b611bf08161202e565b82525050565b6000602082019050611c0b600083018461198c565b92915050565b6000606082019050611c26600083018661198c565b611c33602083018561198c565b611c406040830184611be7565b949350505050565b6000604082019050611c5d600083018561198c565b611c6a6020830184611be7565b9392505050565b6000602082019050611c86600083018461199b565b92915050565b6000606082019050611ca160008301856119e3565b8181036020830152611cb381846119aa565b90508181036040830152611cc681611aa7565b90509392505050565b6000602082019050611ce460008301846119f2565b92915050565b6000608082019050611cff6000830187611a01565b611d0c602083018661198c565b611d19604083018561198c565b8181036060830152611d2b81846119aa565b905095945050505050565b6000608082019050611d4b6000830187611a01565b611d58602083018661198c565b611d656040830185611a1f565b8181036060830152611d7781846119aa565b905095945050505050565b6000604082019050611d976000830185611a10565b611da460208301846119e3565b9392505050565b6000602082019050611dc06000830184611a1f565b92915050565b600060e082019050611ddb600083018a611a1f565b611de860208301896119f2565b611df5604083018861198c565b611e02606083018761199b565b8181036080830152611e148186611a2e565b9050611e2360a0830185611be7565b611e3060c0830184611be7565b98975050505050505050565b60006020820190508181036000830152611e568184611a2e565b905092915050565b60006020820190508181036000830152611e7781611a67565b9050919050565b60006020820190508181036000830152611e9781611ae7565b9050919050565b60006020820190508181036000830152611eb781611b27565b9050919050565b60006020820190508181036000830152611ed781611b67565b9050919050565b60006020820190508181036000830152611ef781611ba7565b9050919050565b6000602082019050611f136000830184611be7565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611f4057611f3f61218b565b5b8060405250919050565b600067ffffffffffffffff821115611f6557611f6461218b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fbd8261202e565b9150611fc88361202e565b925082611fd857611fd761212d565b5b828204905092915050565b6000611fee8261200e565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120438261204a565b9050919050565b60006120558261200e565b9050919050565b60006120678261206e565b9050919050565b60006120798261200e565b9050919050565b600061208b82612092565b9050919050565b600061209d8261200e565b9050919050565b60006120af826120b6565b9050919050565b60006120c18261200e565b9050919050565b60005b838110156120e65780820151818401526020810190506120cb565b838111156120f5576000848401525b50505050565b6000600282049050600182168061211357607f821691505b602082108114156121275761212661215c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6121d481611fe3565b81146121df57600080fd5b50565b6121eb81611ff5565b81146121f657600080fd5b50565b61220281612001565b811461220d57600080fd5b50565b6122198161202e565b811461222457600080fd5b5056fea26469706673582212206a5491999b82a47319233b792d2536be71bd630226c3fe7776041c6c675512f364736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x29EF CODESIZE SUB DUP1 PUSH3 0x29EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6D200DE PUSH32 0xA9214CC96615E0085D3BB077758DB69497DC2DCE3B2B1E97BC93C3D18D83EFD3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2C7 SWAP3 SWAP2 SWAP1 PUSH3 0x2EF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x782 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2FD SWAP1 PUSH3 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x321 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x33C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x36D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x36D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x36C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x37C SWAP2 SWAP1 PUSH3 0x380 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x39B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x381 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B6 PUSH3 0x3B0 DUP5 PUSH3 0x5AA JUMP JUMPDEST PUSH3 0x576 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3DC DUP5 DUP3 DUP6 PUSH3 0x650 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3F5 DUP2 PUSH3 0x71A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x40C DUP2 PUSH3 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x423 DUP2 PUSH3 0x74E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x43A DUP2 PUSH3 0x768 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x464 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x39F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x490 DUP5 DUP3 DUP6 ADD PUSH3 0x3FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4C3 DUP10 DUP3 DUP11 ADD PUSH3 0x412 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x4D6 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x4E9 DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x4FC DUP10 DUP3 DUP11 ADD PUSH3 0x3E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x50F DUP10 DUP3 DUP11 ADD PUSH3 0x429 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x53B DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH3 0x553 DUP2 PUSH3 0x5F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x6EB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x6EB JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EA DUP3 PUSH3 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x608 DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61C DUP3 PUSH3 0x5DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x670 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x653 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x69F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x6BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x725 DUP2 PUSH3 0x5DD JUMP JUMPDEST DUP2 EQ PUSH3 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x73F DUP2 PUSH3 0x5FB JUMP JUMPDEST DUP2 EQ PUSH3 0x74B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x759 DUP2 PUSH3 0x60F JUMP JUMPDEST DUP2 EQ PUSH3 0x765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x773 DUP2 PUSH3 0x623 JUMP JUMPDEST DUP2 EQ PUSH3 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x225D DUP1 PUSH3 0x792 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "565:3351:16:-:0;;;1134:749;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1336:364;;;;;;;;1372:4;1336:364;;;;;;1526:4;:22;;;1575:71;1526:143;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1336:364;;;;;1328:5;:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1724:9;1713:8;;:20;;;;;;;;;;;;;;;;;;1764:6;1744:5;;:27;;;;;;;;;;;;;;;;;;1790:6;1782:5;;:14;;;;;;;;;;;;;;;;;;1818:9;1807:8;;:20;;;;;;;;;;;;;;;;;;;;1845:5;1838:4;:12;;;;;;;;;;;;:::i;:::-;;1870:5;1861:6;;:14;;;;;;;;;;;;;;;;;;1134:749;;;;;;565:3351;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:17:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;366:143::-;;454:6;448:13;439:22;;470:33;497:5;470:33;:::i;:::-;429:80;;;;:::o;515:191::-;;627:6;621:13;612:22;;643:57;694:5;643:57;:::i;:::-;602:104;;;;:::o;712:183::-;;820:6;814:13;805:22;;836:53;883:5;836:53;:::i;:::-;795:100;;;;:::o;901:139::-;;987:6;981:13;972:22;;1003:31;1028:5;1003:31;:::i;:::-;962:78;;;;:::o;1060:288::-;;1176:3;1169:4;1161:6;1157:17;1153:27;1143:2;;1194:1;1191;1184:12;1143:2;1227:6;1221:13;1252:90;1338:3;1330:6;1323:4;1315:6;1311:17;1252:90;:::i;:::-;1243:99;;1133:215;;;;;:::o;1354:332::-;;1497:2;1485:9;1476:7;1472:23;1468:32;1465:2;;;1513:1;1510;1503:12;1465:2;1556:1;1581:88;1661:7;1652:6;1641:9;1637:22;1581:88;:::i;:::-;1571:98;;1527:152;1455:231;;;;:::o;1692:1209::-;;;;;;;1924:3;1912:9;1903:7;1899:23;1895:33;1892:2;;;1941:1;1938;1931:12;1892:2;1984:1;2009:84;2085:7;2076:6;2065:9;2061:22;2009:84;:::i;:::-;1999:94;;1955:148;2142:2;2168:64;2224:7;2215:6;2204:9;2200:22;2168:64;:::i;:::-;2158:74;;2113:129;2281:2;2307:64;2363:7;2354:6;2343:9;2339:22;2307:64;:::i;:::-;2297:74;;2252:129;2420:2;2446:64;2502:7;2493:6;2482:9;2478:22;2446:64;:::i;:::-;2436:74;;2391:129;2559:3;2586:62;2640:7;2631:6;2620:9;2616:22;2586:62;:::i;:::-;2576:72;;2530:128;2718:3;2707:9;2703:19;2697:26;2750:18;2742:6;2739:30;2736:2;;;2782:1;2779;2772:12;2736:2;2810:74;2876:7;2867:6;2856:9;2852:22;2810:74;:::i;:::-;2800:84;;2668:226;1882:1019;;;;;;;;:::o;2907:118::-;2994:24;3012:5;2994:24;:::i;:::-;2989:3;2982:37;2972:53;;:::o;3031:222::-;;3162:2;3151:9;3147:18;3139:26;;3175:71;3243:1;3232:9;3228:17;3219:6;3175:71;:::i;:::-;3129:124;;;;:::o;3259:283::-;;3325:2;3319:9;3309:19;;3367:4;3359:6;3355:17;3474:6;3462:10;3459:22;3438:18;3426:10;3423:34;3420:62;3417:2;;;3485:18;;:::i;:::-;3417:2;3525:10;3521:2;3514:22;3299:243;;;;:::o;3548:332::-;;3700:18;3692:6;3689:30;3686:2;;;3722:18;;:::i;:::-;3686:2;3807:4;3803:9;3796:4;3788:6;3784:17;3780:33;3772:41;;3868:4;3862;3858:15;3850:23;;3615:265;;;:::o;3886:96::-;;3952:24;3970:5;3952:24;:::i;:::-;3941:35;;3931:51;;;:::o;3988:77::-;;4054:5;4043:16;;4033:32;;;:::o;4071:120::-;;4161:24;4179:5;4161:24;:::i;:::-;4150:35;;4140:51;;;:::o;4197:116::-;;4283:24;4301:5;4283:24;:::i;:::-;4272:35;;4262:51;;;:::o;4319:91::-;;4398:5;4394:2;4383:21;4372:32;;4362:48;;;:::o;4416:126::-;;4493:42;4486:5;4482:54;4471:65;;4461:81;;;:::o;4548:307::-;4616:1;4626:113;4640:6;4637:1;4634:13;4626:113;;;4725:1;4720:3;4716:11;4710:18;4706:1;4701:3;4697:11;4690:39;4662:2;4659:1;4655:10;4650:15;;4626:113;;;4757:6;4754:1;4751:13;4748:2;;;4837:1;4828:6;4823:3;4819:16;4812:27;4748:2;4597:258;;;;:::o;4861:320::-;;4942:1;4936:4;4932:12;4922:22;;4989:1;4983:4;4979:12;5010:18;5000:2;;5066:4;5058:6;5054:17;5044:27;;5000:2;5128;5120:6;5117:14;5097:18;5094:38;5091:2;;;5147:18;;:::i;:::-;5091:2;4912:269;;;;:::o;5187:180::-;5235:77;5232:1;5225:88;5332:4;5329:1;5322:15;5356:4;5353:1;5346:15;5373:180;5421:77;5418:1;5411:88;5518:4;5515:1;5508:15;5542:4;5539:1;5532:15;5559:122;5632:24;5650:5;5632:24;:::i;:::-;5625:5;5622:35;5612:2;;5671:1;5668;5661:12;5612:2;5602:79;:::o;5687:170::-;5784:48;5826:5;5784:48;:::i;:::-;5777:5;5774:59;5764:2;;5847:1;5844;5837:12;5764:2;5754:103;:::o;5863:162::-;5956:44;5994:5;5956:44;:::i;:::-;5949:5;5946:55;5936:2;;6015:1;6012;6005:12;5936:2;5926:99;:::o;6031:118::-;6102:22;6118:5;6102:22;:::i;:::-;6095:5;6092:33;6082:2;;6139:1;6136;6129:12;6082:2;6072:77;:::o;565:3351:16:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:20891:17",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "101:257:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "111:73:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "176:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "135:40:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "135:48:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:14:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:64:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "200:5:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "207:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "193:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "193:21:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "193:21:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "223:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "238:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "245:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "234:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "234:16:17"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "227:3:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "288:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "297:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "300:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "290:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "290:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "290:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "269:3:17"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:16:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "283:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "262:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "262:25:17"
                              },
                              "nodeType": "YulIf",
                              "src": "259:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "335:3:17"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "340:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "345:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "313:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "313:39:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "313:39:17"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "74:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "79:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "87:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "95:5:17",
                            "type": ""
                          }
                        ],
                        "src": "7:351:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "416:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "426:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "448:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "435:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "426:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "491:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "464:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "464:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "464:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "394:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "402:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "410:5:17",
                            "type": ""
                          }
                        ],
                        "src": "364:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "569:77:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "579:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "594:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "588:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "588:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "610:23:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "610:30:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "610:30:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "547:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "555:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "563:5:17",
                            "type": ""
                          }
                        ],
                        "src": "509:137:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "737:214:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "786:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "795:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "798:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "788:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "788:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "765:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "773:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "761:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "761:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "780:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "757:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "757:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "750:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "747:2:17"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "811:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "831:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "825:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "825:13:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "815:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "847:98:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "918:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "926:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "914:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "914:17:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "933:6:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "941:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "856:57:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "856:89:17"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "847:5:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "715:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "723:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "731:5:17",
                            "type": ""
                          }
                        ],
                        "src": "665:286:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1007:85:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1017:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1039:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1026:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1026:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1080:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_int96",
                                  "nodeType": "YulIdentifier",
                                  "src": "1055:24:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1055:31:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1055:31:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "985:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "993:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1001:5:17",
                            "type": ""
                          }
                        ],
                        "src": "957:135:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1187:277:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1236:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1245:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1248:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1238:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1238:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1238:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1215:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1223:4:17",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1211:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1211:17:17"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1230:3:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1207:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1207:27:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1200:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1200:35:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1197:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1261:30:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1284:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1271:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1271:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:6:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1334:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1343:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1346:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1336:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1336:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1336:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1306:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1314:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1303:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1300:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1359:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1375:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1383:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1371:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1371:17:17"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1359:8:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1442:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1451:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1454:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1444:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1444:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1444:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "1407:8:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "1421:6:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1429:4:17",
                                            "type": "",
                                            "value": "0x01"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "1417:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1417:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1403:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1403:32:17"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1437:3:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1400:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1397:2:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1154:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1162:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "1170:8:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1180:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1112:352:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1522:87:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1532:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1554:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:12:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1541:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1532:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1597:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1570:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1570:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1570:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1500:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1508:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1516:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1470:139:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1678:80:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1688:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1703:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1697:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1697:13:17"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:5:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1746:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1719:26:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1719:33:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1719:33:17"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1656:6:17",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1664:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1672:5:17",
                            "type": ""
                          }
                        ],
                        "src": "1615:143:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1845:322:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1891:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1900:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1903:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1893:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1893:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1893:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1866:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1875:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1862:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1862:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1887:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1858:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1858:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "1855:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1917:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1932:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1946:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1936:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1961:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1996:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2007:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1992:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1992:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2016:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1971:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1971:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1961:6:17"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2044:116:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2059:16:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2073:2:17",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2063:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2089:61:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2122:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2133:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2118:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2118:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2142:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "2099:18:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2099:51:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2089:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1807:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1818:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1830:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1838:6:17",
                            "type": ""
                          }
                        ],
                        "src": "1764:403:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2247:204:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2293:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2302:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2305:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2295:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2295:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2295:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2268:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2277:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2264:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2264:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2289:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2260:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2260:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2257:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2319:125:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2334:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2348:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2338:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2363:71:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2406:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2417:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2402:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2402:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2426:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2373:28:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2373:61:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2363:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2217:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2228:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2240:6:17",
                            "type": ""
                          }
                        ],
                        "src": "2173:278:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2543:302:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2589:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2598:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2601:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2591:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2591:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2591:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2564:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2573:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2560:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2560:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2585:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2556:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2556:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2553:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2615:223:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2630:38:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2654:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2665:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2650:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2650:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2644:5:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2644:24:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2634:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2715:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2724:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2727:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2717:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2717:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2717:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2687:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2695:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2684:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2684:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "2681:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2745:83:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2800:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2811:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2796:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2796:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2820:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2755:40:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2755:73:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2745:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2513:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2524:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2536:6:17",
                            "type": ""
                          }
                        ],
                        "src": "2457:388:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2937:309:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2983:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2992:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2995:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2985:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2985:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2985:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2958:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2967:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2954:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2954:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2979:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2950:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2950:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "2947:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3009:230:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3024:45:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3055:9:17"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3066:1:17",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3051:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3051:17:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3038:12:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3038:31:17"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3028:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3116:16:17",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3125:1:17",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3128:1:17",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3118:6:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3118:12:17"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3118:12:17"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3088:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3096:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3085:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3085:30:17"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3082:2:17"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3146:83:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3201:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3212:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3197:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3197:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3221:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3164:32:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3164:65:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3146:6:17"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3154:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2899:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2910:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2922:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2930:6:17",
                            "type": ""
                          }
                        ],
                        "src": "2851:395:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3318:196:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3364:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3373:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3376:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3366:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3366:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3366:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3339:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3348:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3335:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3335:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3360:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3331:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3331:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3328:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3390:117:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3405:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3419:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3409:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3434:63:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3469:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3480:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3465:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3465:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3489:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3444:20:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3444:53:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3434:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3288:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3299:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3311:6:17",
                            "type": ""
                          }
                        ],
                        "src": "3252:262:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3597:207:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3643:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3652:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3655:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3645:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3645:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3645:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3618:7:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3627:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3614:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3614:23:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3639:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3610:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3610:32:17"
                              },
                              "nodeType": "YulIf",
                              "src": "3607:2:17"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3669:128:17",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3684:15:17",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3698:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3688:6:17",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3713:74:17",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3759:9:17"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3770:6:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3755:3:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3755:22:17"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3779:7:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "3723:31:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3723:64:17"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3713:6:17"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3567:9:17",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3578:7:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3590:6:17",
                            "type": ""
                          }
                        ],
                        "src": "3520:284:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3875:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3892:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3915:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3897:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3897:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3885:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3885:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3885:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3863:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3870:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3810:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3993:50:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4010:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4030:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "4015:14:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4015:21:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4003:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4003:34:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4003:34:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3981:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3988:3:17",
                            "type": ""
                          }
                        ],
                        "src": "3934:109:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4139:270:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4149:52:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4195:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4163:31:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4163:38:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4153:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4210:77:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4275:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4280:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4217:57:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4217:70:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4210:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4322:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4329:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4318:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4318:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4336:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4341:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4296:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4296:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4296:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4357:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4368:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4395:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "4373:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4373:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4364:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4364:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4357:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4120:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4127:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4135:3:17",
                            "type": ""
                          }
                        ],
                        "src": "4049:360:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4512:98:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4529:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4597:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4534:62:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4534:69:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4522:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4522:82:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4522:82:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4500:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4507:3:17",
                            "type": ""
                          }
                        ],
                        "src": "4415:195:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4701:86:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4718:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4774:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperToken_$1744_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4723:50:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4723:57:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4711:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4711:70:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4711:70:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4689:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4696:3:17",
                            "type": ""
                          }
                        ],
                        "src": "4616:171:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4883:91:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4900:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4961:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluidToken_$2658_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4905:55:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4905:62:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4893:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4893:75:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4893:75:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4871:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4878:3:17",
                            "type": ""
                          }
                        ],
                        "src": "4793:181:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5065:86:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5082:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5138:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_ISuperfluid_$2287_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "5087:50:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5087:57:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5075:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5075:70:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5075:70:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5053:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5060:3:17",
                            "type": ""
                          }
                        ],
                        "src": "4980:171:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5218:51:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5235:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5256:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_int96",
                                      "nodeType": "YulIdentifier",
                                      "src": "5240:15:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5240:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5228:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5228:35:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5228:35:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_int96_to_t_int96_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5206:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5213:3:17",
                            "type": ""
                          }
                        ],
                        "src": "5157:112:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5367:272:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5377:53:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5424:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5391:32:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5391:39:17"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5381:6:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5439:78:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5505:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5510:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5446:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5446:71:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5439:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5552:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5559:4:17",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5548:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5548:16:17"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5566:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5571:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5526:21:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5526:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5526:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5587:46:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5598:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5625:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "5603:21:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5603:29:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5594:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5594:39:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5587:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5348:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5355:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5363:3:17",
                            "type": ""
                          }
                        ],
                        "src": "5275:364:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5791:176:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5801:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5867:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5872:2:17",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5808:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5808:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5801:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5896:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5901:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5892:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5892:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5905:26:17",
                                    "type": "",
                                    "value": "a stream is already open"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5885:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5885:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5885:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5942:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5953:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5958:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5949:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5949:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5942:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5779:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5787:3:17",
                            "type": ""
                          }
                        ],
                        "src": "5645:322:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6118:152:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6128:72:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6193:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6198:1:17",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6135:57:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6135:65:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6128:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6221:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6226:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6217:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6217:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6230:4:17",
                                    "type": "",
                                    "value": "0x"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6210:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6210:25:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6210:25:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6245:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6256:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6261:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6252:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6252:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6245:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6106:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6114:3:17",
                            "type": ""
                          }
                        ],
                        "src": "5973:297:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6422:181:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6432:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6498:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6503:2:17",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6439:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6439:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6432:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6527:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6532:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6523:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6523:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6536:31:17",
                                    "type": "",
                                    "value": "Not enough balance deposited."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6516:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6516:52:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6516:52:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6578:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6589:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6594:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6585:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6585:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6578:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6410:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6418:3:17",
                            "type": ""
                          }
                        ],
                        "src": "6276:327:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6755:174:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6765:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6831:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6836:2:17",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6772:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6772:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6765:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6860:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6865:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6856:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6856:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6869:24:17",
                                    "type": "",
                                    "value": "the stream is not open"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6849:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6849:45:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6849:45:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6904:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6915:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6920:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6911:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6911:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6904:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6743:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6751:3:17",
                            "type": ""
                          }
                        ],
                        "src": "6609:320:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7081:174:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7091:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7157:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7162:2:17",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7098:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7098:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7091:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7186:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7191:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7182:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7182:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7195:24:17",
                                    "type": "",
                                    "value": "Token transfer failed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7175:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7175:45:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7175:45:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7230:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7241:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7246:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7237:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7237:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7230:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7069:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7077:3:17",
                            "type": ""
                          }
                        ],
                        "src": "6935:320:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7407:171:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7417:74:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7483:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7488:2:17",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7424:58:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7424:67:17"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7417:3:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7512:3:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7517:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7508:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7508:11:17"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7521:21:17",
                                    "type": "",
                                    "value": "Insufficient funds."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7501:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7501:42:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7501:42:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7553:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7564:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7569:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7560:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7560:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7553:3:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7395:3:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7403:3:17",
                            "type": ""
                          }
                        ],
                        "src": "7261:317:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7649:53:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7666:3:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7689:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "7671:17:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7671:24:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7659:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7659:37:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7659:37:17"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7637:5:17",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7644:3:17",
                            "type": ""
                          }
                        ],
                        "src": "7584:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7806:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7816:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7828:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7839:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7824:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7824:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7816:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7896:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7909:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7920:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7905:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7905:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7852:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7852:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7852:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7778:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7790:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7801:4:17",
                            "type": ""
                          }
                        ],
                        "src": "7708:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8090:288:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8100:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8112:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8123:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8108:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8108:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8100:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8180:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8193:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8204:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8189:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8189:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8136:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8136:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8136:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8261:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8274:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8285:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8270:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8270:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8217:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8217:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8217:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8343:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8356:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8367:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8352:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8352:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8299:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8299:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8299:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8046:9:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8058:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8066:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8074:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8085:4:17",
                            "type": ""
                          }
                        ],
                        "src": "7936:442:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8510:206:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8520:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8532:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8543:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8528:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8528:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8520:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8600:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8613:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8624:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8609:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8609:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8556:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8556:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8556:71:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8681:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8694:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8705:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8690:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8690:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8637:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8637:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8637:72:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8474:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8486:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8494:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8505:4:17",
                            "type": ""
                          }
                        ],
                        "src": "8384:332:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8814:118:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8824:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8836:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8847:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8832:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8832:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8824:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8898:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8911:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8922:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8907:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8907:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:37:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8860:65:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8860:65:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8786:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8798:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8809:4:17",
                            "type": ""
                          }
                        ],
                        "src": "8722:210:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9214:512:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9224:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9236:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9247:2:17",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9232:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9232:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9224:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9336:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9349:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9360:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9345:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9345:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9260:75:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9260:103:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9260:103:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9384:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9395:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9380:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9380:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9404:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9410:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9400:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9400:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9373:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9373:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9373:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9430:84:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9500:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9509:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9438:61:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9438:76:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9430:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9535:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9546:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9531:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9531:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "9555:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9561:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9551:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9551:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9524:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9524:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9524:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9581:138:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "9714:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9589:123:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9589:130:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9581:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$927_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9178:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9190:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9198:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9209:4:17",
                            "type": ""
                          }
                        ],
                        "src": "8938:788:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9850:144:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9860:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9872:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9883:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9868:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9868:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9860:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9960:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9973:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9984:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9969:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9969:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9896:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9896:91:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9896:91:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperToken_$1744__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9822:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9834:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9845:4:17",
                            "type": ""
                          }
                        ],
                        "src": "9732:262:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10225:465:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10235:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10247:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10258:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10243:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10243:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10235:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10341:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10354:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10365:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10350:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10350:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10272:68:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10272:96:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10272:96:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10422:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10435:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10446:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10431:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10431:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10378:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10378:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10378:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10504:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10517:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10528:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10513:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10513:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10460:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10460:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10460:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10553:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10564:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10549:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10549:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "10573:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10579:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10569:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10569:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10542:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10542:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10542:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10599:84:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "10669:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "10678:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10607:61:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10607:76:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10599:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluidToken_$2658_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10173:9:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "10185:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10193:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10201:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10209:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10220:4:17",
                            "type": ""
                          }
                        ],
                        "src": "10000:690:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10917:461:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10927:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10939:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10950:3:17",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10935:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10935:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10927:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11033:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11046:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11057:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11042:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11042:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10964:68:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10964:96:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10964:96:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11114:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11127:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11138:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11123:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11123:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11070:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11070:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11070:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11192:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11205:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11216:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11201:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11201:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11152:39:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11152:68:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11152:68:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11241:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11252:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11237:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11237:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "11261:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11267:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11257:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11257:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11230:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11230:48:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11230:48:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11287:84:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "11357:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "11366:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11295:61:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11295:76:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11287:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluidToken_$2658_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10865:9:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "10877:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10885:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10893:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10901:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10912:4:17",
                            "type": ""
                          }
                        ],
                        "src": "10696:682:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11562:258:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11572:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11584:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11595:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11580:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11580:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11572:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11672:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11685:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11696:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11681:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11681:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11608:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11608:91:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11608:91:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11785:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11798:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11809:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11794:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11794:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11709:75:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11709:104:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11709:104:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperfluid_$2287_t_contract$_IConstantFlowAgreementV1_$927__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11526:9:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11538:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11546:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11557:4:17",
                            "type": ""
                          }
                        ],
                        "src": "11384:436:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11920:120:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11930:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11942:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11953:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11938:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11938:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11930:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12006:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12019:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12030:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12015:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12015:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11966:39:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11966:67:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11966:67:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int96__to_t_int96__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11892:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11904:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11915:4:17",
                            "type": ""
                          }
                        ],
                        "src": "11826:214:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12342:701:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12352:27:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12364:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12375:3:17",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12360:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12360:19:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12352:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12429:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12442:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12453:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12438:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12438:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_int96_to_t_int96_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12389:39:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12389:67:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12389:67:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12530:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12543:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12554:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12539:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12539:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12466:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12466:92:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12466:92:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "12612:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12625:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12636:2:17",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12621:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12621:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12568:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12568:72:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12568:72:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "12688:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12701:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12712:2:17",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12697:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12697:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12650:37:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12650:66:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12650:66:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12737:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12748:3:17",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12733:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12733:19:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "12758:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12764:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12754:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12754:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12726:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12726:49:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12726:49:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12784:86:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "12856:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12865:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12792:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12792:78:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12784:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "12924:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12937:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12948:3:17",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12933:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12933:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12880:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12880:73:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12880:73:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "13007:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13020:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13031:3:17",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13016:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13016:19:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12963:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12963:73:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12963:73:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int96_t_contract$_ISuperToken_$1744_t_address_t_bool_t_string_memory_ptr_t_uint256_t_uint256__to_t_int96_t_address_t_address_t_bool_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12266:9:17",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "12278:6:17",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "12286:6:17",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "12294:6:17",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "12302:6:17",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "12310:6:17",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12318:6:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12326:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12337:4:17",
                            "type": ""
                          }
                        ],
                        "src": "12046:997:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13167:195:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13177:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13189:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13200:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13185:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13185:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13177:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13224:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13235:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13220:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13220:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13243:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13249:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13239:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13239:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13213:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13213:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13213:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13269:86:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13341:6:17"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13350:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13277:63:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13277:78:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13269:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13139:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13151:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13162:4:17",
                            "type": ""
                          }
                        ],
                        "src": "13049:313:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13539:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13549:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13561:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13572:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13557:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13557:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13549:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13596:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13607:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13592:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13592:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13615:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13621:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13611:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13611:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13585:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13585:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13585:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13641:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13775:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13649:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13649:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13641:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13519:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13534:4:17",
                            "type": ""
                          }
                        ],
                        "src": "13368:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13964:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13974:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13986:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13997:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13982:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13982:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13974:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14021:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14032:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14017:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14017:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14040:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14046:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14036:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14036:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14010:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14010:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14010:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14066:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14200:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14074:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14074:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14066:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13944:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13959:4:17",
                            "type": ""
                          }
                        ],
                        "src": "13793:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14389:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14399:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14411:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14422:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14407:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14407:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14399:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14446:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14457:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14442:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14442:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14465:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14471:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14461:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14461:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14435:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14435:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14435:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14491:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14625:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14499:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14499:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14491:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14369:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14384:4:17",
                            "type": ""
                          }
                        ],
                        "src": "14218:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14814:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14824:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14836:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14847:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14832:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14832:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14824:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14871:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14882:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14867:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14867:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14890:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14896:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14886:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14886:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14860:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14860:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14860:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14916:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15050:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14924:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14924:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14916:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14794:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14809:4:17",
                            "type": ""
                          }
                        ],
                        "src": "14643:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15239:248:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15249:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15261:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15272:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15257:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15257:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15249:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15296:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15307:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15292:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15292:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15315:4:17"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15321:9:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15311:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15311:20:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15285:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15285:47:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15285:47:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15341:139:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15475:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15349:124:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15349:131:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15341:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15219:9:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15234:4:17",
                            "type": ""
                          }
                        ],
                        "src": "15068:419:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15591:124:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15601:26:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15613:9:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15624:2:17",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15609:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15609:18:17"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15601:4:17"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15681:6:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15694:9:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15705:1:17",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15690:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15690:17:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15637:43:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15637:71:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15637:71:17"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15563:9:17",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15575:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15586:4:17",
                            "type": ""
                          }
                        ],
                        "src": "15493:222:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15761:243:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15771:19:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15787:2:17",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15781:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15781:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15771:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15799:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15821:6:17"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "15829:4:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15817:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15817:17:17"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15803:10:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15945:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "15947:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15947:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15947:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15888:10:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15900:18:17",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15885:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15885:34:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15924:10:17"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15936:6:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15921:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15921:22:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "15882:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15882:62:17"
                              },
                              "nodeType": "YulIf",
                              "src": "15879:2:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15983:2:17",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15987:10:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15976:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15976:22:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15976:22:17"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "15745:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "15754:6:17",
                            "type": ""
                          }
                        ],
                        "src": "15721:283:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16076:265:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16181:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "16183:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16183:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16183:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16153:6:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16161:18:17",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "16150:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16150:30:17"
                              },
                              "nodeType": "YulIf",
                              "src": "16147:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16233:41:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "16249:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16257:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16245:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16245:17:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16268:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "16264:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16264:9:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16241:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16241:33:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "16233:4:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16311:23:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "16323:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16329:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16319:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16319:15:17"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "16311:4:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16060:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16071:4:17",
                            "type": ""
                          }
                        ],
                        "src": "16010:331:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16405:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16416:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "16432:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16426:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16426:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16416:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16388:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16398:6:17",
                            "type": ""
                          }
                        ],
                        "src": "16347:98:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16510:40:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16521:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "16537:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16531:5:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16531:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "16521:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "16493:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16503:6:17",
                            "type": ""
                          }
                        ],
                        "src": "16451:99:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16651:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16668:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16673:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16661:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16661:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16661:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16689:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16708:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16713:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16704:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16704:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16689:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16623:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16628:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "16639:11:17",
                            "type": ""
                          }
                        ],
                        "src": "16556:168:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16826:73:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16843:3:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16848:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16836:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16836:19:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16836:19:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16864:29:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16883:3:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16888:4:17",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16879:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16879:14:17"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16864:11:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16798:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "16803:6:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "16814:11:17",
                            "type": ""
                          }
                        ],
                        "src": "16730:169:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16947:143:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16957:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "16980:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16962:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16962:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "16957:1:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16991:25:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17014:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "16996:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16996:20:17"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "16991:1:17"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17038:22:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "17040:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17040:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17040:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17035:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17028:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17028:9:17"
                              },
                              "nodeType": "YulIf",
                              "src": "17025:2:17"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17070:14:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17079:1:17"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17082:1:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "17075:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17075:9:17"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "17070:1:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "16936:1:17",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "16939:1:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "16945:1:17",
                            "type": ""
                          }
                        ],
                        "src": "16905:185:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17141:51:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17151:35:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17180:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "17162:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17162:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "17151:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17123:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "17133:7:17",
                            "type": ""
                          }
                        ],
                        "src": "17096:96:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17240:48:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17250:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17275:5:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "17268:6:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17268:13:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17261:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17261:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "17250:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17222:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "17232:7:17",
                            "type": ""
                          }
                        ],
                        "src": "17198:90:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17337:48:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17347:32:17",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17369:2:17",
                                    "type": "",
                                    "value": "11"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17373:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "signextend",
                                  "nodeType": "YulIdentifier",
                                  "src": "17358:10:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17358:21:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "17347:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17319:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "17329:7:17",
                            "type": ""
                          }
                        ],
                        "src": "17294:91:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17436:81:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17446:65:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17461:5:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17468:42:17",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17457:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17457:54:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "17446:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17418:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "17428:7:17",
                            "type": ""
                          }
                        ],
                        "src": "17391:126:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17568:32:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17578:16:17",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17589:5:17"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "17578:7:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17550:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "17560:7:17",
                            "type": ""
                          }
                        ],
                        "src": "17523:77:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17698:98:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17708:82:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17784:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "17721:62:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17721:69:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "17708:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17678:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "17688:9:17",
                            "type": ""
                          }
                        ],
                        "src": "17606:190:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17894:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17904:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17935:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "17917:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17917:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "17904:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17874:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "17884:9:17",
                            "type": ""
                          }
                        ],
                        "src": "17802:145:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18033:86:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18043:70:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18107:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperToken_$1744_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18056:50:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18056:57:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18043:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperToken_$1744_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18013:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18023:9:17",
                            "type": ""
                          }
                        ],
                        "src": "17953:166:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18205:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18215:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18246:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18228:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18228:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18215:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperToken_$1744_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18185:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18195:9:17",
                            "type": ""
                          }
                        ],
                        "src": "18125:133:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18349:91:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18359:75:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18428:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluidToken_$2658_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18372:55:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18372:62:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18359:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2658_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18329:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18339:9:17",
                            "type": ""
                          }
                        ],
                        "src": "18264:176:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18531:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18541:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18572:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18554:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18554:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18541:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluidToken_$2658_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18511:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18521:9:17",
                            "type": ""
                          }
                        ],
                        "src": "18446:138:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18670:86:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18680:70:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18744:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_ISuperfluid_$2287_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18693:50:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18693:57:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18680:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2287_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18650:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18660:9:17",
                            "type": ""
                          }
                        ],
                        "src": "18590:166:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18842:53:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18852:37:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18883:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "18865:17:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18865:24:17"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "18852:9:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_ISuperfluid_$2287_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18822:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "18832:9:17",
                            "type": ""
                          }
                        ],
                        "src": "18762:133:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18950:258:17",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18960:10:17",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18969:1:17",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "18964:1:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19029:63:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "19054:3:17"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "19059:1:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "19050:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19050:11:17"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19073:3:17"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19078:1:17"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "19069:3:17"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "19069:11:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "19063:5:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19063:18:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "19043:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19043:39:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19043:39:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "18990:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18993:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "18987:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18987:13:17"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "19001:19:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "19003:15:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "19012:1:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "19015:2:17",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "19008:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19008:10:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "19003:1:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "18983:3:17",
                                "statements": []
                              },
                              "src": "18979:113:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19126:76:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "19176:3:17"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "19181:6:17"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "19172:3:17"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19172:16:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "19190:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "19165:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19165:27:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19165:27:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "19107:1:17"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19110:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "19104:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19104:13:17"
                              },
                              "nodeType": "YulIf",
                              "src": "19101:2:17"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "18932:3:17",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "18937:3:17",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "18942:6:17",
                            "type": ""
                          }
                        ],
                        "src": "18901:307:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19265:269:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19275:22:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "19289:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19295:1:17",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "19285:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19285:12:17"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19275:6:17"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19306:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "19336:4:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19342:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "19332:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19332:12:17"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "19310:18:17",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19383:51:17",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "19397:27:17",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "19411:6:17"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "19419:4:17",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "19407:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19407:17:17"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "19397:6:17"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "19363:18:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "19356:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19356:26:17"
                              },
                              "nodeType": "YulIf",
                              "src": "19353:2:17"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19486:42:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nodeType": "YulIdentifier",
                                        "src": "19500:16:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19500:18:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19500:18:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "19450:18:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "19473:6:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19481:2:17",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "19470:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19470:14:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "19447:2:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19447:38:17"
                              },
                              "nodeType": "YulIf",
                              "src": "19444:2:17"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "19249:4:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "19258:6:17",
                            "type": ""
                          }
                        ],
                        "src": "19214:320:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19568:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19585:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19588:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19578:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19578:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19578:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19682:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19685:4:17",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19675:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19675:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19675:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19706:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19709:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "19699:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19699:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19699:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "19540:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19754:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19771:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19774:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19764:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19764:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19764:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19868:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19871:4:17",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19861:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19861:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19861:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19892:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19895:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "19885:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19885:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19885:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "19726:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19940:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19957:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19960:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19950:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19950:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19950:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20054:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20057:4:17",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20047:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20047:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20047:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20078:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20081:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "20071:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20071:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20071:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nodeType": "YulFunctionDefinition",
                        "src": "19912:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20126:152:17",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20143:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20146:77:17",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20136:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20136:88:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20136:88:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20240:1:17",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20243:4:17",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20233:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20233:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20233:15:17"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20264:1:17",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20267:4:17",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "20257:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20257:15:17"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20257:15:17"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "20098:180:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20332:54:17",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20342:38:17",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20360:5:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20367:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20356:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20356:14:17"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20376:2:17",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "20372:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20372:7:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20352:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20352:28:17"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "20342:6:17"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20315:5:17",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "20325:6:17",
                            "type": ""
                          }
                        ],
                        "src": "20284:102:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20435:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20492:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20501:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20504:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20494:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20494:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20494:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20458:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "20483:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "20465:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20465:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "20455:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20455:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20448:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20448:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "20445:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20428:5:17",
                            "type": ""
                          }
                        ],
                        "src": "20392:122:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20560:76:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20614:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20623:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20626:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20616:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20616:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20616:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20583:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "20605:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "20590:14:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20590:21:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "20580:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20580:32:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20573:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20573:40:17"
                              },
                              "nodeType": "YulIf",
                              "src": "20570:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20553:5:17",
                            "type": ""
                          }
                        ],
                        "src": "20520:116:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20683:77:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20738:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20747:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20750:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20740:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20740:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20740:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20706:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "20729:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_int96",
                                          "nodeType": "YulIdentifier",
                                          "src": "20713:15:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20713:22:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "20703:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20703:33:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20696:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20696:41:17"
                              },
                              "nodeType": "YulIf",
                              "src": "20693:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_int96",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20676:5:17",
                            "type": ""
                          }
                        ],
                        "src": "20642:118:17"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20809:79:17",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20866:16:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20875:1:17",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20878:1:17",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20868:6:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20868:12:17"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20868:12:17"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "20832:5:17"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "20857:5:17"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "20839:17:17"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20839:24:17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "20829:2:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20829:35:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20822:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20822:43:17"
                              },
                              "nodeType": "YulIf",
                              "src": "20819:2:17"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20802:5:17",
                            "type": ""
                          }
                        ],
                        "src": "20766:122:17"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_int96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int96(value)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_int96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperToken_$1744_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluidToken_$2658_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISuperfluid_$2287_to_t_address(value))\n    }\n\n    function abi_encode_t_int96_to_t_int96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int96(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"a stream is already open\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 2)\n\n        mstore(add(pos, 0), \"0x\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Not enough balance deposited.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"the stream is not open\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"Token transfer failed.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Insufficient funds.\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IConstantFlowAgreementV1_$927_t_bytes_memory_ptr_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperToken_$1744__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluidToken_$2658_t_address_t_address_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluidToken_$2658_t_address_t_int96_t_bytes_memory_ptr__to_t_address_t_address_t_int96_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_ISuperfluidToken_$2658_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_int96_to_t_int96_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISuperfluid_$2287_t_contract$_IConstantFlowAgreementV1_$927__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_ISuperfluid_$2287_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IConstantFlowAgreementV1_$927_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_int96__to_t_int96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int96_to_t_int96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int96_t_contract$_ISuperToken_$1744_t_address_t_bool_t_string_memory_ptr_t_uint256_t_uint256__to_t_int96_t_address_t_address_t_bool_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_int96_to_t_int96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_ISuperToken_$1744_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value4,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int96(value) -> cleaned {\n        cleaned := signextend(11, value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IConstantFlowAgreementV1_$927_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperToken_$1744_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperToken_$1744_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperToken_$1744_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2658_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluidToken_$2658_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluidToken_$2658_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2287_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISuperfluid_$2287_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISuperfluid_$2287_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int96(value) {\n        if iszero(eq(value, cleanup_t_int96(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 17,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063b914616111610097578063d3112b2e11610066578063d3112b2e14610243578063f7260d3e14610262578063fc0c546a14610280578063ffe5c5521461029e57610100565b8063b9146161146101cf578063c47f0027146101ed578063ca13bf6514610209578063cca3a90e1461022757610100565b80635a096b2f116100d35780635a096b2f1461017b5780639dad93821461019f578063b6b55f25146101a9578063b87fe774146101c557610100565b806302fb0c5e1461010557806306fdde031461012357806312065fe0146101415780632e1a7d4d1461015f575b600080fd5b61010d6102a8565b60405161011a9190611c71565b60405180910390f35b61012b6102bb565b6040516101389190611e3c565b60405180910390f35b610149610349565b6040516101569190611efe565b60405180910390f35b6101796004803603810190610174919061193a565b6103fa565b005b6101836105dd565b6040516101969796959493929190611dc6565b60405180910390f35b6101a76107ed565b005b6101c360048036038101906101be919061193a565b6109c9565b005b6101cd610b1b565b005b6101d7610c0e565b6040516101e49190611efe565b60405180910390f35b610207600480360381019061020291906118f5565b610ce7565b005b610211610cfd565b60405161021e9190611dab565b60405180910390f35b610241600480360381019061023c919061184f565b610d0e565b005b61024b610e49565b604051610259929190611d82565b60405180910390f35b61026a610e9b565b6040516102779190611bf6565b60405180910390f35b610288610ec1565b6040516102959190611ccf565b60405180910390f35b6102a6610ee7565b005b600160149054906101000a900460ff1681565b600280546102c8906120fb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f4906120fb565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b505050505081565b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103a59190611bf6565b60206040518083038186803b1580156103bd57600080fd5b505afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190611963565b905090565b806000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104569190611bf6565b60206040518083038186803b15801561046e57600080fd5b505afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190611963565b10156104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de90611ede565b60405180910390fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610545929190611c48565b602060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610597919061188b565b9050806105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090611ebe565b60405180910390fd5b5050565b600080600080606060008060008054906101000a9004600b0b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160149054906101000a900460ff1660023073ffffffffffffffffffffffffffffffffffffffff166312065fe06040518163ffffffff1660e01b815260040160206040518083038186803b15801561069457600080fd5b505afa1580156106a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cc9190611963565b3073ffffffffffffffffffffffffffffffffffffffff1663b91461616040518163ffffffff1660e01b815260040160206040518083038186803b15801561071257600080fd5b505afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611963565b828054610756906120fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610782906120fb565b80156107cf5780601f106107a4576101008083540402835291602001916107cf565b820191906000526020600020905b8154815290600101906020018083116107b257829003601f168201915b50505050509250965096509650965096509650965090919293949596565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084757600080fd5b60011515600160149054906101000a900460ff1615151461089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490611e9e565b60405180910390fd5b6108f933600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b6109ac6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109579190611bf6565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611963565b6103fa565b6000600160146101000a81548160ff021916908315150217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2357600080fd5b600080600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a8393929190611c11565b602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061188b565b905080610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e90611ebe565b60405180910390fd5b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b7557600080fd5b60011515600160149054906101000a900460ff16151514610b9557600080fd5b6000600160146101000a81548160ff021916908315150217905550610c0c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004611124909392919063ffffffff16565b565b60008060009054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c889190611bf6565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611963565b610ce29190611fb2565b905090565b818160029190610cf8929190611691565b505050565b60008054906101000a9004600b0b81565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d6857600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a8154816bffffffffffffffffffffffff0219169083600b0b6bffffffffffffffffffffffff160217905550610e45600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046112f3909392919063ffffffff16565b5050565b60048060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f4157600080fd5b60001515600160149054906101000a900460ff16151514610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90611e5e565b60405180910390fd5b60018060146101000a81548160ff02191690831515021790555060008054906101000a9004600b0b6bffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110289190611bf6565b60206040518083038186803b15801561104057600080fd5b505afa158015611054573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110789190611963565b10156110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e7e565b60405180910390fd5b611122600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008054906101000a9004600b0b60046114c2909392919063ffffffff16565b565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1663b4b333c660e01b848787600067ffffffffffffffff8111156111d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112075781602001600182028036833780820191505090505b5060405160240161121b9493929190611cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611295929190611c8c565b600060405180830381600087803b1580156112af57600080fd5b505af11580156112c3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906112ec91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166350209a6260e01b858786600067ffffffffffffffff8111156113a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b506040516024016113ea9493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611464929190611c8c565b600060405180830381600087803b15801561147e57600080fd5b505af1158015611492573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906114bb91906118b4565b5050505050565b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166339255d5b8560010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166362fc305e60e01b858786600067ffffffffffffffff811115611573577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115a55781602001600182028036833780820191505090505b506040516024016115b99493929190611d36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518363ffffffff1660e01b8152600401611633929190611c8c565b600060405180830381600087803b15801561164d57600080fd5b505af1158015611661573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061168a91906118b4565b5050505050565b82805461169d906120fb565b90600052602060002090601f0160209004810192826116bf5760008555611706565b82601f106116d857803560ff1916838001178555611706565b82800160010185558215611706579182015b828111156117055782358255916020019190600101906116ea565b5b5090506117139190611717565b5090565b5b80821115611730576000816000905550600101611718565b5090565b600061174761174284611f4a565b611f19565b90508281526020810184848401111561175f57600080fd5b61176a8482856120c8565b509392505050565b600081359050611781816121cb565b92915050565b600081519050611796816121e2565b92915050565b600082601f8301126117ad57600080fd5b81516117bd848260208601611734565b91505092915050565b6000813590506117d5816121f9565b92915050565b60008083601f8401126117ed57600080fd5b8235905067ffffffffffffffff81111561180657600080fd5b60208301915083600182028301111561181e57600080fd5b9250929050565b60008135905061183481612210565b92915050565b60008151905061184981612210565b92915050565b6000806040838503121561186257600080fd5b600061187085828601611772565b9250506020611881858286016117c6565b9150509250929050565b60006020828403121561189d57600080fd5b60006118ab84828501611787565b91505092915050565b6000602082840312156118c657600080fd5b600082015167ffffffffffffffff8111156118e057600080fd5b6118ec8482850161179c565b91505092915050565b6000806020838503121561190857600080fd5b600083013567ffffffffffffffff81111561192257600080fd5b61192e858286016117db565b92509250509250929050565b60006020828403121561194c57600080fd5b600061195a84828501611825565b91505092915050565b60006020828403121561197557600080fd5b60006119838482850161183a565b91505092915050565b61199581611fe3565b82525050565b6119a481611ff5565b82525050565b60006119b582611f7a565b6119bf8185611f90565b93506119cf8185602086016120c8565b6119d8816121ba565b840191505092915050565b6119ec81612038565b82525050565b6119fb8161205c565b82525050565b611a0a81612080565b82525050565b611a19816120a4565b82525050565b611a2881612001565b82525050565b6000611a3982611f85565b611a438185611fa1565b9350611a538185602086016120c8565b611a5c816121ba565b840191505092915050565b6000611a74601883611fa1565b91507f612073747265616d20697320616c7265616479206f70656e00000000000000006000830152602082019050919050565b6000611ab4600283611f90565b91507f30780000000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000611af4601d83611fa1565b91507f4e6f7420656e6f7567682062616c616e6365206465706f73697465642e0000006000830152602082019050919050565b6000611b34601683611fa1565b91507f7468652073747265616d206973206e6f74206f70656e000000000000000000006000830152602082019050919050565b6000611b74601683611fa1565b91507f546f6b656e207472616e73666572206661696c65642e000000000000000000006000830152602082019050919050565b6000611bb4601383611fa1565b91507f496e73756666696369656e742066756e64732e000000000000000000000000006000830152602082019050919050565b611bf08161202e565b82525050565b6000602082019050611c0b600083018461198c565b92915050565b6000606082019050611c26600083018661198c565b611c33602083018561198c565b611c406040830184611be7565b949350505050565b6000604082019050611c5d600083018561198c565b611c6a6020830184611be7565b9392505050565b6000602082019050611c86600083018461199b565b92915050565b6000606082019050611ca160008301856119e3565b8181036020830152611cb381846119aa565b90508181036040830152611cc681611aa7565b90509392505050565b6000602082019050611ce460008301846119f2565b92915050565b6000608082019050611cff6000830187611a01565b611d0c602083018661198c565b611d19604083018561198c565b8181036060830152611d2b81846119aa565b905095945050505050565b6000608082019050611d4b6000830187611a01565b611d58602083018661198c565b611d656040830185611a1f565b8181036060830152611d7781846119aa565b905095945050505050565b6000604082019050611d976000830185611a10565b611da460208301846119e3565b9392505050565b6000602082019050611dc06000830184611a1f565b92915050565b600060e082019050611ddb600083018a611a1f565b611de860208301896119f2565b611df5604083018861198c565b611e02606083018761199b565b8181036080830152611e148186611a2e565b9050611e2360a0830185611be7565b611e3060c0830184611be7565b98975050505050505050565b60006020820190508181036000830152611e568184611a2e565b905092915050565b60006020820190508181036000830152611e7781611a67565b9050919050565b60006020820190508181036000830152611e9781611ae7565b9050919050565b60006020820190508181036000830152611eb781611b27565b9050919050565b60006020820190508181036000830152611ed781611b67565b9050919050565b60006020820190508181036000830152611ef781611ba7565b9050919050565b6000602082019050611f136000830184611be7565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611f4057611f3f61218b565b5b8060405250919050565b600067ffffffffffffffff821115611f6557611f6461218b565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611fbd8261202e565b9150611fc88361202e565b925082611fd857611fd761212d565b5b828204905092915050565b6000611fee8261200e565b9050919050565b60008115159050919050565b600081600b0b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006120438261204a565b9050919050565b60006120558261200e565b9050919050565b60006120678261206e565b9050919050565b60006120798261200e565b9050919050565b600061208b82612092565b9050919050565b600061209d8261200e565b9050919050565b60006120af826120b6565b9050919050565b60006120c18261200e565b9050919050565b60005b838110156120e65780820151818401526020810190506120cb565b838111156120f5576000848401525b50505050565b6000600282049050600182168061211357607f821691505b602082108114156121275761212661215c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6121d481611fe3565b81146121df57600080fd5b50565b6121eb81611ff5565b81146121f657600080fd5b50565b61220281612001565b811461220d57600080fd5b50565b6122198161202e565b811461222457600080fd5b5056fea26469706673582212206a5491999b82a47319233b792d2536be71bd630226c3fe7776041c6c675512f364736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB9146161 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD3112B2E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD3112B2E EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF7260D3E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xFFE5C552 EQ PUSH2 0x29E JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0xB9146161 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA13BF65 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xCCA3A90E EQ PUSH2 0x227 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x5A096B2F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5A096B2F EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x9DAD9382 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB87FE774 EQ PUSH2 0x1C5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x2FB0C5E EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x183 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH2 0x7ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x193A JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH2 0xB1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x1EFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH2 0xCE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0xE9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0xEE7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x2C8 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F4 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x341 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x316 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x324 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x482 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DE SWAP1 PUSH2 0x1EDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x545 SWAP3 SWAP2 SWAP1 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x573 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D0 SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x12065FE0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB9146161 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x20FB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x1E9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F9 CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9AC PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP1 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0C CALLER PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH2 0x1124 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC88 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xCF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1691 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE45 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x12F3 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x1E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1054 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST LT ISZERO PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1122 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xB SIGNEXTEND PUSH1 0x4 PUSH2 0x14C2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB4B333C6 PUSH1 0xE0 SHL DUP5 DUP8 DUP8 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D5 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1207 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x121B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x50209A62 PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13EA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1464 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BB SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x39255D5B DUP6 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62FC305E PUSH1 0xE0 SHL DUP6 DUP8 DUP7 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1573 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x15B9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x20FB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x16BF JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16D8 JUMPI DUP1 CALLDATALOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1706 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1706 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1705 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1713 SWAP2 SWAP1 PUSH2 0x1717 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1718 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 PUSH2 0x1742 DUP5 PUSH2 0x1F4A JUMP JUMPDEST PUSH2 0x1F19 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x175F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x176A DUP5 DUP3 DUP6 PUSH2 0x20C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x21CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1796 DUP2 PUSH2 0x21E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D5 DUP2 PUSH2 0x21F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x181E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1834 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1849 DUP2 PUSH2 0x2210 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1870 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1881 DUP6 DUP3 DUP7 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18AB DUP5 DUP3 DUP6 ADD PUSH2 0x1787 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x179C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1922 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192E DUP6 DUP3 DUP7 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1825 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1983 DUP5 DUP3 DUP6 ADD PUSH2 0x183A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B5 DUP3 PUSH2 0x1F7A JUMP JUMPDEST PUSH2 0x19BF DUP2 DUP6 PUSH2 0x1F90 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x19D8 DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19EC DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x19FB DUP2 PUSH2 0x205C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0A DUP2 PUSH2 0x2080 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A19 DUP2 PUSH2 0x20A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A28 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A39 DUP3 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x1A43 DUP2 DUP6 PUSH2 0x1FA1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1A5C DUP2 PUSH2 0x21BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A74 PUSH1 0x18 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x612073747265616D20697320616C7265616479206F70656E0000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB4 PUSH1 0x2 DUP4 PUSH2 0x1F90 JUMP JUMPDEST SWAP2 POP PUSH32 0x3078000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AF4 PUSH1 0x1D DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420656E6F7567682062616C616E6365206465706F73697465642E000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x7468652073747265616D206973206E6F74206F70656E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B74 PUSH1 0x16 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x546F6B656E207472616E73666572206661696C65642E00000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB4 PUSH1 0x13 DUP4 PUSH2 0x1FA1 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF0 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C26 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C33 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C40 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C5D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1C6A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C86 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CA1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x19E3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1CB3 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CC6 DUP2 PUSH2 0x1AA7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CFF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D0C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D19 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x198C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D2B DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D4B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x1D58 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1D65 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A1F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D77 DUP2 DUP5 PUSH2 0x19AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1DA4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1DDB PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1A1F JUMP JUMPDEST PUSH2 0x1DE8 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x19F2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x198C JUMP JUMPDEST PUSH2 0x1E02 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x199B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 DUP2 DUP7 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP PUSH2 0x1E23 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1E30 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E56 DUP2 DUP5 PUSH2 0x1A2E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E77 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E97 DUP2 PUSH2 0x1AE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EB7 DUP2 PUSH2 0x1B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED7 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EF7 DUP2 PUSH2 0x1BA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x218B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x218B JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBD DUP3 PUSH2 0x202E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FC8 DUP4 PUSH2 0x202E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x212D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FEE DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2043 DUP3 PUSH2 0x204A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2067 DUP3 PUSH2 0x206E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208B DUP3 PUSH2 0x2092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x209D DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP3 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20C1 DUP3 PUSH2 0x200E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20CB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20F5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2113 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x215C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D4 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21EB DUP2 PUSH2 0x1FF5 JUMP JUMPDEST DUP2 EQ PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2202 DUP2 PUSH2 0x2001 JUMP JUMPDEST DUP2 EQ PUSH2 0x220D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2219 DUP2 PUSH2 0x202E JUMP JUMPDEST DUP2 EQ PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x5491999B82A47319233B79 0x2D 0x25 CALLDATASIZE 0xBE PUSH18 0xBD630226C3FE7776041C6C675512F364736F PUSH13 0x63430008000033000000000000 ",
              "sourceMap": "565:3351:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;831;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3423:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3167:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3548:279;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2401:240;;;:::i;:::-;;2965:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2650:163;;;:::i;:::-;;2821:132;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3835:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1891:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1087:34;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;748:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:291;;;:::i;:::-;;806:18;;;;;;;;;;;;;:::o;831:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3423:117::-;3467:15;3502:5;;;;;;;;;;;:15;;;3526:4;3502:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3495:37;;3423:117;:::o;3167:248::-;3262:7;3228:5;;;;;;;;;;;:15;;;3252:4;3228:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;3220:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3304:12;3319:5;;;;;;;;;;;:14;;;3334:10;3346:7;3319:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3304:50;;3373:7;3365:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3167:248;;:::o;3548:279::-;3595:15;3612:18;3632:17;3651:12;3665:19;3686:16;3704:12;3737:8;;;;;;;;;;3747:5;;;;;;;;;;;3754:8;;;;;;;;;;;3764:6;;;;;;;;;;;3772:4;3778;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3797:4;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3729:90;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:279;;;;;;;:::o;2401:240::-;932:5;;;;;;;;;;;918:19;;:10;:19;;;910:28;;;;;;2470:4:::1;2460:14;;:6;;;;;;;;;;;:14;;;2452:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2512:45;2529:10;2541:8;;;;;;;;;;;2551:5;;;;;;;;;;;2512;:16;;:45;;;;;;:::i;:::-;2568:40;2577:5;;;;;;;;;;;:15;;;2601:4;2577:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:8;:40::i;:::-;2628:5;2619:6;;:14;;;;;;;;;;;;;;;;;;2401:240::o:0;2965:194::-;932:5;;;;;;;;;;;918:19;;:10;:19;;;910:28;;;;;;3029:12:::1;3044:5:::0;::::1;;;;;;;;;;:18;;;3063:10;3083:4;3090:7;3044:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3029:69;;3117:7;3109:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;949:1;2965:194:::0;:::o;2650:163::-;932:5;;;;;;;;;;;918:19;;:10;:19;;;910:28;;;;;;2719:4:::1;2709:14;;:6;;;;;;;;;;;:14;;;2701:23;;;::::0;::::1;;2744:5;2735:6;;:14;;;;;;;;;;;;;;;;;;2760:45;2777:10;2789:8;;;;;;;;;;;2799:5;;;;;;;;;;;2760;:16;;:45;;;;;;:::i;:::-;2650:163::o:0;2821:132::-;2869:7;2936:8;;;;;;;;;;;2896:49;;:5;;;;;;;;;;;:15;;;2920:4;2896:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;:::i;:::-;2889:56;;2821:132;:::o;3835:78::-;3900:5;;3893:4;:12;;;;;;;:::i;:::-;;3835:78;;:::o;618:21::-;;;;;;;;;;;;:::o;1891:201::-;932:5;;;;;;;;;;;918:19;;:10;:19;;;910:28;;;;;;1990:9:::1;1979:8;;:20;;;;;;;;;;;;;;;;;;2021:9;2010:8;::::0;:20:::1;;;;;;;;;;;;;;;;;;;;2041:43;2058:8;;;;;;;;;;;2068:5;;;;;;;;;;;2075:8;::::0;::::1;;;;;;;;2041:5;:16;;:43;;;;;;:::i;:::-;1891:201:::0;;:::o;1087:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;748:23::-;;;;;;;;;;;;;:::o;677:24::-;;;;;;;;;;;;;:::o;2102:291::-;932:5;;;;;;;;;;;918:19;;:10;:19;;;910:28;;;;;;2170:5:::1;2160:15;;:6;;;;;;;;;;;:15;;;2152:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2224:4;2215:6:::0;::::1;:13;;;;;;;;;;;;;;;;;;2288:8;::::0;::::1;;;;;;;;2247:50;;:5;;;;;;;;;;;:15;;;2271:4;2247:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;2239:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2342:43;2359:8;;;;;;;;;;;2369:5;;;;;;;;;;;2376:8;::::0;::::1;;;;;;;;2342:5;:16;;:43;;;;;;:::i;:::-;2102:291::o:0;2839:494:2:-;3003:10;:15;;;;;;;;;;;;:29;;;3046:10;:14;;;;;;;;;;;;3114:34;;;3166:5;3189:6;3213:8;3249:1;3239:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3074:206;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3003:323;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2839:494;;;;:::o;1763:496::-;1927:10;:15;;;;;;;;;;;;:29;;;1970:10;:14;;;;;;;;;;;;2038:34;;;2090:5;2113:8;2139;2175:1;2165:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1998:208;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1927:325;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1763:496;;;;:::o;669:::-;833:10;:15;;;;;;;;;;;;:29;;;876:10;:14;;;;;;;;;;;;944:34;;;996:5;1019:8;1045;1081:1;1071:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:208;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:325;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;669:496;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:351:17:-;;120:64;135:48;176:6;135:48;:::i;:::-;120:64;:::i;:::-;111:73;;207:6;200:5;193:21;245:4;238:5;234:16;283:3;274:6;269:3;265:16;262:25;259:2;;;300:1;297;290:12;259:2;313:39;345:6;340:3;335;313:39;:::i;:::-;101:257;;;;;;:::o;364:139::-;;448:6;435:20;426:29;;464:33;491:5;464:33;:::i;:::-;416:87;;;;:::o;509:137::-;;594:6;588:13;579:22;;610:30;634:5;610:30;:::i;:::-;569:77;;;;:::o;665:286::-;;780:3;773:4;765:6;761:17;757:27;747:2;;798:1;795;788:12;747:2;831:6;825:13;856:89;941:3;933:6;926:4;918:6;914:17;856:89;:::i;:::-;847:98;;737:214;;;;;:::o;957:135::-;;1039:6;1026:20;1017:29;;1055:31;1080:5;1055:31;:::i;:::-;1007:85;;;;:::o;1112:352::-;;;1230:3;1223:4;1215:6;1211:17;1207:27;1197:2;;1248:1;1245;1238:12;1197:2;1284:6;1271:20;1261:30;;1314:18;1306:6;1303:30;1300:2;;;1346:1;1343;1336:12;1300:2;1383:4;1375:6;1371:17;1359:29;;1437:3;1429:4;1421:6;1417:17;1407:8;1403:32;1400:41;1397:2;;;1454:1;1451;1444:12;1397:2;1187:277;;;;;:::o;1470:139::-;;1554:6;1541:20;1532:29;;1570:33;1597:5;1570:33;:::i;:::-;1522:87;;;;:::o;1615:143::-;;1703:6;1697:13;1688:22;;1719:33;1746:5;1719:33;:::i;:::-;1678:80;;;;:::o;1764:403::-;;;1887:2;1875:9;1866:7;1862:23;1858:32;1855:2;;;1903:1;1900;1893:12;1855:2;1946:1;1971:53;2016:7;2007:6;1996:9;1992:22;1971:53;:::i;:::-;1961:63;;1917:117;2073:2;2099:51;2142:7;2133:6;2122:9;2118:22;2099:51;:::i;:::-;2089:61;;2044:116;1845:322;;;;;:::o;2173:278::-;;2289:2;2277:9;2268:7;2264:23;2260:32;2257:2;;;2305:1;2302;2295:12;2257:2;2348:1;2373:61;2426:7;2417:6;2406:9;2402:22;2373:61;:::i;:::-;2363:71;;2319:125;2247:204;;;;:::o;2457:388::-;;2585:2;2573:9;2564:7;2560:23;2556:32;2553:2;;;2601:1;2598;2591:12;2553:2;2665:1;2654:9;2650:17;2644:24;2695:18;2687:6;2684:30;2681:2;;;2727:1;2724;2717:12;2681:2;2755:73;2820:7;2811:6;2800:9;2796:22;2755:73;:::i;:::-;2745:83;;2615:223;2543:302;;;;:::o;2851:395::-;;;2979:2;2967:9;2958:7;2954:23;2950:32;2947:2;;;2995:1;2992;2985:12;2947:2;3066:1;3055:9;3051:17;3038:31;3096:18;3088:6;3085:30;3082:2;;;3128:1;3125;3118:12;3082:2;3164:65;3221:7;3212:6;3201:9;3197:22;3164:65;:::i;:::-;3146:83;;;;3009:230;2937:309;;;;;:::o;3252:262::-;;3360:2;3348:9;3339:7;3335:23;3331:32;3328:2;;;3376:1;3373;3366:12;3328:2;3419:1;3444:53;3489:7;3480:6;3469:9;3465:22;3444:53;:::i;:::-;3434:63;;3390:117;3318:196;;;;:::o;3520:284::-;;3639:2;3627:9;3618:7;3614:23;3610:32;3607:2;;;3655:1;3652;3645:12;3607:2;3698:1;3723:64;3779:7;3770:6;3759:9;3755:22;3723:64;:::i;:::-;3713:74;;3669:128;3597:207;;;;:::o;3810:118::-;3897:24;3915:5;3897:24;:::i;:::-;3892:3;3885:37;3875:53;;:::o;3934:109::-;4015:21;4030:5;4015:21;:::i;:::-;4010:3;4003:34;3993:50;;:::o;4049:360::-;;4163:38;4195:5;4163:38;:::i;:::-;4217:70;4280:6;4275:3;4217:70;:::i;:::-;4210:77;;4296:52;4341:6;4336:3;4329:4;4322:5;4318:16;4296:52;:::i;:::-;4373:29;4395:6;4373:29;:::i;:::-;4368:3;4364:39;4357:46;;4139:270;;;;;:::o;4415:195::-;4534:69;4597:5;4534:69;:::i;:::-;4529:3;4522:82;4512:98;;:::o;4616:171::-;4723:57;4774:5;4723:57;:::i;:::-;4718:3;4711:70;4701:86;;:::o;4793:181::-;4905:62;4961:5;4905:62;:::i;:::-;4900:3;4893:75;4883:91;;:::o;4980:171::-;5087:57;5138:5;5087:57;:::i;:::-;5082:3;5075:70;5065:86;;:::o;5157:112::-;5240:22;5256:5;5240:22;:::i;:::-;5235:3;5228:35;5218:51;;:::o;5275:364::-;;5391:39;5424:5;5391:39;:::i;:::-;5446:71;5510:6;5505:3;5446:71;:::i;:::-;5439:78;;5526:52;5571:6;5566:3;5559:4;5552:5;5548:16;5526:52;:::i;:::-;5603:29;5625:6;5603:29;:::i;:::-;5598:3;5594:39;5587:46;;5367:272;;;;;:::o;5645:322::-;;5808:67;5872:2;5867:3;5808:67;:::i;:::-;5801:74;;5905:26;5901:1;5896:3;5892:11;5885:47;5958:2;5953:3;5949:12;5942:19;;5791:176;;;:::o;5973:297::-;;6135:65;6198:1;6193:3;6135:65;:::i;:::-;6128:72;;6230:4;6226:1;6221:3;6217:11;6210:25;6261:2;6256:3;6252:12;6245:19;;6118:152;;;:::o;6276:327::-;;6439:67;6503:2;6498:3;6439:67;:::i;:::-;6432:74;;6536:31;6532:1;6527:3;6523:11;6516:52;6594:2;6589:3;6585:12;6578:19;;6422:181;;;:::o;6609:320::-;;6772:67;6836:2;6831:3;6772:67;:::i;:::-;6765:74;;6869:24;6865:1;6860:3;6856:11;6849:45;6920:2;6915:3;6911:12;6904:19;;6755:174;;;:::o;6935:320::-;;7098:67;7162:2;7157:3;7098:67;:::i;:::-;7091:74;;7195:24;7191:1;7186:3;7182:11;7175:45;7246:2;7241:3;7237:12;7230:19;;7081:174;;;:::o;7261:317::-;;7424:67;7488:2;7483:3;7424:67;:::i;:::-;7417:74;;7521:21;7517:1;7512:3;7508:11;7501:42;7569:2;7564:3;7560:12;7553:19;;7407:171;;;:::o;7584:118::-;7671:24;7689:5;7671:24;:::i;:::-;7666:3;7659:37;7649:53;;:::o;7708:222::-;;7839:2;7828:9;7824:18;7816:26;;7852:71;7920:1;7909:9;7905:17;7896:6;7852:71;:::i;:::-;7806:124;;;;:::o;7936:442::-;;8123:2;8112:9;8108:18;8100:26;;8136:71;8204:1;8193:9;8189:17;8180:6;8136:71;:::i;:::-;8217:72;8285:2;8274:9;8270:18;8261:6;8217:72;:::i;:::-;8299;8367:2;8356:9;8352:18;8343:6;8299:72;:::i;:::-;8090:288;;;;;;:::o;8384:332::-;;8543:2;8532:9;8528:18;8520:26;;8556:71;8624:1;8613:9;8609:17;8600:6;8556:71;:::i;:::-;8637:72;8705:2;8694:9;8690:18;8681:6;8637:72;:::i;:::-;8510:206;;;;;:::o;8722:210::-;;8847:2;8836:9;8832:18;8824:26;;8860:65;8922:1;8911:9;8907:17;8898:6;8860:65;:::i;:::-;8814:118;;;;:::o;8938:788::-;;9247:2;9236:9;9232:18;9224:26;;9260:103;9360:1;9349:9;9345:17;9336:6;9260:103;:::i;:::-;9410:9;9404:4;9400:20;9395:2;9384:9;9380:18;9373:48;9438:76;9509:4;9500:6;9438:76;:::i;:::-;9430:84;;9561:9;9555:4;9551:20;9546:2;9535:9;9531:18;9524:48;9589:130;9714:4;9589:130;:::i;:::-;9581:138;;9214:512;;;;;:::o;9732:262::-;;9883:2;9872:9;9868:18;9860:26;;9896:91;9984:1;9973:9;9969:17;9960:6;9896:91;:::i;:::-;9850:144;;;;:::o;10000:690::-;;10258:3;10247:9;10243:19;10235:27;;10272:96;10365:1;10354:9;10350:17;10341:6;10272:96;:::i;:::-;10378:72;10446:2;10435:9;10431:18;10422:6;10378:72;:::i;:::-;10460;10528:2;10517:9;10513:18;10504:6;10460:72;:::i;:::-;10579:9;10573:4;10569:20;10564:2;10553:9;10549:18;10542:48;10607:76;10678:4;10669:6;10607:76;:::i;:::-;10599:84;;10225:465;;;;;;;:::o;10696:682::-;;10950:3;10939:9;10935:19;10927:27;;10964:96;11057:1;11046:9;11042:17;11033:6;10964:96;:::i;:::-;11070:72;11138:2;11127:9;11123:18;11114:6;11070:72;:::i;:::-;11152:68;11216:2;11205:9;11201:18;11192:6;11152:68;:::i;:::-;11267:9;11261:4;11257:20;11252:2;11241:9;11237:18;11230:48;11295:76;11366:4;11357:6;11295:76;:::i;:::-;11287:84;;10917:461;;;;;;;:::o;11384:436::-;;11595:2;11584:9;11580:18;11572:26;;11608:91;11696:1;11685:9;11681:17;11672:6;11608:91;:::i;:::-;11709:104;11809:2;11798:9;11794:18;11785:6;11709:104;:::i;:::-;11562:258;;;;;:::o;11826:214::-;;11953:2;11942:9;11938:18;11930:26;;11966:67;12030:1;12019:9;12015:17;12006:6;11966:67;:::i;:::-;11920:120;;;;:::o;12046:997::-;;12375:3;12364:9;12360:19;12352:27;;12389:67;12453:1;12442:9;12438:17;12429:6;12389:67;:::i;:::-;12466:92;12554:2;12543:9;12539:18;12530:6;12466:92;:::i;:::-;12568:72;12636:2;12625:9;12621:18;12612:6;12568:72;:::i;:::-;12650:66;12712:2;12701:9;12697:18;12688:6;12650:66;:::i;:::-;12764:9;12758:4;12754:20;12748:3;12737:9;12733:19;12726:49;12792:78;12865:4;12856:6;12792:78;:::i;:::-;12784:86;;12880:73;12948:3;12937:9;12933:19;12924:6;12880:73;:::i;:::-;12963;13031:3;13020:9;13016:19;13007:6;12963:73;:::i;:::-;12342:701;;;;;;;;;;:::o;13049:313::-;;13200:2;13189:9;13185:18;13177:26;;13249:9;13243:4;13239:20;13235:1;13224:9;13220:17;13213:47;13277:78;13350:4;13341:6;13277:78;:::i;:::-;13269:86;;13167:195;;;;:::o;13368:419::-;;13572:2;13561:9;13557:18;13549:26;;13621:9;13615:4;13611:20;13607:1;13596:9;13592:17;13585:47;13649:131;13775:4;13649:131;:::i;:::-;13641:139;;13539:248;;;:::o;13793:419::-;;13997:2;13986:9;13982:18;13974:26;;14046:9;14040:4;14036:20;14032:1;14021:9;14017:17;14010:47;14074:131;14200:4;14074:131;:::i;:::-;14066:139;;13964:248;;;:::o;14218:419::-;;14422:2;14411:9;14407:18;14399:26;;14471:9;14465:4;14461:20;14457:1;14446:9;14442:17;14435:47;14499:131;14625:4;14499:131;:::i;:::-;14491:139;;14389:248;;;:::o;14643:419::-;;14847:2;14836:9;14832:18;14824:26;;14896:9;14890:4;14886:20;14882:1;14871:9;14867:17;14860:47;14924:131;15050:4;14924:131;:::i;:::-;14916:139;;14814:248;;;:::o;15068:419::-;;15272:2;15261:9;15257:18;15249:26;;15321:9;15315:4;15311:20;15307:1;15296:9;15292:17;15285:47;15349:131;15475:4;15349:131;:::i;:::-;15341:139;;15239:248;;;:::o;15493:222::-;;15624:2;15613:9;15609:18;15601:26;;15637:71;15705:1;15694:9;15690:17;15681:6;15637:71;:::i;:::-;15591:124;;;;:::o;15721:283::-;;15787:2;15781:9;15771:19;;15829:4;15821:6;15817:17;15936:6;15924:10;15921:22;15900:18;15888:10;15885:34;15882:62;15879:2;;;15947:18;;:::i;:::-;15879:2;15987:10;15983:2;15976:22;15761:243;;;;:::o;16010:331::-;;16161:18;16153:6;16150:30;16147:2;;;16183:18;;:::i;:::-;16147:2;16268:4;16264:9;16257:4;16249:6;16245:17;16241:33;16233:41;;16329:4;16323;16319:15;16311:23;;16076:265;;;:::o;16347:98::-;;16432:5;16426:12;16416:22;;16405:40;;;:::o;16451:99::-;;16537:5;16531:12;16521:22;;16510:40;;;:::o;16556:168::-;;16673:6;16668:3;16661:19;16713:4;16708:3;16704:14;16689:29;;16651:73;;;;:::o;16730:169::-;;16848:6;16843:3;16836:19;16888:4;16883:3;16879:14;16864:29;;16826:73;;;;:::o;16905:185::-;;16962:20;16980:1;16962:20;:::i;:::-;16957:25;;16996:20;17014:1;16996:20;:::i;:::-;16991:25;;17035:1;17025:2;;17040:18;;:::i;:::-;17025:2;17082:1;17079;17075:9;17070:14;;16947:143;;;;:::o;17096:96::-;;17162:24;17180:5;17162:24;:::i;:::-;17151:35;;17141:51;;;:::o;17198:90::-;;17275:5;17268:13;17261:21;17250:32;;17240:48;;;:::o;17294:91::-;;17373:5;17369:2;17358:21;17347:32;;17337:48;;;:::o;17391:126::-;;17468:42;17461:5;17457:54;17446:65;;17436:81;;;:::o;17523:77::-;;17589:5;17578:16;;17568:32;;;:::o;17606:190::-;;17721:69;17784:5;17721:69;:::i;:::-;17708:82;;17698:98;;;:::o;17802:145::-;;17917:24;17935:5;17917:24;:::i;:::-;17904:37;;17894:53;;;:::o;17953:166::-;;18056:57;18107:5;18056:57;:::i;:::-;18043:70;;18033:86;;;:::o;18125:133::-;;18228:24;18246:5;18228:24;:::i;:::-;18215:37;;18205:53;;;:::o;18264:176::-;;18372:62;18428:5;18372:62;:::i;:::-;18359:75;;18349:91;;;:::o;18446:138::-;;18554:24;18572:5;18554:24;:::i;:::-;18541:37;;18531:53;;;:::o;18590:166::-;;18693:57;18744:5;18693:57;:::i;:::-;18680:70;;18670:86;;;:::o;18762:133::-;;18865:24;18883:5;18865:24;:::i;:::-;18852:37;;18842:53;;;:::o;18901:307::-;18969:1;18979:113;18993:6;18990:1;18987:13;18979:113;;;19078:1;19073:3;19069:11;19063:18;19059:1;19054:3;19050:11;19043:39;19015:2;19012:1;19008:10;19003:15;;18979:113;;;19110:6;19107:1;19104:13;19101:2;;;19190:1;19181:6;19176:3;19172:16;19165:27;19101:2;18950:258;;;;:::o;19214:320::-;;19295:1;19289:4;19285:12;19275:22;;19342:1;19336:4;19332:12;19363:18;19353:2;;19419:4;19411:6;19407:17;19397:27;;19353:2;19481;19473:6;19470:14;19450:18;19447:38;19444:2;;;19500:18;;:::i;:::-;19444:2;19265:269;;;;:::o;19726:180::-;19774:77;19771:1;19764:88;19871:4;19868:1;19861:15;19895:4;19892:1;19885:15;19912:180;19960:77;19957:1;19950:88;20057:4;20054:1;20047:15;20081:4;20078:1;20071:15;20098:180;20146:77;20143:1;20136:88;20243:4;20240:1;20233:15;20267:4;20264:1;20257:15;20284:102;;20376:2;20372:7;20367:2;20360:5;20356:14;20352:28;20342:38;;20332:54;;;:::o;20392:122::-;20465:24;20483:5;20465:24;:::i;:::-;20458:5;20455:35;20445:2;;20504:1;20501;20494:12;20445:2;20435:79;:::o;20520:116::-;20590:21;20605:5;20590:21;:::i;:::-;20583:5;20580:32;20570:2;;20626:1;20623;20616:12;20570:2;20560:76;:::o;20642:118::-;20713:22;20729:5;20713:22;:::i;:::-;20706:5;20703:33;20693:2;;20750:1;20747;20740:12;20693:2;20683:77;:::o;20766:122::-;20839:24;20857:5;20839:24;:::i;:::-;20832:5;20829:35;20819:2;;20878:1;20875;20868:12;20819:2;20809:79;:::o"
            },
            "methodIdentifiers": {
              "active()": "02fb0c5e",
              "cfaV1()": "d3112b2e",
              "closeStream()": "9dad9382",
              "deposit(uint256)": "b6b55f25",
              "editStream(address,int96)": "cca3a90e",
              "flowRate()": "ca13bf65",
              "getBalance()": "12065fe0",
              "getStreamData()": "5a096b2f",
              "getStreamerETA()": "b9146161",
              "name()": "06fdde03",
              "openStream()": "ffe5c552",
              "pauseStream()": "b87fe774",
              "receiver()": "f7260d3e",
              "setName(string)": "c47f0027",
              "token()": "fc0c546a",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfaV1\",\"outputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantFlowAgreementV1\",\"name\":\"cfa\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"}],\"name\":\"editStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowRate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStreamData\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"_flowRate\",\"type\":\"int96\"},{\"internalType\":\"contract ISuperToken\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_eta\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStreamerETA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Streamer.sol\":\"Streamer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1762b5bc15a009b5f092ccf547b81e0827c8705884f18e0623e497658514a7ed\",\"dweb:/ipfs/QmTtmVQYuynan3j2uVjdjjRJS1mr7LPRgxSZNnfqC7oxkz\"]},\"@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x433e83e6f3afc8490f921bec133ad2db18be9f9f67b1670af550f958cf38c3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fb2dcdb30be1d7a3c81a7cddb2c5aabeb25cb8f67a56e51a291b356fa8ed058a\",\"dweb:/ipfs/QmXq9DZQ7P2f9Cngc6JGcCPLe4teX94VCfVKAdy9MxgNUr\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xd42f8c6825dc5088d78e0959cd44f1048dbc970563d7b8d18bae97fcfdc966a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://56412ec9495bba9f4021e5be5a132a348000575d0517eb0caf58903c7bedc3c9\",\"dweb:/ipfs/QmRp2F1yrd9zZaN5LpnXd5gGw9zvRAB4fLB7pkZcJMWiMf\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x629a096aa6ce1da21b6d6861ebcd640257fc3c77e5d7f7de5de73b251a0be4b3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://41046b449583e40efa0bd9e99147474cfbbc12fbba2e7184deb8c95939f04e9f\",\"dweb:/ipfs/QmT9HGuLjGbZF1yM7RtnyRo8GuVXzPk8rCjibKTKmc2LDN\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xcf8a33fadd5db47562156a11098623246efd1b46a2c3d28269767bcbb324fd66\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5c0273b4a136874ca4ad1b3f66b312adfa8e8ed48b301e4e979081d4923bb55f\",\"dweb:/ipfs/QmQvK9ZQggymJAftai2aA89EfQY2hX3MSpejNkr6kNf45m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0xca93702505ec3c8244227e372687d9bdbc9d368fa07723d310ab9550501abb2a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3514c2c72fc866064227ea28fceea9dec4ca27cdbda2cff546b59f6b899cee4d\",\"dweb:/ipfs/QmdpFCRDm8An2U6TCTUK3Zopp8wVS44mzh2YjVvtruE3dZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xba355f7d7d5d32ca345bcdb355759ba598a911ff07227ff80012a5e0bf660fb1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://72c2669590a012587b892f0bbb166079ffb9e4c2044511b45eb6b34489f83b30\",\"dweb:/ipfs/QmQckdZ7tbboxPpXSt8irWo98KBcZRT5xNPuGf7yuZxZw2\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x7dc514c6c9eda681ed8ad66ccfb68dc22764b6c429ab55fddbba28b6b148621b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bc4b3b35bb0ddd9323afa1f25468eb706e5f7eccce6ff9beec9657aeea8bec33\",\"dweb:/ipfs/QmSLKq8JYWavnjDokYoe1cUERbvWFfiBWBJ2zDCMVyycsM\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x987a883e8acd87e07eb00ebb1c882d294c7a0af2e5a8cb234270f83f4168438f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://87631a2a511fcfd20787d0bb633d37f3a810bd50c58502c996106b97f2795272\",\"dweb:/ipfs/QmeR8yfLL41en8GjszYRc8Cw9QoEmRQ6j3hCi8JRsym3vZ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x2ac401c7fb012ef43d8becad0196bcd41ac9ad33778a7a5e4809a1740a646e63\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a04710e0e2a4d0183d2760b1ef73e970e4070eaeee3dfefe5ba4bed61dd45ada\",\"dweb:/ipfs/QmYCxDFAWmrCTzioikvbeJtHByWvyxT9nARBuaVoYmopPo\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x6c573b0c0d9ccfc73f787da2e06c725b714d9a36357cfe4fb3c5fb7b47d75665\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af67f4b3d6ea0c88ba9d1c1cfa0be051de016e689b02ba931c871ecad8fad336\",\"dweb:/ipfs/QmPRQsAEPUcJjxXxjAmttXTbmuSdaDPi41KAqTMYhM6L5m\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x808d3a486826e7f119671174a77896c6e23578e691625350dbb3e9f74a0d5137\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://06a7a1bc2ed6888c7080a8e1fb676b7f3972b3f22620c771a41ca3a0ee78b968\",\"dweb:/ipfs/QmW7qpRwv2vEtCtENoP4BUkK4yRBbiKUZbPbyXNbPthiLQ\"]},\"@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x4dee21b8f64edbfe811a300d31f529b5367d1186d69b8b2b8dc3373be7a108b0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://67edf7ddbd90cd7871dc3c92202d4a749d3be0065174fd0f5b89b18edac9d8d1\",\"dweb:/ipfs/QmNc58Ep6sYkSybGVAgmkeCjHFdBL2m1sGJGUgR99xKqeh\"]},\"contracts/Streamer.sol\":{\"keccak256\":\"0x884c1a80df2603c456356f318dffc83ede3c56b44b13cbd20f0840f8887c8565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc23147bc8f49636d9831595ead9ec345c2f9c6cb50a6a74b195edc0a6621a67\",\"dweb:/ipfs/QmXNAQw5ir33nsASqhydT2TBE4CRGEUw2xscngSDzn38t7\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "316:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "342:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "342:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "341:9:0"
                  },
                  "scope": 77,
                  "src": "296:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "357:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "453:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "453:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "452:17:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "493:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "492:9:0"
                  },
                  "scope": 77,
                  "src": "434:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "508:202:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "733:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "745:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:28:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "779:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:6:0"
                  },
                  "scope": 77,
                  "src": "715:70:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "791:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 36,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1079:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1079:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1094:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1094:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:32:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1134:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1134:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1133:9:0"
                  },
                  "scope": 77,
                  "src": "1060:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 37,
                    "nodeType": "StructuredDocumentation",
                    "src": "1149:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 46,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1813:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1813:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1830:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1830:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1812:33:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1864:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1864:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:6:0"
                  },
                  "scope": 77,
                  "src": "1796:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1876:287:0",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2199:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2221:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2241:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2189:72:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2280:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2279:6:0"
                  },
                  "scope": 77,
                  "src": "2168:118:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "2292:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 67,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2470:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2470:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2492:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2492:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2512:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2469:57:0"
                  },
                  "src": "2455:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "2533:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 76,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2701:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2701:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2724:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2724:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2749:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2749:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2700:63:0"
                  },
                  "src": "2686:78:0"
                }
              ],
              "scope": 78,
              "src": "202:2564:0"
            }
          ],
          "src": "106:2661:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC777/IERC777.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
          "exportedSymbols": {
            "IERC777": [
              236
            ]
          },
          "id": 237,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "93:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 80,
                "nodeType": "StructuredDocumentation",
                "src": "118:372:1",
                "text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
              },
              "fullyImplemented": false,
              "id": 236,
              "linearizedBaseContracts": [
                236
              ],
              "name": "IERC777",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "515:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 86,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 86,
                        "src": "613:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "612:15:1"
                  },
                  "scope": 236,
                  "src": "574:54:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 87,
                    "nodeType": "StructuredDocumentation",
                    "src": "634:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 92,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "756:2:1"
                  },
                  "returnParameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 92,
                        "src": "782:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "782:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "781:15:1"
                  },
                  "scope": 236,
                  "src": "741:56:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 93,
                    "nodeType": "StructuredDocumentation",
                    "src": "803:287:1",
                    "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
                  },
                  "functionSelector": "556f0dc7",
                  "id": 98,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "granularity",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1115:2:1"
                  },
                  "returnParameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1141:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1140:9:1"
                  },
                  "scope": 236,
                  "src": "1095:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "1156:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1247:2:1"
                  },
                  "returnParameters": {
                    "id": 103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 102,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "1273:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:9:1"
                  },
                  "scope": 236,
                  "src": "1227:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "1288:83:1",
                    "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
                  },
                  "functionSelector": "70a08231",
                  "id": 112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "1395:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1395:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1394:15:1"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "1433:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1433:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1432:9:1"
                  },
                  "scope": 236,
                  "src": "1376:66:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 113,
                    "nodeType": "StructuredDocumentation",
                    "src": "1448:585:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "9bd9bbc6",
                  "id": 122,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "2061:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2061:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "2088:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2088:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "2112:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2112:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2051:86:1"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2146:0:1"
                  },
                  "scope": 236,
                  "src": "2038:109:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 123,
                    "nodeType": "StructuredDocumentation",
                    "src": "2153:404:1",
                    "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
                  },
                  "functionSelector": "fe9d9303",
                  "id": 130,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "2576:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2576:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "2592:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2575:37:1"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2621:0:1"
                  },
                  "scope": 236,
                  "src": "2562:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "2628:249:1",
                    "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
                  },
                  "functionSelector": "d95b6371",
                  "id": 140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOperatorFor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2905:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2905:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2923:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2923:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2904:39:1"
                  },
                  "returnParameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 138,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2967:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2967:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2966:6:1"
                  },
                  "scope": 236,
                  "src": "2882:91:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 141,
                    "nodeType": "StructuredDocumentation",
                    "src": "2979:233:1",
                    "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "959b8c3f",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "3244:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3244:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3243:18:1"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3270:0:1"
                  },
                  "scope": 236,
                  "src": "3217:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "3277:261:1",
                    "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "fad8b32a",
                  "id": 152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeOperator",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "3567:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3567:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3566:18:1"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3593:0:1"
                  },
                  "scope": 236,
                  "src": "3543:51:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 153,
                    "nodeType": "StructuredDocumentation",
                    "src": "3600:338:1",
                    "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
                  },
                  "functionSelector": "06e48538",
                  "id": 159,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultOperators",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3968:2:1"
                  },
                  "returnParameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "3994:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3994:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 156,
                          "nodeType": "ArrayTypeName",
                          "src": "3994:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3993:18:1"
                  },
                  "scope": 236,
                  "src": "3943:69:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "4018:714:1",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "62ad1b83",
                  "id": 173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorSend",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4768:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4768:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4792:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4792:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4819:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4819:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4843:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4843:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "4872:27:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4872:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4758:147:1"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4914:0:1"
                  },
                  "scope": 236,
                  "src": "4737:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 174,
                    "nodeType": "StructuredDocumentation",
                    "src": "4921:532:1",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
                  },
                  "functionSelector": "fc673c4f",
                  "id": 185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "5489:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5489:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "5514:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5514:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "5538:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5538:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "5567:27:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5567:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5479:121:1"
                  },
                  "returnParameters": {
                    "id": 184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5609:0:1"
                  },
                  "scope": 236,
                  "src": "5458:152:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 199,
                  "name": "Sent",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 187,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5636:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5636:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5670:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5670:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5700:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5700:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5728:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5728:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5752:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5752:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "5772:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5772:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5626:170:1"
                  },
                  "src": "5616:181:1"
                },
                {
                  "anonymous": false,
                  "id": 211,
                  "name": "Minted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "5816:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "5842:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5842:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "5862:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5862:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "5878:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5878:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 211,
                        "src": "5890:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5890:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5815:94:1"
                  },
                  "src": "5803:107:1"
                },
                {
                  "anonymous": false,
                  "id": 223,
                  "name": "Burned",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "5929:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "5955:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "5977:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5977:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "5993:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5993:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "6005:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6005:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:96:1"
                  },
                  "src": "5916:109:1"
                },
                {
                  "anonymous": false,
                  "id": 229,
                  "name": "AuthorizedOperator",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6056:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6056:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 227,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "6082:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6082:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6055:55:1"
                  },
                  "src": "6031:80:1"
                },
                {
                  "anonymous": false,
                  "id": 235,
                  "name": "RevokedOperator",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "6139:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6139:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "6165:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6165:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6138:55:1"
                  },
                  "src": "6117:77:1"
                }
              ],
              "scope": 237,
              "src": "491:5705:1"
            }
          ],
          "src": "93:6104:1"
        },
        "id": 1
      },
      "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
          "exportedSymbols": {
            "CFAv1Library": [
              756
            ],
            "IConstantFlowAgreementV1": [
              927
            ],
            "ISuperfluid": [
              2287
            ],
            "ISuperfluidToken": [
              2658
            ]
          },
          "id": 757,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 238,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "34:24:2"
            },
            {
              "id": 239,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "59:33:2"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "../interfaces/superfluid/ISuperfluid.sol",
              "id": 242,
              "nodeType": "ImportDirective",
              "scope": 757,
              "sourceUnit": 2288,
              "src": "94:97:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 240,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "107:11:2",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 241,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "124:16:2",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "file": "../interfaces/agreements/IConstantFlowAgreementV1.sol",
              "id": 244,
              "nodeType": "ImportDirective",
              "scope": 757,
              "sourceUnit": 928,
              "src": "193:101:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 243,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "206:24:2",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 756,
              "linearizedBaseContracts": [
                756
              ],
              "name": "CFAv1Library",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "CFAv1Library.InitData",
                  "id": 251,
                  "members": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "host",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "350:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                        "typeString": "contract ISuperfluid"
                      },
                      "typeName": {
                        "id": 246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 245,
                          "name": "ISuperfluid",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2287,
                          "src": "350:11:2"
                        },
                        "referencedDeclaration": 2287,
                        "src": "350:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 250,
                      "mutability": "mutable",
                      "name": "cfa",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "376:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                        "typeString": "contract IConstantFlowAgreementV1"
                      },
                      "typeName": {
                        "id": 249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 248,
                          "name": "IConstantFlowAgreementV1",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 927,
                          "src": "376:24:2"
                        },
                        "referencedDeclaration": 927,
                        "src": "376:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                          "typeString": "contract IConstantFlowAgreementV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitData",
                  "nodeType": "StructDefinition",
                  "scope": 756,
                  "src": "324:87:2",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 288,
                    "nodeType": "Block",
                    "src": "823:342:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 269,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "876:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "876:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 273,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 254,
                                        "src": "944:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 274,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "944:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 814,
                                    "src": "944:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "944:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 277,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "996:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 278,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 256,
                                  "src": "1019:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 279,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "1045:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 282,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1081:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1071:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 280,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1075:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1071:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 271,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "904:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "904:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "904:208:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1126:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 264,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 254,
                                "src": "833:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "833:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "833:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:325:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 287,
                        "nodeType": "ExpressionStatement",
                        "src": "833:325:2"
                      }
                    ]
                  },
                  "id": 289,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 289,
                        "src": "698:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 253,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 252,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "698:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "698:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 289,
                        "src": "735:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "735:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 289,
                        "src": "761:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 258,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 257,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "761:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "761:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 289,
                        "src": "793:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:125:2"
                  },
                  "returnParameters": {
                    "id": 263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "823:0:2"
                  },
                  "scope": 756,
                  "src": "669:496:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 328,
                    "nodeType": "Block",
                    "src": "1394:328:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 309,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "1447:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "1447:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 313,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 292,
                                        "src": "1515:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 314,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "1515:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 315,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "createFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 814,
                                    "src": "1515:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1515:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 317,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 297,
                                  "src": "1567:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 318,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "1590:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 319,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "1616:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1652:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "1642:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 320,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1646:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1642:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 311,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1475:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1475:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1475:208:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 325,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "1697:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 304,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 292,
                                "src": "1404:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "1404:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "1404:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1404:311:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 327,
                        "nodeType": "ExpressionStatement",
                        "src": "1404:311:2"
                      }
                    ]
                  },
                  "id": 329,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1237:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 291,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 290,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "1237:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "1237:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1275:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1301:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 296,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 295,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1301:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1301:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1333:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 329,
                        "src": "1357:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1227:157:2"
                  },
                  "returnParameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1394:0:2"
                  },
                  "scope": 756,
                  "src": "1208:514:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "1917:342:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 347,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "1970:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 348,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "1970:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 351,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 332,
                                        "src": "2038:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "2038:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "updateFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 829,
                                    "src": "2038:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2038:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 355,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 337,
                                  "src": "2090:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 356,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 334,
                                  "src": "2113:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 357,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 339,
                                  "src": "2139:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2175:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "2165:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 358,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2169:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2165:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 349,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1998:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1998:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1998:208:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2220:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 342,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "1927:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "1927:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "1927:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1927:325:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 365,
                        "nodeType": "ExpressionStatement",
                        "src": "1927:325:2"
                      }
                    ]
                  },
                  "id": 367,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "1792:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 331,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 330,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "1792:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "1792:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "1829:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1829:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "1855:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 336,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 335,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1855:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1855:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "1887:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1887:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1782:125:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1917:0:2"
                  },
                  "scope": 756,
                  "src": "1763:496:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 406,
                    "nodeType": "Block",
                    "src": "2487:328:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 387,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "2540:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "2540:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 391,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 370,
                                        "src": "2608:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 392,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "2608:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "updateFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 829,
                                    "src": "2608:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2608:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 395,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "2660:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 396,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "2683:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 397,
                                  "name": "flowRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "2709:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 400,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2745:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "2735:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 398,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2739:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2735:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 389,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2568:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2568:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2568:208:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 403,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 379,
                              "src": "2790:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 382,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "2497:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 385,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "2497:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "2497:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2497:311:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "2497:311:2"
                      }
                    ]
                  },
                  "id": 407,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "2331:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 369,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 368,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "2331:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "2331:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "2368:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2368:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "2394:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 374,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 373,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "2394:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "2394:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "2426:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2426:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 407,
                        "src": "2450:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2450:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2321:156:2"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:0:2"
                  },
                  "scope": 756,
                  "src": "2302:513:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 444,
                    "nodeType": "Block",
                    "src": "2993:340:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 425,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "3046:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "3046:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 429,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 410,
                                        "src": "3114:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 430,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "3114:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 908,
                                    "src": "3114:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3114:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 433,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 417,
                                  "src": "3166:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 434,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 412,
                                  "src": "3189:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 435,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "3213:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3249:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "3239:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 436,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3243:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3239:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 427,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3074:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "3074:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3074:206:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "3078",
                              "id": 441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3294:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              },
                              "value": "0x"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                "typeString": "literal_string \"0x\""
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 420,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 410,
                                "src": "3003:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 423,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "3003:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "3003:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3003:323:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "3003:323:2"
                      }
                    ]
                  },
                  "id": 445,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "2868:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 409,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 408,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "2868:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "2868:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "2905:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2905:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "2929:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "2955:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 416,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 415,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "2955:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "2955:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2858:125:2"
                  },
                  "returnParameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2993:0:2"
                  },
                  "scope": 756,
                  "src": "2839:494:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 484,
                    "nodeType": "Block",
                    "src": "3562:326:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 465,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3615:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cfa",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 250,
                              "src": "3615:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "expression": {
                                        "id": 469,
                                        "name": "cfaLibrary",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 448,
                                        "src": "3683:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                          "typeString": "struct CFAv1Library.InitData storage pointer"
                                        }
                                      },
                                      "id": 470,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "cfa",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 250,
                                      "src": "3683:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                        "typeString": "contract IConstantFlowAgreementV1"
                                      }
                                    },
                                    "id": 471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "deleteFlow",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 908,
                                    "src": "3683:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                    }
                                  },
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "3683:34:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 473,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "3735:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  }
                                },
                                {
                                  "id": 474,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 450,
                                  "src": "3758:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 475,
                                  "name": "receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 452,
                                  "src": "3782:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3818:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "3808:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 476,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3812:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3808:12:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                    "typeString": "contract ISuperfluidToken"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 467,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "3643:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "3643:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3643:206:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 481,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "3863:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                "typeString": "contract IConstantFlowAgreementV1"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 460,
                                "name": "cfaLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "3572:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                  "typeString": "struct CFAv1Library.InitData storage pointer"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "host",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 247,
                              "src": "3572:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "callAgreement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2185,
                            "src": "3572:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory) external returns (bytes memory)"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:309:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 483,
                        "nodeType": "ExpressionStatement",
                        "src": "3572:309:2"
                      }
                    ]
                  },
                  "id": 485,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "3406:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 447,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 446,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "3406:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "3406:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "3443:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3443:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "3467:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "3493:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 454,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 453,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "3493:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "3493:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "3525:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3525:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:156:2"
                  },
                  "returnParameters": {
                    "id": 459,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3562:0:2"
                  },
                  "scope": 756,
                  "src": "3377:511:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "4137:383:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 502,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "4148:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 503,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4147:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 507,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "4214:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "4214:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 511,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 488,
                                          "src": "4282:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 512,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "4282:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "createFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 814,
                                      "src": "4282:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4282:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 515,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 495,
                                    "src": "4334:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 516,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 492,
                                    "src": "4357:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 517,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 497,
                                    "src": "4383:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 520,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4419:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "4409:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 518,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4413:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4409:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 509,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4242:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4242:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4242:208:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4464:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 524,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "4500:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 504,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "4160:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 505,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "4160:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "4160:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4160:353:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4147:366:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "4147:366:2"
                      }
                    ]
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "3956:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 487,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 486,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "3956:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "3956:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "3993:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3993:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "4019:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4019:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "4045:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 494,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 493,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "4045:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "4045:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 497,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "4077:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4077:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3946:151:2"
                  },
                  "returnParameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "4116:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4116:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4115:21:2"
                  },
                  "scope": 756,
                  "src": "3920:600:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "4814:369:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 548,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "4825:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 549,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "4824:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 553,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "4891:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 554,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "4891:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 557,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "4959:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 558,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "4959:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 559,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "createFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 814,
                                      "src": "4959:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4959:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 561,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 539,
                                    "src": "5011:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 562,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 536,
                                    "src": "5034:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 563,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 541,
                                    "src": "5060:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 566,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5096:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 565,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "5086:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 564,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5090:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5086:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 555,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4919:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 556,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "4919:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4919:208:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 569,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 543,
                                "src": "5141:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 570,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 534,
                                "src": "5163:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 550,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "4837:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "4837:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "4837:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4837:339:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "4824:352:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "ExpressionStatement",
                        "src": "4824:352:2"
                      }
                    ]
                  },
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4602:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 531,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 530,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "4602:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "4602:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4639:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4639:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4665:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4665:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4691:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 538,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 537,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "4691:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "4691:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4723:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4747:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 542,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4747:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4592:182:2"
                  },
                  "returnParameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "4793:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4792:21:2"
                  },
                  "scope": 756,
                  "src": "4566:617:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "5453:383:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 592,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 590,
                                "src": "5464:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 593,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "5463:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 597,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "5530:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "5530:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 601,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 578,
                                          "src": "5598:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 602,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "5598:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 603,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "updateFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 829,
                                      "src": "5598:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "5598:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 605,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 585,
                                    "src": "5650:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 606,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 582,
                                    "src": "5673:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 607,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 587,
                                    "src": "5699:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 610,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5735:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 609,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "5725:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 608,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5729:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5725:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 599,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5558:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "5558:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5558:208:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5780:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 614,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "5816:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 594,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "5476:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 595,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "5476:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "5476:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5476:353:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "5463:366:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "5463:366:2"
                      }
                    ]
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 578,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5272:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 577,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 576,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "5272:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "5272:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5309:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5309:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5335:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5335:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 585,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5361:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 584,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 583,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "5361:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "5361:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5393:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5262:151:2"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 619,
                        "src": "5432:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5432:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5431:21:2"
                  },
                  "scope": 756,
                  "src": "5236:600:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "6130:369:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 638,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "6141:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 639,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6140:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 643,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "6207:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 644,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "6207:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 647,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 622,
                                          "src": "6275:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 648,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "6275:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "updateFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 829,
                                      "src": "6275:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_int96_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,int96,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 650,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6275:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 651,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "6327:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 652,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 626,
                                    "src": "6350:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 653,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 631,
                                    "src": "6376:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6412:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "6402:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6406:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6402:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 645,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6235:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 646,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "6235:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6235:208:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 659,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 633,
                                "src": "6457:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 660,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "6479:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 640,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "6153:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "6153:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "6153:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6153:339:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "6140:352:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 663,
                        "nodeType": "ExpressionStatement",
                        "src": "6140:352:2"
                      }
                    ]
                  },
                  "id": 665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 634,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "5918:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 621,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 620,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "5918:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "5918:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "5955:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "5981:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5981:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "6007:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 628,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 627,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "6007:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "6007:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "6039:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "6039:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 633,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "6063:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6063:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5908:182:2"
                  },
                  "returnParameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "6109:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6109:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6108:21:2"
                  },
                  "scope": 756,
                  "src": "5882:617:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 708,
                    "nodeType": "Block",
                    "src": "6748:381:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 682,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "6759:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 683,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6758:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 687,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "6825:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "6825:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 691,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 668,
                                          "src": "6893:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 692,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "6893:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 693,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 908,
                                      "src": "6893:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 694,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "6893:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 695,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 677,
                                    "src": "6945:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 696,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 672,
                                    "src": "6968:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 697,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 674,
                                    "src": "6992:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 700,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7028:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 699,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "7018:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 698,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7022:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7018:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 689,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6853:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "6853:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6853:206:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3078",
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7073:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                "value": "0x"
                              },
                              {
                                "id": 704,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "7109:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                  "typeString": "literal_string \"0x\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 684,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 668,
                                  "src": "6771:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 685,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "6771:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "6771:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6771:351:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "6758:364:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "6758:364:2"
                      }
                    ]
                  },
                  "id": 709,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 668,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6567:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 667,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 666,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "6567:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "6567:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6604:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6604:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6630:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6630:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6654:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6680:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 676,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 675,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "6680:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "6680:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6557:151:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 680,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 709,
                        "src": "6727:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6727:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6726:21:2"
                  },
                  "scope": 756,
                  "src": "6531:598:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 754,
                    "nodeType": "Block",
                    "src": "7424:367:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 728,
                                "name": "newCtx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 726,
                                "src": "7435:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              null
                            ],
                            "id": 729,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "7434:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$__$",
                              "typeString": "tuple(bytes memory,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 733,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 712,
                                  "src": "7501:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cfa",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 250,
                                "src": "7501:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "expression": {
                                          "id": 737,
                                          "name": "cfaLibrary",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 712,
                                          "src": "7569:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                            "typeString": "struct CFAv1Library.InitData storage pointer"
                                          }
                                        },
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "cfa",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 250,
                                        "src": "7569:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                          "typeString": "contract IConstantFlowAgreementV1"
                                        }
                                      },
                                      "id": 739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "deleteFlow",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 908,
                                      "src": "7569:25:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidToken_$2658_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (contract ISuperfluidToken,address,address,bytes memory) external returns (bytes memory)"
                                      }
                                    },
                                    "id": 740,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "7569:34:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  {
                                    "id": 741,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 721,
                                    "src": "7621:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    }
                                  },
                                  {
                                    "id": 742,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "7644:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 718,
                                    "src": "7668:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 746,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7704:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 745,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "7694:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (bytes memory)"
                                      },
                                      "typeName": {
                                        "id": 744,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7698:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_storage_ptr",
                                          "typeString": "bytes"
                                        }
                                      }
                                    },
                                    "id": 747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7694:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                                      "typeString": "contract ISuperfluidToken"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 735,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7529:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodeWithSelector",
                                  "nodeType": "MemberAccess",
                                  "src": "7529:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes4) pure returns (bytes memory)"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7529:206:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 749,
                                "name": "userData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 723,
                                "src": "7749:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 750,
                                "name": "ctx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 714,
                                "src": "7771:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 730,
                                  "name": "cfaLibrary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 712,
                                  "src": "7447:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                                    "typeString": "struct CFAv1Library.InitData storage pointer"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "host",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 247,
                                "src": "7447:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callAgreementWithContext",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2236,
                              "src": "7447:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperAgreement_$1276_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                                "typeString": "function (contract ISuperAgreement,bytes memory,bytes memory,bytes memory) external returns (bytes memory,bytes memory)"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7447:337:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bytes memory,bytes memory)"
                            }
                          },
                          "src": "7434:350:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 753,
                        "nodeType": "ExpressionStatement",
                        "src": "7434:350:2"
                      }
                    ]
                  },
                  "id": 755,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlowWithCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 712,
                        "mutability": "mutable",
                        "name": "cfaLibrary",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7212:27:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                          "typeString": "struct CFAv1Library.InitData"
                        },
                        "typeName": {
                          "id": 711,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 710,
                            "name": "InitData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "7212:8:2"
                          },
                          "referencedDeclaration": 251,
                          "src": "7212:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                            "typeString": "struct CFAv1Library.InitData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7249:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7249:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7275:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7275:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7299:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7299:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7325:22:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 720,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 719,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "7325:16:2"
                          },
                          "referencedDeclaration": 2658,
                          "src": "7325:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7357:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7357:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7202:182:2"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "7403:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7403:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7402:21:2"
                  },
                  "scope": 756,
                  "src": "7176:615:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 757,
              "src": "296:7497:2"
            }
          ],
          "src": "34:7759:2"
        },
        "id": 2
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
          "exportedSymbols": {
            "IConstantFlowAgreementV1": [
              927
            ],
            "ISuperAgreement": [
              1276
            ],
            "ISuperfluidToken": [
              2658
            ]
          },
          "id": 928,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 758,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:3"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "../superfluid/ISuperAgreement.sol",
              "id": 760,
              "nodeType": "ImportDirective",
              "scope": 928,
              "sourceUnit": 1277,
              "src": "62:68:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 759,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:3",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "../superfluid/ISuperfluidToken.sol",
              "id": 762,
              "nodeType": "ImportDirective",
              "scope": 928,
              "sourceUnit": 2659,
              "src": "131:70:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 761,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "140:16:3",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 764,
                    "name": "ISuperAgreement",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1276,
                    "src": "338:15:3"
                  },
                  "id": 765,
                  "nodeType": "InheritanceSpecifier",
                  "src": "338:15:3"
                }
              ],
              "contractDependencies": [
                1276
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 763,
                "nodeType": "StructuredDocumentation",
                "src": "204:87:3",
                "text": " @dev Superfluid's constant flow agreement interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 927,
              "linearizedBaseContracts": [
                927,
                1276
              ],
              "name": "IConstantFlowAgreementV1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1258
                  ],
                  "body": {
                    "id": 776,
                    "nodeType": "Block",
                    "src": "485:95:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                              "id": 773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "512:60:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                              },
                              "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                              }
                            ],
                            "id": 772,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "502:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "502:71:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 771,
                        "id": 775,
                        "nodeType": "Return",
                        "src": "495:78:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 766,
                    "nodeType": "StructuredDocumentation",
                    "src": "361:53:3",
                    "text": "@dev ISuperAgreement.agreementType implementation"
                  },
                  "functionSelector": "7730599e",
                  "id": 777,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "agreementType",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 768,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "453:8:3"
                  },
                  "parameters": {
                    "id": 767,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "441:2:3"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "476:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "476:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "475:9:3"
                  },
                  "scope": 927,
                  "src": "419:161:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 778,
                    "nodeType": "StructuredDocumentation",
                    "src": "586:138:3",
                    "text": " @dev Get the maximum flow rate allowed with the deposit\n @param deposit Deposit amount used for creating the flow"
                  },
                  "functionSelector": "0602f7db",
                  "id": 788,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMaximumFlowRateFromDeposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 781,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "777:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 780,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 779,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "777:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "777:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "809:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:58:3"
                  },
                  "returnParameters": {
                    "id": 787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "873:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "872:16:3"
                  },
                  "scope": 927,
                  "src": "729:160:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 789,
                    "nodeType": "StructuredDocumentation",
                    "src": "895:319:3",
                    "text": " @dev Get the deposit required for creating the flow\n @param flowRate Flow rate to be tested\n \n NOTE: \n - if calculated deposit (flowRate * liquidationPeriod) is less\n   than the minimum deposit, we use the minimum deposit otherwise\n   we use the calculated deposit"
                  },
                  "functionSelector": "8d997f6e",
                  "id": 799,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepositRequiredForFlowRate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 792,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "1267:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 791,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 790,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1267:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1267:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 794,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "1299:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 793,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1257:57:3"
                  },
                  "returnParameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 797,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 799,
                        "src": "1362:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 796,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1362:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1361:17:3"
                  },
                  "scope": 927,
                  "src": "1219:160:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 800,
                    "nodeType": "StructuredDocumentation",
                    "src": "1385:574:3",
                    "text": " @dev Create a flow betwen sender and receiver.\n @param token Super token address.\n @param receiver Flow receiver address.\n @param flowRate New flow rate in amount per second.\n # App callbacks\n - AgreementCreated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - A deposit is taken as safety margin for the solvency agents.\n - A extra gas fee may be taken to pay for solvency agent liquidations."
                  },
                  "functionSelector": "62fc305e",
                  "id": 814,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 803,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "1993:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 802,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 801,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1993:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1993:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 805,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "2025:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "2051:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2051:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "2075:18:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2075:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1983:116:3"
                  },
                  "returnParameters": {
                    "id": 813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 814,
                        "src": "2141:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2141:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2140:21:3"
                  },
                  "scope": 927,
                  "src": "1964:198:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 815,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:668:3",
                    "text": " @dev Update the flow rate between sender and receiver.\n @param token Super token address.\n @param receiver Flow receiver address.\n @param flowRate New flow rate in amount per second.\n # App callbacks\n - AgreementUpdated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - Only the flow sender may update the flow rate.\n - Even if the flow rate is zero, the flow is not deleted\n from the system.\n - Deposit amount will be adjusted accordingly.\n - No new gas fee is charged."
                  },
                  "functionSelector": "50209a62",
                  "id": 829,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "2870:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 817,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 816,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "2870:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "2870:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "2902:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2902:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "2928:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "2928:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "2952:18:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2860:116:3"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "3018:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3018:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3017:21:3"
                  },
                  "scope": 927,
                  "src": "2841:198:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 830,
                    "nodeType": "StructuredDocumentation",
                    "src": "3046:412:3",
                    "text": " @dev Get the flow data between `sender` and `receiver`.\n @param token Super token address.\n @param sender Flow receiver.\n @param receiver Flow sender.\n @return timestamp Timestamp of when the flow is updated.\n @return flowRate The flow rate.\n @return deposit The amount of deposit the flow.\n @return owedDeposit The amount of owed deposit of the flow."
                  },
                  "functionSelector": "e6a1e888",
                  "id": 848,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3489:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 832,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 831,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "3489:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "3489:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3521:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3521:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3545:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3545:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3479:88:3"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3628:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3659:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "3659:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 844,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3687:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 843,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3716:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3614:131:3"
                  },
                  "scope": 927,
                  "src": "3463:283:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "3752:366:3",
                    "text": " @dev Get flow data using agreement ID\n @param token Super token address.\n @param agreementId The agreement ID.\n @return timestamp Timestamp of when the flow is updated.\n @return flowRate The flow rate.\n @return deposit The amount of deposit the flow.\n @return owedDeposit The amount of owed deposit of the flow."
                  },
                  "functionSelector": "aabd2668",
                  "id": 865,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFlowByID",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4152:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 851,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 850,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "4152:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "4152:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4183:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4183:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4143:65:3"
                  },
                  "returnParameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4269:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4269:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4300:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4300:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4328:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4328:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 865,
                        "src": "4357:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4357:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4255:131:3"
                  },
                  "scope": 927,
                  "src": "4123:264:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 866,
                    "nodeType": "StructuredDocumentation",
                    "src": "4393:151:3",
                    "text": " @dev Get the aggregated flow info of the account\n @param token Super token address.\n @param account Account for the query."
                  },
                  "functionSelector": "0f1ac495",
                  "id": 882,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccountFlowInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4586:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 867,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "4586:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "4586:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4618:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4618:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4576:63:3"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4700:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4700:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4731:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "4731:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4759:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4759:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 882,
                        "src": "4788:19:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4788:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4686:122:3"
                  },
                  "scope": 927,
                  "src": "4549:260:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 883,
                    "nodeType": "StructuredDocumentation",
                    "src": "4815:181:3",
                    "text": " @dev Get the net flow rate of the account\n @param token Super token address.\n @param account Account for the query.\n @return flowRate Flow rate."
                  },
                  "functionSelector": "e8e7e2d1",
                  "id": 893,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNetFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 886,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5030:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 885,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 884,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "5030:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "5030:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5062:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5062:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5020:63:3"
                  },
                  "returnParameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 891,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 893,
                        "src": "5131:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "5131:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5130:16:3"
                  },
                  "scope": 927,
                  "src": "5001:146:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 894,
                    "nodeType": "StructuredDocumentation",
                    "src": "5153:635:3",
                    "text": " @dev Delete the flow between sender and receiver\n @param token Super token address.\n @param ctx Context bytes.\n @param receiver Flow receiver address.\n # App callbacks\n - AgreementTerminated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n NOTE:\n - Both flow sender and receiver may delete the flow.\n - If Sender account is insolvent or in critical state, a solvency agent may\n   also terminate the agreement.\n - Gas fee may be returned to the sender."
                  },
                  "functionSelector": "b4b333c6",
                  "id": 908,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deleteFlow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5822:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 896,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 895,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "5822:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "5822:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 899,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5854:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 898,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5854:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5878:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5878:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5904:18:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5904:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5812:116:3"
                  },
                  "returnParameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5970:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5970:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5969:21:3"
                  },
                  "scope": 927,
                  "src": "5793:198:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 909,
                    "nodeType": "StructuredDocumentation",
                    "src": "5998:452:3",
                    "text": " @dev Flow updated event.\n @param token Super token address.\n @param sender Flow sender address.\n @param receiver Flow recipient address.\n @param flowRate Flow rate in amount per second for this flow.\n @param flowRate Total flow rate in amount per second for the sender.\n @param flowRate Total flow rate in amount per second for the receiver.\n @param userData The user provided data."
                  },
                  "id": 926,
                  "name": "FlowUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6484:30:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 911,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 910,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "6484:16:3"
                          },
                          "referencedDeclaration": 2658,
                          "src": "6484:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6525:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6525:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6558:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 915,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6558:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6593:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "6593:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 920,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalSenderFlowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6618:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 919,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6618:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 922,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalReceiverFlowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6655:28:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6655:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 924,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "6694:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6694:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6473:242:3"
                  },
                  "src": "6456:260:3"
                }
              ],
              "scope": 928,
              "src": "292:6427:3"
            }
          ],
          "src": "35:6685:3"
        },
        "id": 3
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
          "exportedSymbols": {
            "BatchOperation": [
              1176
            ],
            "ContextDefinitions": [
              1142
            ],
            "SuperAppDefinitions": [
              1066
            ],
            "SuperfluidGovernanceConfigs": [
              1243
            ]
          },
          "id": 1244,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 929,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 930,
                "nodeType": "StructuredDocumentation",
                "src": "62:45:4",
                "text": " @dev Super app definitions library"
              },
              "fullyImplemented": true,
              "id": 1066,
              "linearizedBaseContracts": [
                1066
              ],
              "name": "SuperAppDefinitions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 933,
                  "mutability": "constant",
                  "name": "APP_LEVEL_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "565:47:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30784646",
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "608:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_255_by_1",
                      "typeString": "int_const 255"
                    },
                    "value": "0xFF"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 938,
                  "mutability": "constant",
                  "name": "APP_LEVEL_FINAL",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "710:50:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "754:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "759:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "754:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 943,
                  "mutability": "constant",
                  "name": "APP_LEVEL_SECOND",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "865:51:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "910:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "915:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "910:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "994:58:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 952,
                                "name": "configWord",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 945,
                                "src": "1017:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "id": 953,
                                "name": "APP_LEVEL_MASK",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 933,
                                "src": "1030:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1017:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1011:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 950,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1011:5:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 949,
                        "id": 956,
                        "nodeType": "Return",
                        "src": "1004:41:4"
                      }
                    ]
                  },
                  "id": 958,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "944:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "944:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "943:20:4"
                  },
                  "returnParameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 958,
                        "src": "987:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "987:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "986:7:4"
                  },
                  "scope": 1066,
                  "src": "923:129:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 963,
                  "mutability": "constant",
                  "name": "APP_JAIL_BIT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1058:48:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_32768_by_1",
                      "typeString": "int_const 32768"
                    },
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1099:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "3135",
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1104:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "15"
                    },
                    "src": "1099:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32768_by_1",
                      "typeString": "int_const 32768"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "1182:75:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 970,
                                  "name": "configWord",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 965,
                                  "src": "1200:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "expression": {
                                    "id": 971,
                                    "name": "SuperAppDefinitions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1066,
                                    "src": "1213:19:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SuperAppDefinitions_$1066_$",
                                      "typeString": "type(library SuperAppDefinitions)"
                                    }
                                  },
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "APP_JAIL_BIT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 963,
                                  "src": "1213:32:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1200:45:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 974,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1199:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1249:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1199:51:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 969,
                        "id": 977,
                        "nodeType": "Return",
                        "src": "1192:58:4"
                      }
                    ]
                  },
                  "id": 979,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAppJailed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1133:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1133:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1132:20:4"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1176:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1175:6:4"
                  },
                  "scope": 1066,
                  "src": "1112:145:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 984,
                  "mutability": "constant",
                  "name": "AGREEMENT_CALLBACK_NOOP_BITMASKS",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1464:71:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1464:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1095216660480_by_1",
                      "typeString": "int_const 1095216660480"
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "30784646",
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1525:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "0xFF"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "hexValue": "3332",
                      "id": 982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "1525:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1095216660480_by_1",
                      "typeString": "int_const 1095216660480"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 992,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_CREATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1541:71:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1541:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_4294967296_by_1",
                      "typeString": "int_const 4294967296"
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1605:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1610:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1605:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          }
                        }
                      ],
                      "id": 990,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1604:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      }
                    },
                    "src": "1599:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967296_by_1",
                      "typeString": "int_const 4294967296"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1000,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_CREATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1618:70:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_8589934592_by_1",
                      "typeString": "int_const 8589934592"
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1675:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_33_by_1",
                            "typeString": "int_const 33"
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1681:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1686:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1681:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_33_by_1",
                            "typeString": "int_const 33"
                          }
                        }
                      ],
                      "id": 998,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1680:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_33_by_1",
                        "typeString": "int_const 33"
                      }
                    },
                    "src": "1675:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8589934592_by_1",
                      "typeString": "int_const 8589934592"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1008,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_UPDATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1694:71:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_17179869184_by_1",
                      "typeString": "int_const 17179869184"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1752:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_34_by_1",
                            "typeString": "int_const 34"
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1758:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1763:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1758:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_34_by_1",
                            "typeString": "int_const 34"
                          }
                        }
                      ],
                      "id": 1006,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1757:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_34_by_1",
                        "typeString": "int_const 34"
                      }
                    },
                    "src": "1752:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_17179869184_by_1",
                      "typeString": "int_const 17179869184"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1016,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_UPDATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1771:70:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_34359738368_by_1",
                      "typeString": "int_const 34359738368"
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1828:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_35_by_1",
                            "typeString": "int_const 35"
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1834:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1839:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "1834:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_35_by_1",
                            "typeString": "int_const 35"
                          }
                        }
                      ],
                      "id": 1014,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1833:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_35_by_1",
                        "typeString": "int_const 35"
                      }
                    },
                    "src": "1828:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_34359738368_by_1",
                      "typeString": "int_const 34359738368"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1024,
                  "mutability": "constant",
                  "name": "BEFORE_AGREEMENT_TERMINATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1847:74:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_68719476736_by_1",
                      "typeString": "int_const 68719476736"
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1908:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1914:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1919:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "1914:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          }
                        }
                      ],
                      "id": 1022,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1913:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_36_by_1",
                        "typeString": "int_const 36"
                      }
                    },
                    "src": "1908:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_68719476736_by_1",
                      "typeString": "int_const 68719476736"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1032,
                  "mutability": "constant",
                  "name": "AFTER_AGREEMENT_TERMINATED_NOOP",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "1927:73:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_137438953472_by_1",
                      "typeString": "int_const 137438953472"
                    },
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1987:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_37_by_1",
                            "typeString": "int_const 37"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 1027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1993:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1998:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "1993:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_37_by_1",
                            "typeString": "int_const 37"
                          }
                        }
                      ],
                      "id": 1030,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1992:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_37_by_1",
                        "typeString": "int_const 37"
                      }
                    },
                    "src": "1987:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_137438953472_by_1",
                      "typeString": "int_const 137438953472"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1035,
                  "mutability": "constant",
                  "name": "APP_RULE_REGISTRATION_ONLY_IN_CONSTRUCTOR",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2192:71:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2262:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1038,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_REGISTRATION_FOR_EOA",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2269:62:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2330:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1041,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_REVERT_ON_TERMINATION_CALLBACK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2337:73:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130",
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2408:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1044,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_CRITICAL_SENDER_ACCOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2416:66:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3131",
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2480:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_11_by_1",
                      "typeString": "int_const 11"
                    },
                    "value": "11"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1047,
                  "mutability": "constant",
                  "name": "APP_RULE_NO_CRITICAL_RECEIVER_ACCOUNT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2488:68:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3132",
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2554:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_12_by_1",
                      "typeString": "int_const 12"
                    },
                    "value": "12"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1050,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_READONLY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2562:55:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3230",
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2615:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20_by_1",
                      "typeString": "int_const 20"
                    },
                    "value": "20"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1053,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_NOT_CLEAN",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2623:56:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3231",
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2677:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21_by_1",
                      "typeString": "int_const 21"
                    },
                    "value": "21"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1056,
                  "mutability": "constant",
                  "name": "APP_RULE_CTX_IS_MALFORMATED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2685:58:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3232",
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2741:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_22_by_1",
                      "typeString": "int_const 22"
                    },
                    "value": "22"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1059,
                  "mutability": "constant",
                  "name": "APP_RULE_COMPOSITE_APP_IS_NOT_WHITELISTED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2749:72:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3330",
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2819:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_30_by_1",
                      "typeString": "int_const 30"
                    },
                    "value": "30"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1062,
                  "mutability": "constant",
                  "name": "APP_RULE_COMPOSITE_APP_IS_JAILED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2827:63:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2827:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3331",
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2888:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_31_by_1",
                      "typeString": "int_const 31"
                    },
                    "value": "31"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1065,
                  "mutability": "constant",
                  "name": "APP_RULE_MAX_APP_LEVEL_REACHED",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "2896:61:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3430",
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2955:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_40_by_1",
                      "typeString": "int_const 40"
                    },
                    "value": "40"
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1244,
              "src": "108:2852:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1067,
                "nodeType": "StructuredDocumentation",
                "src": "2962:43:4",
                "text": " @dev Context definitions library"
              },
              "fullyImplemented": true,
              "id": 1142,
              "linearizedBaseContracts": [
                1142
              ],
              "name": "ContextDefinitions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1070,
                  "mutability": "constant",
                  "name": "CALL_INFO_APP_LEVEL_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3235:57:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "30784646",
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3288:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_255_by_1",
                      "typeString": "int_const 255"
                    },
                    "value": "0xFF"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1073,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3316:56:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3332",
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3370:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32_by_1",
                      "typeString": "int_const 32"
                    },
                    "value": "32"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1078,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_MASK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3378:85:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "307846",
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3431:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_15_by_1",
                        "typeString": "int_const 15"
                      },
                      "value": "0xF"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<<",
                    "rightExpression": {
                      "id": 1076,
                      "name": "CALL_INFO_CALL_TYPE_SHIFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "3438:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3431:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1081,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_AGREEMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3469:57:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3525:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1084,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_APP_ACTION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3532:58:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3589:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1087,
                  "mutability": "constant",
                  "name": "CALL_INFO_CALL_TYPE_APP_CALLBACK",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3596:60:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3655:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1117,
                    "nodeType": "Block",
                    "src": "3780:164:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1096,
                            "name": "appLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "3790:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1099,
                                  "name": "callInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1089,
                                  "src": "3807:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&",
                                "rightExpression": {
                                  "id": 1100,
                                  "name": "CALL_INFO_APP_LEVEL_MASK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1070,
                                  "src": "3818:24:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3807:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3801:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1097,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3801:5:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3801:42:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3790:53:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1104,
                        "nodeType": "ExpressionStatement",
                        "src": "3790:53:4"
                      },
                      {
                        "expression": {
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1105,
                            "name": "callType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "3853:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1110,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1108,
                                        "name": "callInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1089,
                                        "src": "3871:8:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&",
                                      "rightExpression": {
                                        "id": 1109,
                                        "name": "CALL_INFO_CALL_TYPE_MASK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1078,
                                        "src": "3882:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3871:35:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1111,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3870:37:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "id": 1112,
                                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1073,
                                  "src": "3911:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3870:66:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3864:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 1106,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3864:5:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3864:73:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3853:84:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "3853:84:4"
                      }
                    ]
                  },
                  "id": 1118,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decodeCallInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "callInfo",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "3687:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3687:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3686:18:4"
                  },
                  "returnParameters": {
                    "id": 1095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "3744:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3744:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "mutability": "mutable",
                        "name": "callType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1118,
                        "src": "3760:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3743:32:4"
                  },
                  "scope": 1142,
                  "src": "3663:281:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1140,
                    "nodeType": "Block",
                    "src": "4067:92:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1129,
                                "name": "appLevel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1120,
                                "src": "4092:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4084:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1127,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4084:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4084:17:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "|",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 1133,
                                      "name": "callType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1122,
                                      "src": "4113:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1132,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4105:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1131,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4105:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4105:17:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "id": 1135,
                                  "name": "CALL_INFO_CALL_TYPE_SHIFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1073,
                                  "src": "4126:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4105:46:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1137,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4104:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4084:68:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1126,
                        "id": 1139,
                        "nodeType": "Return",
                        "src": "4077:75:4"
                      }
                    ]
                  },
                  "id": 1141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encodeCallInfo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "3974:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3974:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "callType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "3990:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3990:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3973:32:4"
                  },
                  "returnParameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1125,
                        "mutability": "mutable",
                        "name": "callInfo",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "4045:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4045:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4044:18:4"
                  },
                  "scope": 1142,
                  "src": "3950:209:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1244,
              "src": "3006:1156:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1143,
                "nodeType": "StructuredDocumentation",
                "src": "4164:39:4",
                "text": " @dev Batch operation library"
              },
              "fullyImplemented": true,
              "id": 1176,
              "linearizedBaseContracts": [
                1176
              ],
              "name": "BatchOperation",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 1144,
                    "nodeType": "StructuredDocumentation",
                    "src": "4233:200:4",
                    "text": " @dev ERC20.approve batch operation type\n Call spec:\n ISuperToken(target).operationApprove(\n     abi.decode(data, (address spender, uint256 amount))\n )"
                  },
                  "id": 1147,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_ERC20_APPROVE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "4438:57:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4494:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4501:227:4",
                    "text": " @dev ERC20.transferFrom batch operation type\n Call spec:\n ISuperToken(target).operationTransferFrom(\n     abi.decode(data, (address sender, address recipient, uint256 amount)\n )"
                  },
                  "id": 1151,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_ERC20_TRANSFER_FROM",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "4733:63:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4733:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4795:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1152,
                    "nodeType": "StructuredDocumentation",
                    "src": "4802:187:4",
                    "text": " @dev SuperToken.upgrade batch operation type\n Call spec:\n ISuperToken(target).operationUpgrade(\n     abi.decode(data, (uint256 amount)\n )"
                  },
                  "id": 1157,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERTOKEN_UPGRADE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "4994:68:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5055:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5059:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "5055:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1158,
                    "nodeType": "StructuredDocumentation",
                    "src": "5068:191:4",
                    "text": " @dev SuperToken.downgrade batch operation type\n Call spec:\n ISuperToken(target).operationDowngrade(\n     abi.decode(data, (uint256 amount)\n )"
                  },
                  "id": 1163,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERTOKEN_DOWNGRADE",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "5264:70:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_102_by_1",
                      "typeString": "int_const 102"
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5327:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5331:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "5327:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_102_by_1",
                      "typeString": "int_const 102"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1164,
                    "nodeType": "StructuredDocumentation",
                    "src": "5340:223:4",
                    "text": " @dev Superfluid.callAgreement batch operation type\n Call spec:\n callAgreement(\n     ISuperAgreement(target)),\n     abi.decode(data, (bytes calldata, bytes userdata)\n )"
                  },
                  "id": 1169,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERFLUID_CALL_AGREEMENT",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "5568:75:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_201_by_1",
                      "typeString": "int_const 201"
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31",
                      "id": 1166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5636:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5640:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5636:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_201_by_1",
                      "typeString": "int_const 201"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1170,
                    "nodeType": "StructuredDocumentation",
                    "src": "5649:172:4",
                    "text": " @dev Superfluid.callAppAction batch operation type\n Call spec:\n callAppAction(\n     ISuperApp(target)),\n     data\n )"
                  },
                  "id": 1175,
                  "mutability": "constant",
                  "name": "OPERATION_TYPE_SUPERFLUID_CALL_APP_ACTION",
                  "nodeType": "VariableDeclaration",
                  "scope": 1176,
                  "src": "5826:76:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5826:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_202_by_1",
                      "typeString": "int_const 202"
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "32",
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5895:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5899:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "5895:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_202_by_1",
                      "typeString": "int_const 202"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1244,
              "src": "4204:1701:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 1243,
              "linearizedBaseContracts": [
                1243
              ],
              "name": "SuperfluidGovernanceConfigs",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1181,
                  "mutability": "constant",
                  "name": "SUPERFLUID_REWARD_ADDRESS_CONFIG_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "5950:133:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e72657761726441646472657373",
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6033:49:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
                        },
                        "value": "org.superfluid-finance.superfluid.rewardAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.rewardAddress\""
                        }
                      ],
                      "id": 1178,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6023:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1186,
                  "mutability": "constant",
                  "name": "CFAv1_LIQUIDATION_PERIOD_CONFIG_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "6090:161:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6090:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e76312e6c69717569646174696f6e506572696f64",
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6172:78:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ca463a216b802472396d1b8a5b5b695d935b1d24311e89b020144e6613f15aa",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\""
                        },
                        "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1ca463a216b802472396d1b8a5b5b695d935b1d24311e89b020144e6613f15aa",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1.liquidationPeriod\""
                        }
                      ],
                      "id": 1183,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6162:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6162:89:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 1191,
                  "mutability": "constant",
                  "name": "SUPERTOKEN_MINIMUM_DEPOSIT_KEY",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "6258:139:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6258:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e7375706572546f6b656e4d696e696d756d4465706f736974",
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6336:60:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
                        },
                        "value": "org.superfluid-finance.superfluid.superTokenMinimumDeposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_eae305fa863b373417e615b1044222e2806cefc7788d169ce6748a443c3f6cc4",
                          "typeString": "literal_string \"org.superfluid-finance.superfluid.superTokenMinimumDeposit\""
                        }
                      ],
                      "id": 1188,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6326:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1206,
                    "nodeType": "Block",
                    "src": "6493:135:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e74727573746564466f72776172646572",
                                  "id": 1201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6544:52:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.trustedForwarder"
                                },
                                {
                                  "id": 1202,
                                  "name": "forwarder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "6610:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_5e8d8c86403ce515d0afc5f813484261c20de0e66deea95df3a7de50a4365fdd",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.trustedForwarder\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1199,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6520:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6520:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6520:100:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1198,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6510:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6510:111:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1197,
                        "id": 1205,
                        "nodeType": "Return",
                        "src": "6503:118:4"
                      }
                    ]
                  },
                  "id": 1207,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTrustedForwarderConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "forwarder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "6442:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6442:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6441:19:4"
                  },
                  "returnParameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "6484:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6484:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6483:9:4"
                  },
                  "scope": 1243,
                  "src": "6404:224:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "6752:178:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e726567697374726174696f6e4b6579",
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6803:67:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.appWhiteListing.registrationKey"
                                },
                                {
                                  "id": 1220,
                                  "name": "deployer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "6884:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1221,
                                  "name": "registrationKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1211,
                                  "src": "6906:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_2ac2eda5c308a51ed3bd3433d0d20fe487916751b3404fa382719429ef24259a",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.registrationKey\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1217,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6779:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "6779:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6779:143:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1216,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6769:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6769:154:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1215,
                        "id": 1224,
                        "nodeType": "Return",
                        "src": "6762:161:4"
                      }
                    ]
                  },
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppRegistrationConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "6671:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6671:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "registrationKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "6689:29:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6689:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6670:49:4"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "6743:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6743:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6742:9:4"
                  },
                  "scope": 1243,
                  "src": "6634:296:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1241,
                    "nodeType": "Block",
                    "src": "7017:140:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e7375706572666c7569642e61707057686974654c697374696e672e666163746f7279",
                                  "id": 1236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7068:59:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
                                  },
                                  "value": "org.superfluid-finance.superfluid.appWhiteListing.factory"
                                },
                                {
                                  "id": 1237,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1228,
                                  "src": "7141:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3a9ec29d76a01dd4676b43ee8f5ae7a021577f823fb495dfb5627ad6bbb890b6",
                                    "typeString": "literal_string \"org.superfluid-finance.superfluid.appWhiteListing.factory\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1234,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7044:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "7044:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7044:105:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1233,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "7034:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7034:116:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1232,
                        "id": 1240,
                        "nodeType": "Return",
                        "src": "7027:123:4"
                      }
                    ]
                  },
                  "id": 1242,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppFactoryConfigKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "6968:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6968:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6967:17:4"
                  },
                  "returnParameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1242,
                        "src": "7008:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7008:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7007:9:4"
                  },
                  "scope": 1243,
                  "src": "6936:221:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1244,
              "src": "5907:1252:4"
            }
          ],
          "src": "35:7125:4"
        },
        "id": 4
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1276
            ],
            "ISuperfluidToken": [
              2658
            ]
          },
          "id": 1277,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1245,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:5"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1247,
              "nodeType": "ImportDirective",
              "scope": 1277,
              "sourceUnit": 2659,
              "src": "62:58:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1246,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:16:5",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1248,
                "nodeType": "StructuredDocumentation",
                "src": "122:76:5",
                "text": " @title Superfluid's agreement interface.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1276,
              "linearizedBaseContracts": [
                1276
              ],
              "name": "ISuperAgreement",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1249,
                    "nodeType": "StructuredDocumentation",
                    "src": "232:57:5",
                    "text": " @dev Initialize the agreement contract"
                  },
                  "functionSelector": "8129fc1c",
                  "id": 1252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "313:2:5"
                  },
                  "returnParameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "324:0:5"
                  },
                  "scope": 1276,
                  "src": "294:31:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1253,
                    "nodeType": "StructuredDocumentation",
                    "src": "331:60:5",
                    "text": " @dev Get the type of the agreement class."
                  },
                  "functionSelector": "7730599e",
                  "id": 1258,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "agreementType",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "418:2:5"
                  },
                  "returnParameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "444:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "443:9:5"
                  },
                  "scope": 1276,
                  "src": "396:57:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1259,
                    "nodeType": "StructuredDocumentation",
                    "src": "459:437:5",
                    "text": " @dev Calculate the real-time balance for the account of this agreement class.\n @param account Account the state belongs to\n @param time Future time used for the calculation.\n @return dynamicBalance Dynamic balance portion of real-time balance of this agreement.\n @return deposit Account deposit amount of this agreement.\n @return owedDeposit Account owed deposit amount of this agreement."
                  },
                  "functionSelector": "9b2e48bc",
                  "id": 1275,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1262,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "937:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 1261,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1260,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "937:16:5"
                          },
                          "referencedDeclaration": 2658,
                          "src": "937:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "969:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "time",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "994:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "927:85:5"
                  },
                  "returnParameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "dynamicBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "1073:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "1108:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1108:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "1137:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1137:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1059:107:5"
                  },
                  "scope": 1276,
                  "src": "901:266:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1277,
              "src": "199:971:5"
            }
          ],
          "src": "35:1136:5"
        },
        "id": 5
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
          "exportedSymbols": {
            "ISuperApp": [
              1390
            ],
            "ISuperToken": [
              1744
            ]
          },
          "id": 1391,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1278,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:6"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1280,
              "nodeType": "ImportDirective",
              "scope": 1391,
              "sourceUnit": 1745,
              "src": "62:48:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1279,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:6",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1281,
                "nodeType": "StructuredDocumentation",
                "src": "113:148:6",
                "text": " @title Superfluid's app interface.\n NOTE:\n - Be fearful of the app jail, when the word permitted is used.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1390,
              "linearizedBaseContracts": [
                1390
              ],
              "name": "ISuperApp",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1282,
                    "nodeType": "StructuredDocumentation",
                    "src": "289:622:6",
                    "text": " @dev Callback before a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "30d9c915",
                  "id": 1298,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementCreated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1285,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "957:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1284,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1283,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "957:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "957:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1287,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "989:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1286,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "1021:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "1050:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1050:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "1088:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "947:165:6"
                  },
                  "returnParameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1298,
                        "src": "1160:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1160:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1159:21:6"
                  },
                  "scope": 1390,
                  "src": "916:265:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1299,
                    "nodeType": "StructuredDocumentation",
                    "src": "1187:571:6",
                    "text": " @dev Callback after a new agreement is created.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "d86ed3e5",
                  "id": 1317,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementCreated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1302,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1803:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1301,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1300,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "1803:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "1803:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1835:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1835:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1306,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1867:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1305,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1867:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1308,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1896:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1307,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1896:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1310,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1934:21:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1309,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1934:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1965:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1793:196:6"
                  },
                  "returnParameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "2024:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2024:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2023:21:6"
                  },
                  "scope": 1390,
                  "src": "1763:282:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1318,
                    "nodeType": "StructuredDocumentation",
                    "src": "2051:622:6",
                    "text": " @dev Callback before a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "884d1f40",
                  "id": 1334,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementUpdated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2719:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1320,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1319,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "2719:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "2719:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2751:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2783:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2812:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1326,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2812:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2850:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2709:165:6"
                  },
                  "returnParameters": {
                    "id": 1333,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1332,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1334,
                        "src": "2922:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1331,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2922:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2921:21:6"
                  },
                  "scope": 1390,
                  "src": "2678:265:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1335,
                    "nodeType": "StructuredDocumentation",
                    "src": "2950:558:6",
                    "text": " @dev Callback after a new agreement is updated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Only revert with a \"reason\" is permitted."
                  },
                  "functionSelector": "230dbd29",
                  "id": 1353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementUpdated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3553:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1337,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1336,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "3553:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "3553:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3585:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3585:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3617:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3617:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1344,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3646:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3646:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1346,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3684:21:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1345,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3684:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3715:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3715:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3543:196:6"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "3774:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3773:21:6"
                  },
                  "scope": 1390,
                  "src": "3513:282:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1354,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:595:6",
                    "text": " @dev Callback before a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param ctx The context data.\n @return cbdata A free format in memory data the app can use to pass\n          arbitary information to the after-hook callback.\n NOTE:\n - It will be invoked with `staticcall`, no state changes are permitted.\n - Revert is not permitted."
                  },
                  "functionSelector": "5f9e7d77",
                  "id": 1370,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "beforeAgreementTerminated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1357,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4445:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1356,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1355,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "4445:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "4445:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1359,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4477:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4477:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4509:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4509:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4538:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4538:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4576:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4576:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4435:165:6"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1370,
                        "src": "4648:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4648:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4647:21:6"
                  },
                  "scope": 1390,
                  "src": "4401:268:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1371,
                    "nodeType": "StructuredDocumentation",
                    "src": "4675:544:6",
                    "text": " @dev Callback after a new agreement is terminated.\n @param superToken The super token used for the agreement.\n @param agreementClass The agreement class address.\n @param agreementId The agreementId\n @param agreementData The agreement data (non-compressed)\n @param cbdata The data returned from the before-hook callback.\n @param ctx The context data.\n @return newCtx The current context of the transaction.\n NOTE:\n - State changes is permitted.\n - Revert is not permitted."
                  },
                  "functionSelector": "53c11f99",
                  "id": 1389,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "afterAgreementTerminated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1374,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5267:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1373,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1372,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "5267:11:6"
                          },
                          "referencedDeclaration": 1744,
                          "src": "5267:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5299:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5299:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "agreementId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5331:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1377,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "agreementData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5360:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5360:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1382,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5398:21:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1381,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5398:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5429:18:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5429:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5257:196:6"
                  },
                  "returnParameters": {
                    "id": 1388,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1387,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "5488:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1386,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5488:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5487:21:6"
                  },
                  "scope": 1390,
                  "src": "5224:285:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1391,
              "src": "262:5249:6"
            }
          ],
          "src": "35:5477:6"
        },
        "id": 6
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ],
            "IERC777": [
              236
            ],
            "ISuperToken": [
              1744
            ],
            "ISuperfluid": [
              2287
            ],
            "ISuperfluidToken": [
              2658
            ],
            "TokenInfo": [
              2692
            ]
          },
          "id": 1745,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1392,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:7"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "./ISuperfluid.sol",
              "id": 1394,
              "nodeType": "ImportDirective",
              "scope": 1745,
              "sourceUnit": 2288,
              "src": "62:48:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1393,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1396,
              "nodeType": "ImportDirective",
              "scope": 1745,
              "sourceUnit": 2659,
              "src": "111:58:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1395,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "120:16:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "../tokens/TokenInfo.sol",
              "id": 1398,
              "nodeType": "ImportDirective",
              "scope": 1745,
              "sourceUnit": 2693,
              "src": "170:52:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1397,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "179:9:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "id": 1400,
              "nodeType": "ImportDirective",
              "scope": 1745,
              "sourceUnit": 237,
              "src": "223:75:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1399,
                    "name": "IERC777",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "232:7:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1402,
              "nodeType": "ImportDirective",
              "scope": 1745,
              "sourceUnit": 78,
              "src": "299:72:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1401,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "308:6:7",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1404,
                    "name": "ISuperfluidToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2658,
                    "src": "512:16:7"
                  },
                  "id": 1405,
                  "nodeType": "InheritanceSpecifier",
                  "src": "512:16:7"
                },
                {
                  "baseName": {
                    "id": 1406,
                    "name": "TokenInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2692,
                    "src": "530:9:7"
                  },
                  "id": 1407,
                  "nodeType": "InheritanceSpecifier",
                  "src": "530:9:7"
                },
                {
                  "baseName": {
                    "id": 1408,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 77,
                    "src": "541:6:7"
                  },
                  "id": 1409,
                  "nodeType": "InheritanceSpecifier",
                  "src": "541:6:7"
                },
                {
                  "baseName": {
                    "id": 1410,
                    "name": "IERC777",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 236,
                    "src": "549:7:7"
                  },
                  "id": 1411,
                  "nodeType": "InheritanceSpecifier",
                  "src": "549:7:7"
                }
              ],
              "contractDependencies": [
                77,
                236,
                2658,
                2692
              ],
              "contractKind": "interface",
              "documentation": {
                "id": 1403,
                "nodeType": "StructuredDocumentation",
                "src": "373:113:7",
                "text": " @title Superfluid's super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 1744,
              "linearizedBaseContracts": [
                1744,
                236,
                77,
                2692,
                2658
              ],
              "name": "ISuperToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1412,
                    "nodeType": "StructuredDocumentation",
                    "src": "564:32:7",
                    "text": "@dev Initialize the contract"
                  },
                  "functionSelector": "42fe0980",
                  "id": 1424,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "630:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1414,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1413,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "630:6:7"
                          },
                          "referencedDeclaration": 77,
                          "src": "630:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "underlyingDecimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "662:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1419,
                        "mutability": "mutable",
                        "name": "n",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "696:17:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1418,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "696:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1421,
                        "mutability": "mutable",
                        "name": "s",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "723:17:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "620:126:7"
                  },
                  "returnParameters": {
                    "id": 1423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "755:0:7"
                  },
                  "scope": 1744,
                  "src": "601:155:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    86,
                    2679
                  ],
                  "documentation": {
                    "id": 1425,
                    "nodeType": "StructuredDocumentation",
                    "src": "947:54:7",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1433,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1429,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1427,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "1045:7:7"
                      },
                      {
                        "id": 1428,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2692,
                        "src": "1054:9:7"
                      }
                    ],
                    "src": "1036:28:7"
                  },
                  "parameters": {
                    "id": 1426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1019:2:7"
                  },
                  "returnParameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1433,
                        "src": "1074:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1074:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1073:15:7"
                  },
                  "scope": 1744,
                  "src": "1006:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    92,
                    2685
                  ],
                  "documentation": {
                    "id": 1434,
                    "nodeType": "StructuredDocumentation",
                    "src": "1095:102:7",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1442,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1438,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1436,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "1243:7:7"
                      },
                      {
                        "id": 1437,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2692,
                        "src": "1252:9:7"
                      }
                    ],
                    "src": "1234:28:7"
                  },
                  "parameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1217:2:7"
                  },
                  "returnParameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1442,
                        "src": "1272:13:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1272:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1271:15:7"
                  },
                  "scope": 1744,
                  "src": "1202:85:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2691
                  ],
                  "documentation": {
                    "id": 1443,
                    "nodeType": "StructuredDocumentation",
                    "src": "1293:668:7",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: SuperToken always uses 18 decimals.\n Note: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1450,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1446,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1445,
                        "name": "TokenInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2692,
                        "src": "2009:9:7"
                      }
                    ],
                    "src": "2000:19:7"
                  },
                  "parameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1983:2:7"
                  },
                  "returnParameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "2029:5:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2029:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2028:7:7"
                  },
                  "scope": 1744,
                  "src": "1966:70:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    8,
                    104
                  ],
                  "documentation": {
                    "id": 1451,
                    "nodeType": "StructuredDocumentation",
                    "src": "2223:49:7",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1459,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1455,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1453,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "2323:7:7"
                      },
                      {
                        "id": 1454,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "2332:6:7"
                      }
                    ],
                    "src": "2314:25:7"
                  },
                  "parameters": {
                    "id": 1452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:2:7"
                  },
                  "returnParameters": {
                    "id": 1458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1457,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1459,
                        "src": "2349:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2349:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2348:9:7"
                  },
                  "scope": 1744,
                  "src": "2277:81:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    16,
                    112
                  ],
                  "documentation": {
                    "id": 1460,
                    "nodeType": "StructuredDocumentation",
                    "src": "2364:83:7",
                    "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
                  },
                  "functionSelector": "70a08231",
                  "id": 1470,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1466,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1464,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "2511:7:7"
                      },
                      {
                        "id": 1465,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "2520:6:7"
                      }
                    ],
                    "src": "2502:25:7"
                  },
                  "parameters": {
                    "id": 1463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "2471:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:17:7"
                  },
                  "returnParameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1468,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "2536:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1467,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2536:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2535:17:7"
                  },
                  "scope": 1744,
                  "src": "2452:101:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    26
                  ],
                  "documentation": {
                    "id": 1471,
                    "nodeType": "StructuredDocumentation",
                    "src": "2731:209:7",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1482,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1478,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1477,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "3016:6:7"
                      }
                    ],
                    "src": "3007:16:7"
                  },
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1482,
                        "src": "2963:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2963:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1482,
                        "src": "2982:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2962:35:7"
                  },
                  "returnParameters": {
                    "id": 1481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1480,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1482,
                        "src": "3033:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1479,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3032:6:7"
                  },
                  "scope": 1744,
                  "src": "2945:94:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    36
                  ],
                  "documentation": {
                    "id": 1483,
                    "nodeType": "StructuredDocumentation",
                    "src": "3045:264:7",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1494,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1490,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1489,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "3383:6:7"
                      }
                    ],
                    "src": "3374:16:7"
                  },
                  "parameters": {
                    "id": 1488,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1485,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1494,
                        "src": "3333:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1487,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1494,
                        "src": "3348:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3348:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:32:7"
                  },
                  "returnParameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1494,
                        "src": "3405:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3405:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3404:9:7"
                  },
                  "scope": 1744,
                  "src": "3314:100:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    46
                  ],
                  "documentation": {
                    "id": 1495,
                    "nodeType": "StructuredDocumentation",
                    "src": "3420:642:7",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1506,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1502,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1501,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "4135:6:7"
                      }
                    ],
                    "src": "4126:16:7"
                  },
                  "parameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1497,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1506,
                        "src": "4084:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4084:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1499,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1506,
                        "src": "4101:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4101:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4083:33:7"
                  },
                  "returnParameters": {
                    "id": 1505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1506,
                        "src": "4152:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4152:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4151:6:7"
                  },
                  "scope": 1744,
                  "src": "4067:91:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    58
                  ],
                  "documentation": {
                    "id": 1507,
                    "nodeType": "StructuredDocumentation",
                    "src": "4164:296:7",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1520,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1516,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1515,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 77,
                        "src": "4556:6:7"
                      }
                    ],
                    "src": "4547:16:7"
                  },
                  "parameters": {
                    "id": 1514,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1509,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "4487:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1508,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4487:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1511,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "4503:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1510,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4503:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1513,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "4522:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4486:51:7"
                  },
                  "returnParameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1518,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1520,
                        "src": "4573:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1517,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4573:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4572:6:7"
                  },
                  "scope": 1744,
                  "src": "4465:114:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1521,
                    "nodeType": "StructuredDocumentation",
                    "src": "4585:384:7",
                    "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "39509351",
                  "id": 1530,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1523,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1530,
                        "src": "5001:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5001:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 1530,
                        "src": "5018:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5018:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5000:37:7"
                  },
                  "returnParameters": {
                    "id": 1529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1530,
                        "src": "5056:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5056:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5055:6:7"
                  },
                  "scope": 1744,
                  "src": "4974:88:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1531,
                    "nodeType": "StructuredDocumentation",
                    "src": "5068:476:7",
                    "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                  },
                  "functionSelector": "a457c2d7",
                  "id": 1540,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "5577:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5577:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "5594:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5594:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5576:42:7"
                  },
                  "returnParameters": {
                    "id": 1539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "5637:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5637:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5636:6:7"
                  },
                  "scope": 1744,
                  "src": "5550:93:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    98
                  ],
                  "documentation": {
                    "id": 1541,
                    "nodeType": "StructuredDocumentation",
                    "src": "5822:286:7",
                    "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For super token contracts, this value is 1 always"
                  },
                  "functionSelector": "556f0dc7",
                  "id": 1548,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "granularity",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1544,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1543,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "6159:7:7"
                      }
                    ],
                    "src": "6150:17:7"
                  },
                  "parameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6133:2:7"
                  },
                  "returnParameters": {
                    "id": 1547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1548,
                        "src": "6177:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6177:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6176:9:7"
                  },
                  "scope": 1744,
                  "src": "6113:73:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    122
                  ],
                  "documentation": {
                    "id": 1549,
                    "nodeType": "StructuredDocumentation",
                    "src": "6192:585:7",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "9bd9bbc6",
                  "id": 1560,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1558,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1557,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "6870:7:7"
                      }
                    ],
                    "src": "6861:17:7"
                  },
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1551,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1560,
                        "src": "6796:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6796:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1560,
                        "src": "6815:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6815:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1560,
                        "src": "6831:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6831:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6795:56:7"
                  },
                  "returnParameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6878:0:7"
                  },
                  "scope": 1744,
                  "src": "6782:97:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    130
                  ],
                  "documentation": {
                    "id": 1561,
                    "nodeType": "StructuredDocumentation",
                    "src": "6885:404:7",
                    "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
                  },
                  "functionSelector": "fe9d9303",
                  "id": 1570,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1568,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1567,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "7363:7:7"
                      }
                    ],
                    "src": "7354:17:7"
                  },
                  "parameters": {
                    "id": 1566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1563,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "7308:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7308:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1565,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1570,
                        "src": "7324:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1564,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7324:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7307:37:7"
                  },
                  "returnParameters": {
                    "id": 1569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7371:0:7"
                  },
                  "scope": 1744,
                  "src": "7294:78:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    140
                  ],
                  "documentation": {
                    "id": 1571,
                    "nodeType": "StructuredDocumentation",
                    "src": "7378:249:7",
                    "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
                  },
                  "functionSelector": "d95b6371",
                  "id": 1582,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOperatorFor",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1578,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1577,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "7712:7:7"
                      }
                    ],
                    "src": "7703:17:7"
                  },
                  "parameters": {
                    "id": 1576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1573,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "7655:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1572,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7655:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1575,
                        "mutability": "mutable",
                        "name": "tokenHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "7673:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7673:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7654:39:7"
                  },
                  "returnParameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "7735:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7735:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7734:6:7"
                  },
                  "scope": 1744,
                  "src": "7632:109:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    146
                  ],
                  "documentation": {
                    "id": 1583,
                    "nodeType": "StructuredDocumentation",
                    "src": "7747:233:7",
                    "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "959b8c3f",
                  "id": 1590,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "authorizeOperator",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1588,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1587,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "8048:7:7"
                      }
                    ],
                    "src": "8039:17:7"
                  },
                  "parameters": {
                    "id": 1586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1585,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "8012:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8012:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8011:18:7"
                  },
                  "returnParameters": {
                    "id": 1589,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8056:0:7"
                  },
                  "scope": 1744,
                  "src": "7985:72:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    152
                  ],
                  "documentation": {
                    "id": 1591,
                    "nodeType": "StructuredDocumentation",
                    "src": "8063:261:7",
                    "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
                  },
                  "functionSelector": "fad8b32a",
                  "id": 1598,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeOperator",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1596,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1595,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "8389:7:7"
                      }
                    ],
                    "src": "8380:17:7"
                  },
                  "parameters": {
                    "id": 1594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1593,
                        "mutability": "mutable",
                        "name": "operator",
                        "nodeType": "VariableDeclaration",
                        "scope": 1598,
                        "src": "8353:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8353:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8352:18:7"
                  },
                  "returnParameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8397:0:7"
                  },
                  "scope": 1744,
                  "src": "8329:69:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    159
                  ],
                  "documentation": {
                    "id": 1599,
                    "nodeType": "StructuredDocumentation",
                    "src": "8404:338:7",
                    "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
                  },
                  "functionSelector": "06e48538",
                  "id": 1607,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "defaultOperators",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1602,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1601,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "8793:7:7"
                      }
                    ],
                    "src": "8784:17:7"
                  },
                  "parameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8772:2:7"
                  },
                  "returnParameters": {
                    "id": 1606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1605,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "8816:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8816:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1604,
                          "nodeType": "ArrayTypeName",
                          "src": "8816:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8815:18:7"
                  },
                  "scope": 1744,
                  "src": "8747:87:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    173
                  ],
                  "documentation": {
                    "id": 1608,
                    "nodeType": "StructuredDocumentation",
                    "src": "8840:714:7",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
                  },
                  "functionSelector": "62ad1b83",
                  "id": 1623,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorSend",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1621,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1620,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "9746:7:7"
                      }
                    ],
                    "src": "9737:17:7"
                  },
                  "parameters": {
                    "id": 1619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1610,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "9590:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9590:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1612,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "9614:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1611,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9614:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "9641:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9641:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1616,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "9665:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1615,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9665:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1618,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1623,
                        "src": "9694:27:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1617,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9694:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9580:147:7"
                  },
                  "returnParameters": {
                    "id": 1622,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9754:0:7"
                  },
                  "scope": 1744,
                  "src": "9559:196:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    185
                  ],
                  "documentation": {
                    "id": 1624,
                    "nodeType": "StructuredDocumentation",
                    "src": "9761:532:7",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
                  },
                  "functionSelector": "fc673c4f",
                  "id": 1637,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operatorBurn",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1635,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1634,
                        "name": "IERC777",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 236,
                        "src": "10459:7:7"
                      }
                    ],
                    "src": "10450:17:7"
                  },
                  "parameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1626,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "10329:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10329:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1628,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "10354:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1627,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10354:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1630,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "10378:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1629,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10378:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1632,
                        "mutability": "mutable",
                        "name": "operatorData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "10407:27:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1631,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10407:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10319:121:7"
                  },
                  "returnParameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10467:0:7"
                  },
                  "scope": 1744,
                  "src": "10298:170:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1638,
                    "nodeType": "StructuredDocumentation",
                    "src": "10676:99:7",
                    "text": " @dev Mint new tokens for the account\n Modifiers:\n  - onlySelf"
                  },
                  "functionSelector": "c68d4283",
                  "id": 1647,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfMint",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "10807:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10807:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "10832:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10832:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "10856:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10856:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10797:86:7"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10892:0:7"
                  },
                  "scope": 1744,
                  "src": "10780:113:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1648,
                    "nodeType": "StructuredDocumentation",
                    "src": "10898:99:7",
                    "text": " @dev Burn existing tokens for the account\n Modifiers:\n  - onlySelf"
                  },
                  "functionSelector": "9d876741",
                  "id": 1657,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "selfBurn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1650,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "11027:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11027:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1652,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "11051:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11051:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1654,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 1657,
                        "src": "11074:21:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1653,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "11074:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11018:82:7"
                  },
                  "returnParameters": {
                    "id": 1656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11109:0:7"
                  },
                  "scope": 1744,
                  "src": "11001:109:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1658,
                    "nodeType": "StructuredDocumentation",
                    "src": "11311:87:7",
                    "text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
                  },
                  "functionSelector": "a3a7e7f3",
                  "id": 1663,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferAll",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1660,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1663,
                        "src": "11424:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11424:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11423:19:7"
                  },
                  "returnParameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11451:0:7"
                  },
                  "scope": 1744,
                  "src": "11403:49:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1664,
                    "nodeType": "StructuredDocumentation",
                    "src": "11641:110:7",
                    "text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
                  },
                  "functionSelector": "ee719bc8",
                  "id": 1669,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUnderlyingToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1665,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11783:2:7"
                  },
                  "returnParameters": {
                    "id": 1668,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1667,
                        "mutability": "mutable",
                        "name": "tokenAddr",
                        "nodeType": "VariableDeclaration",
                        "scope": 1669,
                        "src": "11808:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11808:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11807:19:7"
                  },
                  "scope": 1744,
                  "src": "11756:71:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1670,
                    "nodeType": "StructuredDocumentation",
                    "src": "11833:259:7",
                    "text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n function you should ´approve´ this contract"
                  },
                  "functionSelector": "45977d03",
                  "id": 1675,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1673,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1672,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1675,
                        "src": "12114:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1671,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12114:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12113:16:7"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12138:0:7"
                  },
                  "scope": 1744,
                  "src": "12097:42:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1676,
                    "nodeType": "StructuredDocumentation",
                    "src": "12145:402:7",
                    "text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to received upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param data User data for the TokensRecipient callback\n NOTE: It will use ´transferFrom´ to get tokens. Before calling this\n function you should ´approve´ this contract"
                  },
                  "functionSelector": "5b9d09cc",
                  "id": 1685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeTo",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "12571:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12571:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "12583:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12583:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1682,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1685,
                        "src": "12599:19:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1681,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12599:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12570:49:7"
                  },
                  "returnParameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12628:0:7"
                  },
                  "scope": 1744,
                  "src": "12552:77:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1686,
                    "nodeType": "StructuredDocumentation",
                    "src": "12635:166:7",
                    "text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
                  },
                  "id": 1692,
                  "name": "TokenUpgraded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1688,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1692,
                        "src": "12835:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1687,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12835:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1690,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1692,
                        "src": "12868:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12868:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12825:63:7"
                  },
                  "src": "12806:83:7"
                },
                {
                  "documentation": {
                    "id": 1693,
                    "nodeType": "StructuredDocumentation",
                    "src": "12895:158:7",
                    "text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
                  },
                  "functionSelector": "11bcc81e",
                  "id": 1698,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "downgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1695,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1698,
                        "src": "13077:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1694,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13077:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13076:16:7"
                  },
                  "returnParameters": {
                    "id": 1697,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13101:0:7"
                  },
                  "scope": 1744,
                  "src": "13058:44:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1699,
                    "nodeType": "StructuredDocumentation",
                    "src": "13108:150:7",
                    "text": " @dev Token downgrade event\n @param account Account whose tokens are upgraded\n @param amount Amount of tokens downgraded"
                  },
                  "id": 1705,
                  "name": "TokenDowngraded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1701,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "13294:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13294:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "13327:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13327:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13284:63:7"
                  },
                  "src": "13263:85:7"
                },
                {
                  "documentation": {
                    "id": 1706,
                    "nodeType": "StructuredDocumentation",
                    "src": "13537:269:7",
                    "text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "62aa5287",
                  "id": 1715,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1713,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1708,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "13846:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13846:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1710,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "13871:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13871:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1712,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1715,
                        "src": "13896:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13896:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13836:80:7"
                  },
                  "returnParameters": {
                    "id": 1714,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13925:0:7"
                  },
                  "scope": 1744,
                  "src": "13811:115:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1716,
                    "nodeType": "StructuredDocumentation",
                    "src": "13932:336:7",
                    "text": " @dev Perform ERC20 transfer from by host contract.\n @param account The account to spend sender's funds.\n @param spender  The account where the funds is sent from.\n @param recipient The recipient of thefunds.\n @param amount Number of tokens to be transferred.\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "16d055d6",
                  "id": 1727,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1718,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "14313:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14313:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "14338:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14338:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "14363:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14363:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1724,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "14390:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1723,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14390:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14303:107:7"
                  },
                  "returnParameters": {
                    "id": 1726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14419:0:7"
                  },
                  "scope": 1744,
                  "src": "14273:147:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1728,
                    "nodeType": "StructuredDocumentation",
                    "src": "14426:225:7",
                    "text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "ca789464",
                  "id": 1735,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationUpgrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1730,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "14682:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14682:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1732,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "14699:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1731,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14699:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14681:33:7"
                  },
                  "returnParameters": {
                    "id": 1734,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14723:0:7"
                  },
                  "scope": 1744,
                  "src": "14656:68:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1736,
                    "nodeType": "StructuredDocumentation",
                    "src": "14730:229:7",
                    "text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n Modifiers:\n  - onlyHost"
                  },
                  "functionSelector": "245887fc",
                  "id": 1743,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "operationDowngrade",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1738,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "14992:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14992:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1740,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1743,
                        "src": "15009:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1739,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15009:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14991:33:7"
                  },
                  "returnParameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15033:0:7"
                  },
                  "scope": 1744,
                  "src": "14964:70:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1745,
              "src": "487:15077:7"
            }
          ],
          "src": "35:15530:7"
        },
        "id": 7
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
          "exportedSymbols": {
            "ERC20WithTokenInfo": [
              2670
            ],
            "IERC20": [
              77
            ],
            "ISuperToken": [
              1744
            ],
            "ISuperTokenFactory": [
              1829
            ]
          },
          "id": 1830,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1746,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:8"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1748,
              "nodeType": "ImportDirective",
              "scope": 1830,
              "sourceUnit": 1745,
              "src": "62:48:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1747,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:11:8",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
              "file": "../tokens/ERC20WithTokenInfo.sol",
              "id": 1751,
              "nodeType": "ImportDirective",
              "scope": 1830,
              "sourceUnit": 2671,
              "src": "112:86:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1749,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "125:6:8",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1750,
                    "name": "ERC20WithTokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "137:18:8",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1829,
              "linearizedBaseContracts": [
                1829
              ],
              "name": "ISuperTokenFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1752,
                    "nodeType": "StructuredDocumentation",
                    "src": "237:60:8",
                    "text": " @dev Get superfluid host contract address"
                  },
                  "functionSelector": "20bc4425",
                  "id": 1757,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHost",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1753,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "318:2:8"
                  },
                  "returnParameters": {
                    "id": 1756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1755,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 1757,
                        "src": "343:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "343:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "342:14:8"
                  },
                  "scope": 1829,
                  "src": "302:55:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1758,
                    "nodeType": "StructuredDocumentation",
                    "src": "363:32:8",
                    "text": "@dev Initialize the contract"
                  },
                  "functionSelector": "8129fc1c",
                  "id": 1761,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "419:2:8"
                  },
                  "returnParameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "430:0:8"
                  },
                  "scope": 1829,
                  "src": "400:31:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1762,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:77:8",
                    "text": " @dev Get the current super token logic used by the factory"
                  },
                  "functionSelector": "9470a5b2",
                  "id": 1768,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "546:2:8"
                  },
                  "returnParameters": {
                    "id": 1767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1766,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1768,
                        "src": "572:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1765,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1764,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "572:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "572:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "571:24:8"
                  },
                  "scope": 1829,
                  "src": "519:77:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperTokenFactory.Upgradability",
                  "id": 1772,
                  "members": [
                    {
                      "id": 1769,
                      "name": "NON_UPGRADABLE",
                      "nodeType": "EnumValue",
                      "src": "760:14:8"
                    },
                    {
                      "id": 1770,
                      "name": "SEMI_UPGRADABLE",
                      "nodeType": "EnumValue",
                      "src": "854:15:8"
                    },
                    {
                      "id": 1771,
                      "name": "FULL_UPGRADABE",
                      "nodeType": "EnumValue",
                      "src": "933:14:8"
                    }
                  ],
                  "name": "Upgradability",
                  "nodeType": "EnumDefinition",
                  "src": "650:303:8"
                },
                {
                  "documentation": {
                    "id": 1773,
                    "nodeType": "StructuredDocumentation",
                    "src": "959:320:8",
                    "text": " @dev Create new super token wrapper for the underlying ERC20 token\n @param underlyingToken Underlying ERC20 token\n @param underlyingDecimals Underlying token decimals\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol"
                  },
                  "functionSelector": "a6d0c534",
                  "id": 1791,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createERC20Wrapper",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1776,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1321:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1774,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "1321:6:8"
                          },
                          "referencedDeclaration": 77,
                          "src": "1321:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1778,
                        "mutability": "mutable",
                        "name": "underlyingDecimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1353:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1777,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1353:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1781,
                        "mutability": "mutable",
                        "name": "upgradability",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1387:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$1772",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        "typeName": {
                          "id": 1780,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1779,
                            "name": "Upgradability",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1772,
                            "src": "1387:13:8"
                          },
                          "referencedDeclaration": 1772,
                          "src": "1387:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Upgradability_$1772",
                            "typeString": "enum ISuperTokenFactory.Upgradability"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1424:20:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1424:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1785,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1454:22:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1784,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1311:171:8"
                  },
                  "returnParameters": {
                    "id": 1790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1789,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1791,
                        "src": "1517:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1788,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1787,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "1517:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "1517:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1516:24:8"
                  },
                  "scope": 1829,
                  "src": "1284:257:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1792,
                    "nodeType": "StructuredDocumentation",
                    "src": "1547:362:8",
                    "text": " @dev Create new super token wrapper for the underlying ERC20 token with extra token info\n @param underlyingToken Underlying ERC20 token\n @param upgradability Upgradability mode\n @param name Super token name\n @param symbol Super token symbol\n NOTE:\n - It assumes token provide the .decimals() function"
                  },
                  "functionSelector": "431f1481",
                  "id": 1808,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createERC20Wrapper",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1803,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1795,
                        "mutability": "mutable",
                        "name": "underlyingToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1808,
                        "src": "1951:34:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2670",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        "typeName": {
                          "id": 1794,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1793,
                            "name": "ERC20WithTokenInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2670,
                            "src": "1951:18:8"
                          },
                          "referencedDeclaration": 2670,
                          "src": "1951:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$2670",
                            "typeString": "contract ERC20WithTokenInfo"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1798,
                        "mutability": "mutable",
                        "name": "upgradability",
                        "nodeType": "VariableDeclaration",
                        "scope": 1808,
                        "src": "1995:27:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$1772",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        "typeName": {
                          "id": 1797,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1796,
                            "name": "Upgradability",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1772,
                            "src": "1995:13:8"
                          },
                          "referencedDeclaration": 1772,
                          "src": "1995:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Upgradability_$1772",
                            "typeString": "enum ISuperTokenFactory.Upgradability"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1800,
                        "mutability": "mutable",
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 1808,
                        "src": "2032:20:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1799,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1802,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 1808,
                        "src": "2062:22:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1801,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2062:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1941:149:8"
                  },
                  "returnParameters": {
                    "id": 1807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1806,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 1808,
                        "src": "2125:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1805,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1804,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "2125:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "2125:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2124:24:8"
                  },
                  "scope": 1829,
                  "src": "1914:235:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d412d344",
                  "id": 1813,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initializeCustomSuperToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1810,
                        "mutability": "mutable",
                        "name": "customSuperTokenProxy",
                        "nodeType": "VariableDeclaration",
                        "scope": 1813,
                        "src": "2200:29:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1809,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2190:45:8"
                  },
                  "returnParameters": {
                    "id": 1812,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2252:0:8"
                  },
                  "scope": 1829,
                  "src": "2155:98:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1818,
                  "name": "SuperTokenLogicCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1818,
                        "src": "2288:30:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1815,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1814,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "2288:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "2288:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2287:32:8"
                  },
                  "src": "2259:61:8"
                },
                {
                  "anonymous": false,
                  "id": 1823,
                  "name": "SuperTokenCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1822,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1821,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1823,
                        "src": "2350:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1820,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1819,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "2350:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "2350:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2349:27:8"
                  },
                  "src": "2326:51:8"
                },
                {
                  "anonymous": false,
                  "id": 1828,
                  "name": "CustomSuperTokenCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1826,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1828,
                        "src": "2413:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1825,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1824,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "2413:11:8"
                          },
                          "referencedDeclaration": 1744,
                          "src": "2413:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2412:27:8"
                  },
                  "src": "2383:57:8"
                }
              ],
              "scope": 1830,
              "src": "201:2242:8"
            }
          ],
          "src": "35:2409:8"
        },
        "id": 8
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
          "exportedSymbols": {
            "BatchOperation": [
              1176
            ],
            "ContextDefinitions": [
              1142
            ],
            "IERC20": [
              77
            ],
            "IERC777": [
              236
            ],
            "ISuperAgreement": [
              1276
            ],
            "ISuperApp": [
              1390
            ],
            "ISuperToken": [
              1744
            ],
            "ISuperTokenFactory": [
              1829
            ],
            "ISuperfluid": [
              2287
            ],
            "ISuperfluidGovernance": [
              2370
            ],
            "ISuperfluidToken": [
              2658
            ],
            "SuperAppDefinitions": [
              1066
            ],
            "SuperfluidGovernanceConfigs": [
              1243
            ],
            "TokenInfo": [
              2692
            ]
          },
          "id": 2288,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1831,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:9"
            },
            {
              "id": 1832,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:33:9"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
              "file": "./ISuperfluidGovernance.sol",
              "id": 1834,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 2371,
              "src": "147:68:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1833,
                    "name": "ISuperfluidGovernance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "156:21:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 1836,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 2659,
              "src": "216:58:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1835,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "225:16:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 1838,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 1745,
              "src": "275:48:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1837,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "284:11:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
              "file": "./ISuperTokenFactory.sol",
              "id": 1840,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 1830,
              "src": "324:62:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1839,
                    "name": "ISuperTokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "333:18:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 1842,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 1277,
              "src": "387:56:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1841,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "396:15:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
              "file": "./ISuperApp.sol",
              "id": 1844,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 1391,
              "src": "444:44:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1843,
                    "name": "ISuperApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "453:9:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
              "file": "./Definitions.sol",
              "id": 1849,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 1244,
              "src": "489:137:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1845,
                    "name": "SuperAppDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "502:19:9",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1846,
                    "name": "ContextDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "527:18:9",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1847,
                    "name": "BatchOperation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "551:14:9",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 1848,
                    "name": "SuperfluidGovernanceConfigs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "571:27:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "../tokens/TokenInfo.sol",
              "id": 1851,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 2693,
              "src": "627:52:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1850,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "636:9:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1853,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 78,
              "src": "680:72:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1852,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "689:6:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
              "id": 1855,
              "nodeType": "ImportDirective",
              "scope": 2288,
              "sourceUnit": 237,
              "src": "753:75:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1854,
                    "name": "IERC777",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "762:7:9",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1856,
                "nodeType": "StructuredDocumentation",
                "src": "831:355:9",
                "text": " @dev Superfluid host interface.\n It is the central contract of the system where super agreement, super app\n and super token features are connected together.\n The superfluid host contract is also the entry point for the protocol users,\n where batch call and meta transaction are provided for UX improvements.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2287,
              "linearizedBaseContracts": [
                2287
              ],
              "name": "ISuperfluid",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1857,
                    "nodeType": "StructuredDocumentation",
                    "src": "1395:72:9",
                    "text": " @dev Get the current governace of the Superfluid host"
                  },
                  "functionSelector": "289b3c0d",
                  "id": 1863,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1858,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1494:2:9"
                  },
                  "returnParameters": {
                    "id": 1862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1861,
                        "mutability": "mutable",
                        "name": "governance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1863,
                        "src": "1519:32:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1860,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1859,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2370,
                            "src": "1519:21:9"
                          },
                          "referencedDeclaration": 2370,
                          "src": "1519:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1518:34:9"
                  },
                  "scope": 2287,
                  "src": "1472:81:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1871,
                  "name": "GovernanceReplaced",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1870,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1866,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 1871,
                        "src": "1584:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1865,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1864,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2370,
                            "src": "1584:21:9"
                          },
                          "referencedDeclaration": 2370,
                          "src": "1584:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1869,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 1871,
                        "src": "1614:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1867,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2370,
                            "src": "1614:21:9"
                          },
                          "referencedDeclaration": 2370,
                          "src": "1614:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1583:60:9"
                  },
                  "src": "1559:85:9"
                },
                {
                  "documentation": {
                    "id": 1872,
                    "nodeType": "StructuredDocumentation",
                    "src": "1649:69:9",
                    "text": " @dev Replace the current governance with a new one"
                  },
                  "functionSelector": "7283100c",
                  "id": 1878,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "replaceGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 1878,
                        "src": "1750:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                          "typeString": "contract ISuperfluidGovernance"
                        },
                        "typeName": {
                          "id": 1874,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1873,
                            "name": "ISuperfluidGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2370,
                            "src": "1750:21:9"
                          },
                          "referencedDeclaration": 2370,
                          "src": "1750:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidGovernance_$2370",
                            "typeString": "contract ISuperfluidGovernance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1749:30:9"
                  },
                  "returnParameters": {
                    "id": 1877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:0:9"
                  },
                  "scope": 2287,
                  "src": "1723:66:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1884,
                  "name": "AgreementClassRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1880,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1884,
                        "src": "2017:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1879,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1882,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 1884,
                        "src": "2040:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2040:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2016:37:9"
                  },
                  "src": "1986:68:9"
                },
                {
                  "documentation": {
                    "id": 1885,
                    "nodeType": "StructuredDocumentation",
                    "src": "2059:181:9",
                    "text": " @dev Register a new agreement class to the system\n @param agreementClassLogic INitial agreement class code\n Modifiers:\n  - onlyGovernance"
                  },
                  "functionSelector": "15a024e1",
                  "id": 1891,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1888,
                        "mutability": "mutable",
                        "name": "agreementClassLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1891,
                        "src": "2277:35:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 1887,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1886,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "2277:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "2277:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2276:37:9"
                  },
                  "returnParameters": {
                    "id": 1890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2322:0:9"
                  },
                  "scope": 2287,
                  "src": "2245:78:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1897,
                  "name": "AgreementClassUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1893,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "2357:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1892,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1895,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 1897,
                        "src": "2380:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1894,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2380:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2356:37:9"
                  },
                  "src": "2329:65:9"
                },
                {
                  "documentation": {
                    "id": 1898,
                    "nodeType": "StructuredDocumentation",
                    "src": "2399:168:9",
                    "text": " @dev Update code of an agreement class\n @param agreementClassLogic New code for the agreement class\n Modifiers:\n  - onlyGovernance"
                  },
                  "functionSelector": "06cecba8",
                  "id": 1904,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1902,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1901,
                        "mutability": "mutable",
                        "name": "agreementClassLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1904,
                        "src": "2602:35:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 1900,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1899,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "2602:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "2602:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2601:37:9"
                  },
                  "returnParameters": {
                    "id": 1903,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2647:0:9"
                  },
                  "scope": 2287,
                  "src": "2572:76:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1905,
                    "nodeType": "StructuredDocumentation",
                    "src": "2654:65:9",
                    "text": " @dev Check if the agreement class is whitelisted"
                  },
                  "functionSelector": "e8dccb7d",
                  "id": 1912,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAgreementTypeListed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1907,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1912,
                        "src": "2755:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1906,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2755:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2754:23:9"
                  },
                  "returnParameters": {
                    "id": 1911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1910,
                        "mutability": "mutable",
                        "name": "yes",
                        "nodeType": "VariableDeclaration",
                        "scope": 1912,
                        "src": "2800:8:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2799:10:9"
                  },
                  "scope": 2287,
                  "src": "2724:86:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1913,
                    "nodeType": "StructuredDocumentation",
                    "src": "2816:65:9",
                    "text": " @dev Check if the agreement class is whitelisted"
                  },
                  "functionSelector": "8ca48484",
                  "id": 1921,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAgreementClassListed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1916,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "2918:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 1915,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1914,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "2918:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "2918:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2917:32:9"
                  },
                  "returnParameters": {
                    "id": 1920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1919,
                        "mutability": "mutable",
                        "name": "yes",
                        "nodeType": "VariableDeclaration",
                        "scope": 1921,
                        "src": "2972:8:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1918,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2972:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2971:10:9"
                  },
                  "scope": 2287,
                  "src": "2886:96:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1922,
                    "nodeType": "StructuredDocumentation",
                    "src": "2988:41:9",
                    "text": " @dev Get agreement class"
                  },
                  "functionSelector": "b6d200de",
                  "id": 1930,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1924,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "3061:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1923,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3061:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3060:23:9"
                  },
                  "returnParameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1928,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 1930,
                        "src": "3106:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 1927,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1926,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "3106:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "3106:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3105:32:9"
                  },
                  "scope": 2287,
                  "src": "3034:104:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1931,
                    "nodeType": "StructuredDocumentation",
                    "src": "3144:113:9",
                    "text": " @dev Map list of the agreement classes using a bitmap\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "c56a069d",
                  "id": 1940,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mapAgreementClasses",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1933,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1940,
                        "src": "3291:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3291:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3290:16:9"
                  },
                  "returnParameters": {
                    "id": 1939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1938,
                        "mutability": "mutable",
                        "name": "agreementClasses",
                        "nodeType": "VariableDeclaration",
                        "scope": 1940,
                        "src": "3346:41:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1276_$dyn_memory_ptr",
                          "typeString": "contract ISuperAgreement[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1936,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1935,
                              "name": "ISuperAgreement",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1276,
                              "src": "3346:15:9"
                            },
                            "referencedDeclaration": 1276,
                            "src": "3346:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                              "typeString": "contract ISuperAgreement"
                            }
                          },
                          "id": 1937,
                          "nodeType": "ArrayTypeName",
                          "src": "3346:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1276_$dyn_storage_ptr",
                            "typeString": "contract ISuperAgreement[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3345:43:9"
                  },
                  "scope": 2287,
                  "src": "3262:127:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1941,
                    "nodeType": "StructuredDocumentation",
                    "src": "3395:120:9",
                    "text": " @dev Create a new bitmask by adding a agreement class to it.\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "bced3ddc",
                  "id": 1950,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addToAgreementClassesBitmap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1943,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "3557:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1942,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3557:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "3573:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3573:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3556:39:9"
                  },
                  "returnParameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1948,
                        "mutability": "mutable",
                        "name": "newBitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "3635:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1947,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3635:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3634:19:9"
                  },
                  "scope": 2287,
                  "src": "3520:134:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1951,
                    "nodeType": "StructuredDocumentation",
                    "src": "3660:124:9",
                    "text": " @dev Create a new bitmask by removing a agreement class from it.\n @param bitmap Agreement class bitmap"
                  },
                  "functionSelector": "a5dbbbcd",
                  "id": 1960,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeFromAgreementClassesBitmap",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1953,
                        "mutability": "mutable",
                        "name": "bitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1960,
                        "src": "3831:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3831:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1955,
                        "mutability": "mutable",
                        "name": "agreementType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1960,
                        "src": "3847:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3847:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3830:39:9"
                  },
                  "returnParameters": {
                    "id": 1959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1958,
                        "mutability": "mutable",
                        "name": "newBitmap",
                        "nodeType": "VariableDeclaration",
                        "scope": 1960,
                        "src": "3909:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3909:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3908:19:9"
                  },
                  "scope": 2287,
                  "src": "3789:139:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1961,
                    "nodeType": "StructuredDocumentation",
                    "src": "4121:86:9",
                    "text": " @dev Get the super token factory\n @return factory The factory"
                  },
                  "functionSelector": "731aed6e",
                  "id": 1967,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4241:2:9"
                  },
                  "returnParameters": {
                    "id": 1966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1965,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1967,
                        "src": "4267:26:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 1964,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1963,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1829,
                            "src": "4267:18:9"
                          },
                          "referencedDeclaration": 1829,
                          "src": "4267:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4266:28:9"
                  },
                  "scope": 2287,
                  "src": "4212:83:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1968,
                    "nodeType": "StructuredDocumentation",
                    "src": "4301:134:9",
                    "text": " @dev Get the super token factory logic (applicable to upgradable deployment)\n @return logic The factory logic"
                  },
                  "functionSelector": "f2e55caf",
                  "id": 1973,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSuperTokenFactoryLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1969,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4474:2:9"
                  },
                  "returnParameters": {
                    "id": 1972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1971,
                        "mutability": "mutable",
                        "name": "logic",
                        "nodeType": "VariableDeclaration",
                        "scope": 1973,
                        "src": "4500:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1970,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4500:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4499:15:9"
                  },
                  "scope": 2287,
                  "src": "4440:75:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1978,
                  "name": "SuperTokenFactoryUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1977,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1976,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1978,
                        "src": "4552:29:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 1975,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1974,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1829,
                            "src": "4552:18:9"
                          },
                          "referencedDeclaration": 1829,
                          "src": "4552:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4551:31:9"
                  },
                  "src": "4521:62:9"
                },
                {
                  "documentation": {
                    "id": 1979,
                    "nodeType": "StructuredDocumentation",
                    "src": "4588:93:9",
                    "text": " @dev Update super token factory\n @param newFactory New factory logic"
                  },
                  "functionSelector": "54fbc493",
                  "id": 1985,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateSuperTokenFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1982,
                        "mutability": "mutable",
                        "name": "newFactory",
                        "nodeType": "VariableDeclaration",
                        "scope": 1985,
                        "src": "4719:29:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                          "typeString": "contract ISuperTokenFactory"
                        },
                        "typeName": {
                          "id": 1981,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1980,
                            "name": "ISuperTokenFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1829,
                            "src": "4719:18:9"
                          },
                          "referencedDeclaration": 1829,
                          "src": "4719:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperTokenFactory_$1829",
                            "typeString": "contract ISuperTokenFactory"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4718:31:9"
                  },
                  "returnParameters": {
                    "id": 1984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4758:0:9"
                  },
                  "scope": 2287,
                  "src": "4686:73:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 1992,
                  "name": "SuperTokenLogicUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1988,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "4794:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1987,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1986,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "4794:11:9"
                          },
                          "referencedDeclaration": 1744,
                          "src": "4794:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1990,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "scope": 1992,
                        "src": "4821:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1989,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4821:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4793:41:9"
                  },
                  "src": "4765:70:9"
                },
                {
                  "documentation": {
                    "id": 1993,
                    "nodeType": "StructuredDocumentation",
                    "src": "4840:161:9",
                    "text": " @dev Update the super token logic to the latest\n NOTE:\n - Refer toISuperTokenFactory.Upgradability for expected behaviours."
                  },
                  "functionSelector": "787afde7",
                  "id": 1999,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1999,
                        "src": "5037:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 1995,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1994,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "5037:11:9"
                          },
                          "referencedDeclaration": 1744,
                          "src": "5037:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5036:19:9"
                  },
                  "returnParameters": {
                    "id": 1998,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5064:0:9"
                  },
                  "scope": 2287,
                  "src": "5006:59:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2000,
                    "nodeType": "StructuredDocumentation",
                    "src": "5252:44:9",
                    "text": " @dev App registered event"
                  },
                  "id": 2005,
                  "name": "AppRegistered",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2003,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2005,
                        "src": "5321:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2002,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2001,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "5321:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "5321:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5320:23:9"
                  },
                  "src": "5301:43:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2006,
                    "nodeType": "StructuredDocumentation",
                    "src": "5350:46:9",
                    "text": " @dev Jail event for the app"
                  },
                  "id": 2013,
                  "name": "Jail",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2009,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2013,
                        "src": "5412:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2007,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "5412:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "5412:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2011,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reason",
                        "nodeType": "VariableDeclaration",
                        "scope": 2013,
                        "src": "5435:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2010,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5435:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5411:39:9"
                  },
                  "src": "5401:50:9"
                },
                {
                  "documentation": {
                    "id": 2014,
                    "nodeType": "StructuredDocumentation",
                    "src": "5457:196:9",
                    "text": " @dev Message sender declares it as a super app\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`"
                  },
                  "functionSelector": "ad3915c8",
                  "id": 2019,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2017,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2016,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2019,
                        "src": "5679:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5679:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5678:20:9"
                  },
                  "returnParameters": {
                    "id": 2018,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5707:0:9"
                  },
                  "scope": 2287,
                  "src": "5658:50:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2020,
                    "nodeType": "StructuredDocumentation",
                    "src": "5714:298:9",
                    "text": " @dev Message sender declares it as a super app, using a registration key\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`\n @param registrationKey The registration key issued by the governance"
                  },
                  "functionSelector": "bd1c448b",
                  "id": 2027,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAppWithKey",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2025,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2022,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2027,
                        "src": "6045:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6045:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2024,
                        "mutability": "mutable",
                        "name": "registrationKey",
                        "nodeType": "VariableDeclaration",
                        "scope": 2027,
                        "src": "6065:31:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2023,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6044:53:9"
                  },
                  "returnParameters": {
                    "id": 2026,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6106:0:9"
                  },
                  "scope": 2287,
                  "src": "6017:90:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2028,
                    "nodeType": "StructuredDocumentation",
                    "src": "6113:282:9",
                    "text": " @dev Message sender declares app as a super app\n @param configWord The super app manifest configuration, flags are defined in\n                   `SuperAppDefinitions`\n NOTE: only factory contracts authorized by governance can register super apps"
                  },
                  "functionSelector": "f3733052",
                  "id": 2036,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAppByFactory",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2031,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2036,
                        "src": "6430:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2030,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2029,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "6430:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "6430:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2033,
                        "mutability": "mutable",
                        "name": "configWord",
                        "nodeType": "VariableDeclaration",
                        "scope": 2036,
                        "src": "6445:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6445:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6429:35:9"
                  },
                  "returnParameters": {
                    "id": 2035,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6473:0:9"
                  },
                  "scope": 2287,
                  "src": "6400:74:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2037,
                    "nodeType": "StructuredDocumentation",
                    "src": "6480:90:9",
                    "text": " @dev Query if the app is registered\n @param app Super app address"
                  },
                  "functionSelector": "3ca3ad4e",
                  "id": 2045,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2040,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2045,
                        "src": "6590:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2039,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2038,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "6590:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "6590:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6589:15:9"
                  },
                  "returnParameters": {
                    "id": 2044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2043,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2045,
                        "src": "6627:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2042,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6627:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6626:6:9"
                  },
                  "scope": 2287,
                  "src": "6575:58:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2046,
                    "nodeType": "StructuredDocumentation",
                    "src": "6639:75:9",
                    "text": " @dev Query app level\n @param app Super app address"
                  },
                  "functionSelector": "13349046",
                  "id": 2054,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppLevel",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2049,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "6740:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2048,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2047,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "6740:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "6740:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6739:15:9"
                  },
                  "returnParameters": {
                    "id": 2053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2052,
                        "mutability": "mutable",
                        "name": "appLevel",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "6777:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2051,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6777:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6776:16:9"
                  },
                  "scope": 2287,
                  "src": "6719:74:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2055,
                    "nodeType": "StructuredDocumentation",
                    "src": "6799:93:9",
                    "text": " @dev Get the manifest of the super app\n @param app Super app address"
                  },
                  "functionSelector": "f9f522f4",
                  "id": 2067,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAppManifest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "6930:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2057,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2056,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "6930:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "6930:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6920:29:9"
                  },
                  "returnParameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "isSuperApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "7002:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7002:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2063,
                        "mutability": "mutable",
                        "name": "isJailed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "7031:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2062,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7031:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "noopMask",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "7058:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7058:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6988:96:9"
                  },
                  "scope": 2287,
                  "src": "6897:188:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2068,
                    "nodeType": "StructuredDocumentation",
                    "src": "7091:92:9",
                    "text": " @dev Query if the app has been jailed\n @param app Super app address"
                  },
                  "functionSelector": "6b4f3335",
                  "id": 2076,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAppJailed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2072,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2071,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "7209:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2070,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2069,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "7209:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "7209:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7208:15:9"
                  },
                  "returnParameters": {
                    "id": 2075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2074,
                        "mutability": "mutable",
                        "name": "isJail",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "7247:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2073,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7247:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7246:13:9"
                  },
                  "scope": 2287,
                  "src": "7188:72:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2077,
                    "nodeType": "StructuredDocumentation",
                    "src": "7266:153:9",
                    "text": " @dev White-list the target app for app composition for the source app (msg.sender)\n @param targetApp The taget super app address"
                  },
                  "functionSelector": "57121e0c",
                  "id": 2083,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowCompositeApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2080,
                        "mutability": "mutable",
                        "name": "targetApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2083,
                        "src": "7451:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2079,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2078,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "7451:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "7451:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7450:21:9"
                  },
                  "returnParameters": {
                    "id": 2082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7480:0:9"
                  },
                  "scope": 2287,
                  "src": "7424:57:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2084,
                    "nodeType": "StructuredDocumentation",
                    "src": "7487:185:9",
                    "text": " @dev Query if source app  is allowed to call the target app as downstream app.\n @param app Super app address\n @param targetApp The taget super app address"
                  },
                  "functionSelector": "bb84cfa1",
                  "id": 2095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isCompositeAppAllowed",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2087,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2095,
                        "src": "7717:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2086,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2085,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "7717:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "7717:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2090,
                        "mutability": "mutable",
                        "name": "targetApp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2095,
                        "src": "7740:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2089,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2088,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "7740:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "7740:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7707:58:9"
                  },
                  "returnParameters": {
                    "id": 2094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "isAppAllowed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2095,
                        "src": "7805:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7805:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7804:19:9"
                  },
                  "scope": 2287,
                  "src": "7677:147:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "74041e02",
                  "id": 2109,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppBeforeCallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "8259:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2097,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2096,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "8259:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "8259:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2100,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "8282:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2099,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8282:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "isTermination",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "8315:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2101,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8315:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2104,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "8343:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2103,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8343:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8249:118:9"
                  },
                  "returnParameters": {
                    "id": 2108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2107,
                        "mutability": "mutable",
                        "name": "cbdata",
                        "nodeType": "VariableDeclaration",
                        "scope": 2109,
                        "src": "8454:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2106,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8454:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8453:21:9"
                  },
                  "scope": 2287,
                  "src": "8219:256:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e6d0a84",
                  "id": 2123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppAfterCallback",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2112,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "8520:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2111,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2110,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "8520:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "8520:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2114,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "8543:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2113,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8543:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2116,
                        "mutability": "mutable",
                        "name": "isTermination",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "8576:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2115,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8576:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2118,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "8604:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2117,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8604:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8510:118:9"
                  },
                  "returnParameters": {
                    "id": 2122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2121,
                        "mutability": "mutable",
                        "name": "appCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2123,
                        "src": "8715:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2120,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8715:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8714:21:9"
                  },
                  "scope": 2287,
                  "src": "8481:255:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "768fabb0",
                  "id": 2140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appCallbackPush",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2125,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8776:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2124,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8776:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2128,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8804:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2127,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2126,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "8804:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "8804:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2130,
                        "mutability": "mutable",
                        "name": "appAllowanceGranted",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8827:27:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8827:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2132,
                        "mutability": "mutable",
                        "name": "appAllowanceUsed",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8864:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2131,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8864:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2135,
                        "mutability": "mutable",
                        "name": "appAllowanceToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8897:34:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2133,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "8897:16:9"
                          },
                          "referencedDeclaration": 2658,
                          "src": "8897:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8766:171:9"
                  },
                  "returnParameters": {
                    "id": 2139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "appCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2140,
                        "src": "8997:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2137,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8997:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8996:21:9"
                  },
                  "scope": 2287,
                  "src": "8742:276:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "989b0c3e",
                  "id": 2149,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "appCallbackPop",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2142,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2149,
                        "src": "9057:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2141,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9057:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2144,
                        "mutability": "mutable",
                        "name": "appAllowanceUsedDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2149,
                        "src": "9085:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2143,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9085:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9047:72:9"
                  },
                  "returnParameters": {
                    "id": 2148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2147,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2149,
                        "src": "9179:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2146,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9179:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9178:21:9"
                  },
                  "scope": 2287,
                  "src": "9024:176:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0792f20a",
                  "id": 2160,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ctxUseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2151,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "9240:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2150,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9240:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2153,
                        "mutability": "mutable",
                        "name": "appAllowanceWantedMore",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "9268:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9268:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2155,
                        "mutability": "mutable",
                        "name": "appAllowanceUsedDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "9308:28:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2154,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9308:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9230:112:9"
                  },
                  "returnParameters": {
                    "id": 2159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2158,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2160,
                        "src": "9402:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2157,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9402:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9401:21:9"
                  },
                  "scope": 2287,
                  "src": "9206:217:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b724211e",
                  "id": 2172,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "jailApp",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2162,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "9455:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2161,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9455:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2165,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "9483:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2164,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2163,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "9483:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "9483:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2167,
                        "mutability": "mutable",
                        "name": "reason",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "9506:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9506:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9445:81:9"
                  },
                  "returnParameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2172,
                        "src": "9586:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9586:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9585:21:9"
                  },
                  "scope": 2287,
                  "src": "9429:178:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2173,
                    "nodeType": "StructuredDocumentation",
                    "src": "10168:197:9",
                    "text": " @dev Call agreement function\n @param callData The contextual call data with placeholder ctx\n @param userData Extra user data being sent to the super app callbacks"
                  },
                  "functionSelector": "39255d5b",
                  "id": 2185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "10404:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2175,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2174,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "10404:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "10404:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2178,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "10445:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2177,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10445:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2180,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "10479:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2179,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10479:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10393:116:9"
                  },
                  "returnParameters": {
                    "id": 2184,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2183,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2185,
                        "src": "10562:25:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2182,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10562:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10561:27:9"
                  },
                  "scope": 2287,
                  "src": "10371:218:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2186,
                    "nodeType": "StructuredDocumentation",
                    "src": "10595:154:9",
                    "text": " @dev Call app action\n @param callData The contextual call data.\n NOTE: See callAgreement about contextual call data."
                  },
                  "functionSelector": "1e855cf3",
                  "id": 2196,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppAction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2192,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2189,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "10786:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2188,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2187,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "10786:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "10786:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2191,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "10809:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2190,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10809:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10776:62:9"
                  },
                  "returnParameters": {
                    "id": 2195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2194,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2196,
                        "src": "10918:25:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2193,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "10918:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10917:27:9"
                  },
                  "scope": 2287,
                  "src": "10754:191:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluid.Context",
                  "id": 2220,
                  "members": [
                    {
                      "constant": false,
                      "id": 2198,
                      "mutability": "mutable",
                      "name": "appLevel",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12090:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2197,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12090:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2200,
                      "mutability": "mutable",
                      "name": "callType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12138:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2199,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "12138:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2202,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12195:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12195:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2204,
                      "mutability": "mutable",
                      "name": "msgSender",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12274:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12274:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2206,
                      "mutability": "mutable",
                      "name": "agreementSelector",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12440:24:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 2205,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "12440:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2208,
                      "mutability": "mutable",
                      "name": "userData",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12522:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2207,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12522:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2210,
                      "mutability": "mutable",
                      "name": "appAllowanceGranted",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12625:27:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12625:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2212,
                      "mutability": "mutable",
                      "name": "appAllowanceWanted",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12714:26:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12714:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "appAllowanceUsed",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12830:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2213,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12830:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2216,
                      "mutability": "mutable",
                      "name": "appAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12886:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2215,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12886:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2219,
                      "mutability": "mutable",
                      "name": "appAllowanceToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2220,
                      "src": "12954:34:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                        "typeString": "contract ISuperfluidToken"
                      },
                      "typeName": {
                        "id": 2218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2217,
                          "name": "ISuperfluidToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2658,
                          "src": "12954:16:9"
                        },
                        "referencedDeclaration": 2658,
                        "src": "12954:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Context",
                  "nodeType": "StructDefinition",
                  "scope": 2287,
                  "src": "11993:1002:9",
                  "visibility": "public"
                },
                {
                  "functionSelector": "4329d293",
                  "id": 2236,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAgreementWithContext",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2223,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13044:30:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                          "typeString": "contract ISuperAgreement"
                        },
                        "typeName": {
                          "id": 2222,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2221,
                            "name": "ISuperAgreement",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1276,
                            "src": "13044:15:9"
                          },
                          "referencedDeclaration": 1276,
                          "src": "13044:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                            "typeString": "contract ISuperAgreement"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2225,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13084:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2224,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13084:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2227,
                        "mutability": "mutable",
                        "name": "userData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13117:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2226,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13117:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13150:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13150:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13034:140:9"
                  },
                  "returnParameters": {
                    "id": 2235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2232,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13275:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2231,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13275:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2234,
                        "mutability": "mutable",
                        "name": "returnedData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2236,
                        "src": "13296:25:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2233,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13296:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13274:48:9"
                  },
                  "scope": 2287,
                  "src": "13001:322:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ba48b5f8",
                  "id": 2248,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callAppActionWithContext",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2239,
                        "mutability": "mutable",
                        "name": "app",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "13372:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperApp_$1390",
                          "typeString": "contract ISuperApp"
                        },
                        "typeName": {
                          "id": 2238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2237,
                            "name": "ISuperApp",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1390,
                            "src": "13372:9:9"
                          },
                          "referencedDeclaration": 1390,
                          "src": "13372:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperApp_$1390",
                            "typeString": "contract ISuperApp"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "mutability": "mutable",
                        "name": "callData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "13395:23:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13395:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2243,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "13428:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2242,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13428:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13362:90:9"
                  },
                  "returnParameters": {
                    "id": 2247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2246,
                        "mutability": "mutable",
                        "name": "newCtx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "13540:19:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2245,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13540:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13539:21:9"
                  },
                  "scope": 2287,
                  "src": "13329:232:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3f6c923a",
                  "id": 2256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decodeCtx",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2250,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "13586:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2249,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13586:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13585:20:9"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "context",
                        "nodeType": "VariableDeclaration",
                        "scope": 2256,
                        "src": "13645:22:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Context_$2220_memory_ptr",
                          "typeString": "struct ISuperfluid.Context"
                        },
                        "typeName": {
                          "id": 2253,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2252,
                            "name": "Context",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2220,
                            "src": "13645:7:9"
                          },
                          "referencedDeclaration": 2220,
                          "src": "13645:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Context_$2220_storage_ptr",
                            "typeString": "struct ISuperfluid.Context"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13644:24:9"
                  },
                  "scope": 2287,
                  "src": "13567:102:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bf428734",
                  "id": 2263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isCtxValid",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2258,
                        "mutability": "mutable",
                        "name": "ctx",
                        "nodeType": "VariableDeclaration",
                        "scope": 2263,
                        "src": "13695:18:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2257,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13695:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13694:20:9"
                  },
                  "returnParameters": {
                    "id": 2262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2261,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2263,
                        "src": "13738:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2260,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13738:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13737:6:9"
                  },
                  "scope": 2287,
                  "src": "13675:69:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluid.Operation",
                  "id": 2270,
                  "members": [
                    {
                      "constant": false,
                      "id": 2265,
                      "mutability": "mutable",
                      "name": "operationType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "14069:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2264,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14069:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "14127:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14127:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2269,
                      "mutability": "mutable",
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 2270,
                      "src": "14193:10:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2268,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14193:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Operation",
                  "nodeType": "StructDefinition",
                  "scope": 2287,
                  "src": "13976:234:9",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2271,
                    "nodeType": "StructuredDocumentation",
                    "src": "14216:95:9",
                    "text": " @dev Batch call function\n @param operations Array of batch operations."
                  },
                  "functionSelector": "6ad3ca7d",
                  "id": 2278,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2275,
                        "mutability": "mutable",
                        "name": "operations",
                        "nodeType": "VariableDeclaration",
                        "scope": 2278,
                        "src": "14335:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operation_$2270_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ISuperfluid.Operation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2273,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2272,
                              "name": "Operation",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2270,
                              "src": "14335:9:9"
                            },
                            "referencedDeclaration": 2270,
                            "src": "14335:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operation_$2270_storage_ptr",
                              "typeString": "struct ISuperfluid.Operation"
                            }
                          },
                          "id": 2274,
                          "nodeType": "ArrayTypeName",
                          "src": "14335:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Operation_$2270_storage_$dyn_storage_ptr",
                            "typeString": "struct ISuperfluid.Operation[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14334:31:9"
                  },
                  "returnParameters": {
                    "id": 2277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14374:0:9"
                  },
                  "scope": 2287,
                  "src": "14316:59:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2279,
                    "nodeType": "StructuredDocumentation",
                    "src": "14381:129:9",
                    "text": " @dev Batch call function for trusted forwarders (EIP-2771)\n @param operations Array of batch operations."
                  },
                  "functionSelector": "670e77e3",
                  "id": 2286,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forwardBatchCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2283,
                        "mutability": "mutable",
                        "name": "operations",
                        "nodeType": "VariableDeclaration",
                        "scope": 2286,
                        "src": "14541:29:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Operation_$2270_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ISuperfluid.Operation[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2281,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2280,
                              "name": "Operation",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2270,
                              "src": "14541:9:9"
                            },
                            "referencedDeclaration": 2270,
                            "src": "14541:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Operation_$2270_storage_ptr",
                              "typeString": "struct ISuperfluid.Operation"
                            }
                          },
                          "id": 2282,
                          "nodeType": "ArrayTypeName",
                          "src": "14541:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Operation_$2270_storage_$dyn_storage_ptr",
                            "typeString": "struct ISuperfluid.Operation[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14540:31:9"
                  },
                  "returnParameters": {
                    "id": 2285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14580:0:9"
                  },
                  "scope": 2287,
                  "src": "14515:66:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2288,
              "src": "1187:14397:9"
            }
          ],
          "src": "35:15550:9"
        },
        "id": 9
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1276
            ],
            "ISuperToken": [
              1744
            ],
            "ISuperfluid": [
              2287
            ],
            "ISuperfluidGovernance": [
              2370
            ],
            "ISuperfluidToken": [
              2658
            ]
          },
          "id": 2371,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2289,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:10"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 2291,
              "nodeType": "ImportDirective",
              "scope": 2371,
              "sourceUnit": 1277,
              "src": "62:56:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2290,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
              "file": "./ISuperToken.sol",
              "id": 2293,
              "nodeType": "ImportDirective",
              "scope": 2371,
              "sourceUnit": 1745,
              "src": "119:48:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2292,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "128:11:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
              "file": "./ISuperfluidToken.sol",
              "id": 2295,
              "nodeType": "ImportDirective",
              "scope": 2371,
              "sourceUnit": 2659,
              "src": "168:59:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2294,
                    "name": "ISuperfluidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "177:16:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "./ISuperfluid.sol",
              "id": 2297,
              "nodeType": "ImportDirective",
              "scope": 2371,
              "sourceUnit": 2288,
              "src": "228:48:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2296,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "237:11:10",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2298,
                "nodeType": "StructuredDocumentation",
                "src": "279:74:10",
                "text": " @dev Superfluid's Governance interface\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2370,
              "linearizedBaseContracts": [
                2370
              ],
              "name": "ISuperfluidGovernance",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2299,
                    "nodeType": "StructuredDocumentation",
                    "src": "393:76:10",
                    "text": " @dev Replace the current governance with a new governance"
                  },
                  "functionSelector": "44864b25",
                  "id": 2307,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "replaceGovernance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2302,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2307,
                        "src": "510:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2301,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2300,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "510:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "510:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2304,
                        "mutability": "mutable",
                        "name": "newGov",
                        "nodeType": "VariableDeclaration",
                        "scope": 2307,
                        "src": "536:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "536:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:51:10"
                  },
                  "returnParameters": {
                    "id": 2306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "560:0:10"
                  },
                  "scope": 2370,
                  "src": "474:87:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2308,
                    "nodeType": "StructuredDocumentation",
                    "src": "567:54:10",
                    "text": " @dev Register a new agreement class"
                  },
                  "functionSelector": "cadf8f85",
                  "id": 2316,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAgreementClass",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2311,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2316,
                        "src": "667:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2310,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2309,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "667:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "667:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2313,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2316,
                        "src": "693:22:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "657:59:10"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "725:0:10"
                  },
                  "scope": 2370,
                  "src": "626:100:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2317,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:185:10",
                    "text": " @dev Update logics of the contracts\n NOTE:\n - Because they might have inter-dependencies, it is good to have one single function to update them all"
                  },
                  "functionSelector": "427942a4",
                  "id": 2330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateContracts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2320,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "956:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2319,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2318,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "956:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "956:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2322,
                        "mutability": "mutable",
                        "name": "hostNewLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "982:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "982:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2325,
                        "mutability": "mutable",
                        "name": "agreementClassNewLogics",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "1012:42:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2323,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1012:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2324,
                          "nodeType": "ArrayTypeName",
                          "src": "1012:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2327,
                        "mutability": "mutable",
                        "name": "superTokenFactoryNewLogic",
                        "nodeType": "VariableDeclaration",
                        "scope": 2330,
                        "src": "1064:33:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1064:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "946:157:10"
                  },
                  "returnParameters": {
                    "id": 2329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1112:0:10"
                  },
                  "scope": 2370,
                  "src": "922:191:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2331,
                    "nodeType": "StructuredDocumentation",
                    "src": "1119:113:10",
                    "text": " @dev Update supertoken logic contract to the latest that is managed by the super token factory"
                  },
                  "functionSelector": "42148deb",
                  "id": 2341,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "batchUpdateSuperTokenLogic",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2334,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2341,
                        "src": "1282:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2333,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2332,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "1282:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "1282:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2338,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 2341,
                        "src": "1308:29:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperToken_$1744_$dyn_calldata_ptr",
                          "typeString": "contract ISuperToken[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2336,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2335,
                              "name": "ISuperToken",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1744,
                              "src": "1308:11:10"
                            },
                            "referencedDeclaration": 1744,
                            "src": "1308:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1744",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 2337,
                          "nodeType": "ArrayTypeName",
                          "src": "1308:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperToken_$1744_$dyn_storage_ptr",
                            "typeString": "contract ISuperToken[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:66:10"
                  },
                  "returnParameters": {
                    "id": 2340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1347:0:10"
                  },
                  "scope": 2370,
                  "src": "1237:111:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2342,
                    "nodeType": "StructuredDocumentation",
                    "src": "1354:43:10",
                    "text": "@dev Get configuration as address value"
                  },
                  "functionSelector": "8369a0f1",
                  "id": 2355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfigAsAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2345,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1439:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2343,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "1439:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "1439:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1465:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2347,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2346,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1465:16:10"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1465:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2350,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1502:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2349,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1502:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1429:85:10"
                  },
                  "returnParameters": {
                    "id": 2354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2353,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1538:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1538:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1537:15:10"
                  },
                  "scope": 2370,
                  "src": "1402:151:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2356,
                    "nodeType": "StructuredDocumentation",
                    "src": "1559:43:10",
                    "text": "@dev Get configuration as uint256 value"
                  },
                  "functionSelector": "80f70cba",
                  "id": 2369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConfigAsUint256",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2359,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2369,
                        "src": "1644:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2358,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2357,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "1644:11:10"
                          },
                          "referencedDeclaration": 2287,
                          "src": "1644:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2362,
                        "mutability": "mutable",
                        "name": "superToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 2369,
                        "src": "1670:27:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                          "typeString": "contract ISuperfluidToken"
                        },
                        "typeName": {
                          "id": 2361,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2360,
                            "name": "ISuperfluidToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2658,
                            "src": "1670:16:10"
                          },
                          "referencedDeclaration": 2658,
                          "src": "1670:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluidToken_$2658",
                            "typeString": "contract ISuperfluidToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2364,
                        "mutability": "mutable",
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 2369,
                        "src": "1707:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1634:85:10"
                  },
                  "returnParameters": {
                    "id": 2368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2367,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 2369,
                        "src": "1743:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1743:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1742:15:10"
                  },
                  "scope": 2370,
                  "src": "1607:151:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2371,
              "src": "354:1407:10"
            }
          ],
          "src": "35:1727:10"
        },
        "id": 10
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
          "exportedSymbols": {
            "ISuperAgreement": [
              1276
            ],
            "ISuperfluidToken": [
              2658
            ]
          },
          "id": 2659,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2372,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:11"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
              "file": "./ISuperAgreement.sol",
              "id": 2374,
              "nodeType": "ImportDirective",
              "scope": 2659,
              "sourceUnit": 1277,
              "src": "62:56:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2373,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:15:11",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2375,
                "nodeType": "StructuredDocumentation",
                "src": "121:72:11",
                "text": " @title Superfluid's token interface.\n @author Superfluid"
              },
              "fullyImplemented": false,
              "id": 2658,
              "linearizedBaseContracts": [
                2658
              ],
              "name": "ISuperfluidToken",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2376,
                    "nodeType": "StructuredDocumentation",
                    "src": "414:60:11",
                    "text": " @dev Get superfluid host contract address"
                  },
                  "functionSelector": "20bc4425",
                  "id": 2381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHost",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "495:2:11"
                  },
                  "returnParameters": {
                    "id": 2380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2379,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2381,
                        "src": "520:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "519:14:11"
                  },
                  "scope": 2658,
                  "src": "479:55:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "canonicalName": "ISuperfluidToken.LiquidationTypeData",
                  "id": 2386,
                  "members": [
                    {
                      "constant": false,
                      "id": 2383,
                      "mutability": "mutable",
                      "name": "version",
                      "nodeType": "VariableDeclaration",
                      "scope": 2386,
                      "src": "953:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "953:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2385,
                      "mutability": "mutable",
                      "name": "liquidationType",
                      "nodeType": "VariableDeclaration",
                      "scope": 2386,
                      "src": "978:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2384,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "978:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "LiquidationTypeData",
                  "nodeType": "StructDefinition",
                  "scope": 2658,
                  "src": "916:90:11",
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 2387,
                    "nodeType": "StructuredDocumentation",
                    "src": "1208:321:11",
                    "text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
                  },
                  "functionSelector": "eb3537cc",
                  "id": 2400,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2389,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "1569:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2388,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2391,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "1593:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1560:56:11"
                  },
                  "returnParameters": {
                    "id": 2399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2394,
                        "mutability": "mutable",
                        "name": "availableBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "1669:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2393,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1669:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2396,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "1706:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1706:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2398,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2400,
                        "src": "1735:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1735:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1655:100:11"
                  },
                  "scope": 2658,
                  "src": "1534:222:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1762:67:11",
                    "text": "@dev realtimeBalanceOf with timestamp equals to block timestamp"
                  },
                  "functionSelector": "2ec8eec7",
                  "id": 2414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "realtimeBalanceOfNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2403,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "1872:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1872:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:30:11"
                  },
                  "returnParameters": {
                    "id": 2413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2406,
                        "mutability": "mutable",
                        "name": "availableBalance",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "1946:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2405,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2408,
                        "mutability": "mutable",
                        "name": "deposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "1983:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1983:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2410,
                        "mutability": "mutable",
                        "name": "owedDeposit",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "2012:19:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2412,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "2045:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2045:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1932:131:11"
                  },
                  "scope": 2658,
                  "src": "1834:230:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2415,
                    "nodeType": "StructuredDocumentation",
                    "src": "2070:185:11",
                    "text": " @dev Check if one account is critical\n @param account Account check if is critical by a future time\n @param timestamp Time of balance\n @return isCritical"
                  },
                  "functionSelector": "d9d078d6",
                  "id": 2424,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountCritical",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2420,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2424,
                        "src": "2296:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2296:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2419,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2424,
                        "src": "2321:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2321:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2286:58:11"
                  },
                  "returnParameters": {
                    "id": 2423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2422,
                        "mutability": "mutable",
                        "name": "isCritical",
                        "nodeType": "VariableDeclaration",
                        "scope": 2424,
                        "src": "2383:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2421,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2382:17:11"
                  },
                  "scope": 2658,
                  "src": "2260:140:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2425,
                    "nodeType": "StructuredDocumentation",
                    "src": "2406:150:11",
                    "text": " @dev Check if one account is critical now\n @param account Account check if is critical by a future time\n @return isCritical"
                  },
                  "functionSelector": "79359f6f",
                  "id": 2432,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountCriticalNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2427,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2432,
                        "src": "2600:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2600:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2590:31:11"
                  },
                  "returnParameters": {
                    "id": 2431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2430,
                        "mutability": "mutable",
                        "name": "isCritical",
                        "nodeType": "VariableDeclaration",
                        "scope": 2432,
                        "src": "2660:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2429,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:17:11"
                  },
                  "scope": 2658,
                  "src": "2561:116:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2433,
                    "nodeType": "StructuredDocumentation",
                    "src": "2683:187:11",
                    "text": " @dev Check if one account is solvent\n @param account Account check if is solvent by a future time\n @param timestamp Time of balance\n @return isSolvent"
                  },
                  "functionSelector": "b84cdd4a",
                  "id": 2442,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountSolvent",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2435,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2442,
                        "src": "2910:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2910:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2437,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nodeType": "VariableDeclaration",
                        "scope": 2442,
                        "src": "2935:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2436,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2935:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2900:58:11"
                  },
                  "returnParameters": {
                    "id": 2441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2440,
                        "mutability": "mutable",
                        "name": "isSolvent",
                        "nodeType": "VariableDeclaration",
                        "scope": 2442,
                        "src": "2997:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2439,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2997:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2996:16:11"
                  },
                  "scope": 2658,
                  "src": "2875:138:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2443,
                    "nodeType": "StructuredDocumentation",
                    "src": "3019:138:11",
                    "text": " @dev Check if one account is solvent now\n @param account Account check if is solvent now\n @return isSolvent"
                  },
                  "functionSelector": "bb0d196e",
                  "id": 2450,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAccountSolventNow",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2450,
                        "src": "3200:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3200:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3190:31:11"
                  },
                  "returnParameters": {
                    "id": 2449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2448,
                        "mutability": "mutable",
                        "name": "isSolvent",
                        "nodeType": "VariableDeclaration",
                        "scope": 2450,
                        "src": "3260:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2447,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3260:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3259:16:11"
                  },
                  "scope": 2658,
                  "src": "3162:114:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3282:274:11",
                    "text": " @dev Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
                  },
                  "functionSelector": "386fa221",
                  "id": 2460,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAccountActiveAgreements",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2453,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2460,
                        "src": "3597:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3596:17:11"
                  },
                  "returnParameters": {
                    "id": 2459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2458,
                        "mutability": "mutable",
                        "name": "activeAgreements",
                        "nodeType": "VariableDeclaration",
                        "scope": 2460,
                        "src": "3650:41:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1276_$dyn_memory_ptr",
                          "typeString": "contract ISuperAgreement[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2456,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2455,
                              "name": "ISuperAgreement",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1276,
                              "src": "3650:15:11"
                            },
                            "referencedDeclaration": 1276,
                            "src": "3650:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                              "typeString": "contract ISuperAgreement"
                            }
                          },
                          "id": 2457,
                          "nodeType": "ArrayTypeName",
                          "src": "3650:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$1276_$dyn_storage_ptr",
                            "typeString": "contract ISuperAgreement[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3649:43:11"
                  },
                  "scope": 2658,
                  "src": "3561:132:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2461,
                    "nodeType": "StructuredDocumentation",
                    "src": "3899:110:11",
                    "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "functionSelector": "12a6a3f8",
                  "id": 2469,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2463,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2469,
                        "src": "4048:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2462,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4048:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2466,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2469,
                        "src": "4068:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2464,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4068:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2465,
                          "nodeType": "ArrayTypeName",
                          "src": "4068:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4038:59:11"
                  },
                  "returnParameters": {
                    "id": 2468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4114:0:11"
                  },
                  "scope": 2658,
                  "src": "4014:101:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4121:175:11",
                    "text": " @dev Agreement creation event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "id": 2479,
                  "name": "AgreementCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2472,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2479,
                        "src": "4333:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4333:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2474,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2479,
                        "src": "4373:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2473,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4373:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2477,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2479,
                        "src": "4393:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2475,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4393:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2476,
                          "nodeType": "ArrayTypeName",
                          "src": "4393:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4323:90:11"
                  },
                  "src": "4301:113:11"
                },
                {
                  "documentation": {
                    "id": 2480,
                    "nodeType": "StructuredDocumentation",
                    "src": "4420:184:11",
                    "text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
                  },
                  "functionSelector": "6c2d9f2f",
                  "id": 2492,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2482,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2492,
                        "src": "4644:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2484,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2492,
                        "src": "4676:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2483,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2486,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2492,
                        "src": "4696:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2485,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4696:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4634:83:11"
                  },
                  "returnParameters": {
                    "id": 2491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2490,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2492,
                        "src": "4756:21:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2488,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4756:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2489,
                          "nodeType": "ArrayTypeName",
                          "src": "4756:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4755:23:11"
                  },
                  "scope": 2658,
                  "src": "4609:170:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2493,
                    "nodeType": "StructuredDocumentation",
                    "src": "4785:110:11",
                    "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "functionSelector": "a1b2bf8b",
                  "id": 2501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2495,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2501,
                        "src": "4938:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2494,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4938:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2498,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2501,
                        "src": "4958:23:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2496,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4958:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2497,
                          "nodeType": "ArrayTypeName",
                          "src": "4958:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4928:59:11"
                  },
                  "returnParameters": {
                    "id": 2500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5004:0:11"
                  },
                  "scope": 2658,
                  "src": "4900:105:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2502,
                    "nodeType": "StructuredDocumentation",
                    "src": "5011:175:11",
                    "text": " @dev Agreement creation event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
                  },
                  "id": 2511,
                  "name": "AgreementUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2504,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "5223:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5223:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2506,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "5263:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2505,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5263:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2509,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "5283:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2507,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5283:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2508,
                          "nodeType": "ArrayTypeName",
                          "src": "5283:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5213:90:11"
                  },
                  "src": "5191:113:11"
                },
                {
                  "documentation": {
                    "id": 2512,
                    "nodeType": "StructuredDocumentation",
                    "src": "5310:73:11",
                    "text": " @dev Close the agreement\n @param id Agreement ID"
                  },
                  "functionSelector": "27048397",
                  "id": 2519,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "terminateAgreement",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2514,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2519,
                        "src": "5425:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2513,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5425:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2516,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2519,
                        "src": "5445:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2515,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5445:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5415:51:11"
                  },
                  "returnParameters": {
                    "id": 2518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5483:0:11"
                  },
                  "scope": 2658,
                  "src": "5388:96:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2520,
                    "nodeType": "StructuredDocumentation",
                    "src": "5490:144:11",
                    "text": " @dev Agreement termination event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
                  },
                  "id": 2526,
                  "name": "AgreementTerminated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2522,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "5674:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5674:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2524,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2526,
                        "src": "5714:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2523,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5714:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5664:66:11"
                  },
                  "src": "5639:92:11"
                },
                {
                  "documentation": {
                    "id": 2527,
                    "nodeType": "StructuredDocumentation",
                    "src": "5737:190:11",
                    "text": " @dev Update agreement state slot\n @param account Account to be updated\n NOTE\n - To clear the storage out, provide zero-ed array of intended length"
                  },
                  "functionSelector": "090c415e",
                  "id": 2537,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateAgreementStateSlot",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2535,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2529,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2537,
                        "src": "5975:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2528,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5975:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2531,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2537,
                        "src": "6000:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6000:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2534,
                        "mutability": "mutable",
                        "name": "slotData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2537,
                        "src": "6024:27:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2532,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6024:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2533,
                          "nodeType": "ArrayTypeName",
                          "src": "6024:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5965:92:11"
                  },
                  "returnParameters": {
                    "id": 2536,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6074:0:11"
                  },
                  "scope": 2658,
                  "src": "5932:143:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2538,
                    "nodeType": "StructuredDocumentation",
                    "src": "6081:214:11",
                    "text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
                  },
                  "id": 2546,
                  "name": "AgreementStateUpdated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2540,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "6337:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6337:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2542,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "6377:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6377:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2544,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "6410:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2543,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6410:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6327:103:11"
                  },
                  "src": "6300:131:11"
                },
                {
                  "documentation": {
                    "id": 2547,
                    "nodeType": "StructuredDocumentation",
                    "src": "6437:266:11",
                    "text": " @dev Get data of the slot of the state of a agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
                  },
                  "functionSelector": "4b61cc33",
                  "id": 2561,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAgreementStateSlot",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2549,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2561,
                        "src": "6748:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2548,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6748:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2551,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2561,
                        "src": "6780:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6780:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2553,
                        "mutability": "mutable",
                        "name": "slotId",
                        "nodeType": "VariableDeclaration",
                        "scope": 2561,
                        "src": "6805:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6805:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2555,
                        "mutability": "mutable",
                        "name": "dataLength",
                        "nodeType": "VariableDeclaration",
                        "scope": 2561,
                        "src": "6829:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2554,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6829:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6738:112:11"
                  },
                  "returnParameters": {
                    "id": 2560,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2559,
                        "mutability": "mutable",
                        "name": "slotData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2561,
                        "src": "6890:25:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2557,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6890:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 2558,
                          "nodeType": "ArrayTypeName",
                          "src": "6890:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6889:27:11"
                  },
                  "scope": 2658,
                  "src": "6708:209:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2562,
                    "nodeType": "StructuredDocumentation",
                    "src": "6923:310:11",
                    "text": " @dev Settle balance from an account by the agreement.\n      The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "cf97256d",
                  "id": 2569,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2564,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 2569,
                        "src": "7270:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7270:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2566,
                        "mutability": "mutable",
                        "name": "delta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2569,
                        "src": "7295:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2565,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7295:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7260:53:11"
                  },
                  "returnParameters": {
                    "id": 2568,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7330:0:11"
                  },
                  "scope": 2658,
                  "src": "7238:93:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2570,
                    "nodeType": "StructuredDocumentation",
                    "src": "7337:368:11",
                    "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward"
                  },
                  "id": 2582,
                  "name": "AgreementLiquidated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2572,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "7745:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7745:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2574,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "7785:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2573,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7785:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2576,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "7805:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7805:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2578,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "7845:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2577,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7845:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2580,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2582,
                        "src": "7884:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2579,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7884:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7735:175:11"
                  },
                  "src": "7710:201:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2583,
                    "nodeType": "StructuredDocumentation",
                    "src": "7917:210:11",
                    "text": " @dev System bailout occurred (DEPRECATIED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout"
                  },
                  "id": 2589,
                  "name": "Bailout",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2585,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bailoutAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2589,
                        "src": "8155:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8155:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2587,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2589,
                        "src": "8195:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8195:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8145:77:11"
                  },
                  "src": "8132:91:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2590,
                    "nodeType": "StructuredDocumentation",
                    "src": "8229:995:11",
                    "text": " @dev Agreement liquidation event (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n NOTE:\n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
                  },
                  "id": 2606,
                  "name": "AgreementLiquidatedBy",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2592,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9266:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9266:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2594,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9301:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2593,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9301:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2596,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9341:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2595,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9341:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2598,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9361:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9361:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2600,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "bondAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9401:27:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9401:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2602,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9438:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9438:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2604,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2606,
                        "src": "9468:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2603,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9468:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9256:239:11"
                  },
                  "src": "9229:267:11"
                },
                {
                  "documentation": {
                    "id": 2607,
                    "nodeType": "StructuredDocumentation",
                    "src": "9502:667:11",
                    "text": " @dev Make liquidation payouts\n @param id Agreement ID\n @param liquidator Address of the executer of liquidation\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of account bailout needed\n NOTE:\n Liquidation rules:\n  - If a bailout is required (bailoutAmount > 0)\n     - the actual reward goes to the liquidator,\n     - while the reward account becomes the bailout account\n     - total bailout include: bailout amount + reward amount\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "8ddd1c0f",
                  "id": 2620,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeLiquidationPayouts",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2618,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2609,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "10220:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2608,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10220:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2611,
                        "mutability": "mutable",
                        "name": "liquidator",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "10240:18:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10240:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2613,
                        "mutability": "mutable",
                        "name": "penaltyAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "10268:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10268:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2615,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "10300:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2614,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10300:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2617,
                        "mutability": "mutable",
                        "name": "bailoutAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2620,
                        "src": "10330:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2616,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10330:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10210:147:11"
                  },
                  "returnParameters": {
                    "id": 2619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10374:0:11"
                  },
                  "scope": 2658,
                  "src": "10174:201:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2621,
                    "nodeType": "StructuredDocumentation",
                    "src": "10381:1465:11",
                    "text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAccount Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n NOTE:\n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
                  },
                  "id": 2639,
                  "name": "AgreementLiquidatedV2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2623,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "agreementClass",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "11888:30:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11888:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2625,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "11928:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2624,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11928:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2627,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "11948:33:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11948:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2629,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "targetAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "11991:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11991:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2631,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "12030:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12030:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "12061:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12061:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2635,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "targetAccountBalanceDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "12091:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2634,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12091:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2637,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "liquidationTypeData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2639,
                        "src": "12133:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2636,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "12133:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11878:286:11"
                  },
                  "src": "11851:314:11"
                },
                {
                  "documentation": {
                    "id": 2640,
                    "nodeType": "StructuredDocumentation",
                    "src": "12171:1131:11",
                    "text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account of the stream sender\n @param rewardAmount The amount the reward recepient account will receive\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n Modifiers:\n  - onlyAgreement"
                  },
                  "functionSelector": "1863e809",
                  "id": 2657,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "makeLiquidationPayoutsV2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2642,
                        "mutability": "mutable",
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13355:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2641,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13355:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2644,
                        "mutability": "mutable",
                        "name": "liquidationTypeData",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13375:32:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2643,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13375:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2646,
                        "mutability": "mutable",
                        "name": "liquidatorAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13417:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13417:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2648,
                        "mutability": "mutable",
                        "name": "useDefaultRewardAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13452:28:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2647,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13452:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2650,
                        "mutability": "mutable",
                        "name": "targetAccount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13490:21:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13490:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2652,
                        "mutability": "mutable",
                        "name": "rewardAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13521:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2651,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13521:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2654,
                        "mutability": "mutable",
                        "name": "targetAccountBalanceDelta",
                        "nodeType": "VariableDeclaration",
                        "scope": 2657,
                        "src": "13551:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "typeName": {
                          "id": 2653,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13551:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13345:244:11"
                  },
                  "returnParameters": {
                    "id": 2656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13598:0:11"
                  },
                  "scope": 2658,
                  "src": "13307:292:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2659,
              "src": "194:14035:11"
            }
          ],
          "src": "35:14195:11"
        },
        "id": 11
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
          "exportedSymbols": {
            "ERC20WithTokenInfo": [
              2670
            ],
            "IERC20": [
              77
            ],
            "TokenInfo": [
              2692
            ]
          },
          "id": 2671,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2660,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2662,
              "nodeType": "ImportDirective",
              "scope": 2671,
              "sourceUnit": 78,
              "src": "62:72:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2661,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "71:6:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
              "file": "./TokenInfo.sol",
              "id": 2664,
              "nodeType": "ImportDirective",
              "scope": 2671,
              "sourceUnit": 2693,
              "src": "135:44:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2663,
                    "name": "TokenInfo",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "144:9:12",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2666,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 77,
                    "src": "513:6:12"
                  },
                  "id": 2667,
                  "nodeType": "InheritanceSpecifier",
                  "src": "513:6:12"
                },
                {
                  "baseName": {
                    "id": 2668,
                    "name": "TokenInfo",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2692,
                    "src": "521:9:12"
                  },
                  "id": 2669,
                  "nodeType": "InheritanceSpecifier",
                  "src": "521:9:12"
                }
              ],
              "contractDependencies": [
                77,
                2692
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 2665,
                "nodeType": "StructuredDocumentation",
                "src": "182:245:12",
                "text": " @dev Interface for ERC20 token with token info\n NOTE: Using abstract contract instead of interfaces because old solidity\n does not support interface inheriting other interfaces\n solhint-disable-next-line no-empty-blocks"
              },
              "fullyImplemented": false,
              "id": 2670,
              "linearizedBaseContracts": [
                2670,
                2692,
                77
              ],
              "name": "ERC20WithTokenInfo",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 2671,
              "src": "473:60:12"
            }
          ],
          "src": "35:499:12"
        },
        "id": 12
      },
      "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "ast": {
          "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
          "exportedSymbols": {
            "TokenInfo": [
              2692
            ]
          },
          "id": 2693,
          "license": "AGPLv3",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2672,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:25:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2673,
                "nodeType": "StructuredDocumentation",
                "src": "62:166:13",
                "text": " @dev ERC20 token info interface\n NOTE: ERC20 standard interface does not specify these functions, but\n often the token implementations have them."
              },
              "fullyImplemented": false,
              "id": 2692,
              "linearizedBaseContracts": [
                2692
              ],
              "name": "TokenInfo",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2674,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:54:13",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 2679,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:2:13"
                  },
                  "returnParameters": {
                    "id": 2678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2677,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2679,
                        "src": "353:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2676,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "352:15:13"
                  },
                  "scope": 2692,
                  "src": "314:54:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2680,
                    "nodeType": "StructuredDocumentation",
                    "src": "374:102:13",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 2685,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "496:2:13"
                  },
                  "returnParameters": {
                    "id": 2684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2683,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2685,
                        "src": "522:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2682,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "521:15:13"
                  },
                  "scope": 2692,
                  "src": "481:56:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2686,
                    "nodeType": "StructuredDocumentation",
                    "src": "543:612:13",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 2691,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2687,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1177:2:13"
                  },
                  "returnParameters": {
                    "id": 2690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2689,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 2691,
                        "src": "1203:5:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2688,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1202:7:13"
                  },
                  "scope": 2692,
                  "src": "1160:50:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2693,
              "src": "229:983:13"
            }
          ],
          "src": "35:1178:13"
        },
        "id": 13
      },
      "contracts/Controller.sol": {
        "ast": {
          "absolutePath": "contracts/Controller.sol",
          "exportedSymbols": {
            "Controller": [
              2794
            ],
            "ISuperfluid": [
              2287
            ],
            "Streamer": [
              3261
            ]
          },
          "id": 2795,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2694,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "absolutePath": "contracts/Streamer.sol",
              "file": "./Streamer.sol",
              "id": 2696,
              "nodeType": "ImportDirective",
              "scope": 2795,
              "sourceUnit": 3262,
              "src": "58:42:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2695,
                    "name": "Streamer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "67:8:14",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "id": 2698,
              "nodeType": "ImportDirective",
              "scope": 2795,
              "sourceUnit": 2288,
              "src": "102:117:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2697,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "111:11:14",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                3261
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2794,
              "linearizedBaseContracts": [
                2794
              ],
              "name": "Controller",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "250:13:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2710,
                    "nodeType": "Block",
                    "src": "289:56:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2703,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "307:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "307:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2705,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2700,
                                "src": "321:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "307:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2702,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "299:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "299:28:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2708,
                        "nodeType": "ExpressionStatement",
                        "src": "299:28:14"
                      },
                      {
                        "id": 2709,
                        "nodeType": "PlaceholderStatement",
                        "src": "337:1:14"
                      }
                    ]
                  },
                  "id": 2711,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "289:0:14"
                  },
                  "src": "270:75:14",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2720,
                    "nodeType": "Block",
                    "src": "380:31:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2716,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2700,
                            "src": "390:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2717,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2713,
                            "src": "398:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "390:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2719,
                        "nodeType": "ExpressionStatement",
                        "src": "390:14:14"
                      }
                    ]
                  },
                  "id": 2721,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2714,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2713,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 2721,
                        "src": "364:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2712,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "364:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "363:16:14"
                  },
                  "returnParameters": {
                    "id": 2715,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "380:0:14"
                  },
                  "scope": 2794,
                  "src": "351:60:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2725,
                  "mutability": "mutable",
                  "name": "streamers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2794,
                  "src": "417:20:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_storage",
                    "typeString": "contract Streamer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2723,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2722,
                        "name": "Streamer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3261,
                        "src": "417:8:14"
                      },
                      "referencedDeclaration": 3261,
                      "src": "417:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Streamer_$3261",
                        "typeString": "contract Streamer"
                      }
                    },
                    "id": 2724,
                    "nodeType": "ArrayTypeName",
                    "src": "417:10:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_storage_ptr",
                      "typeString": "contract Streamer[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 2735,
                  "name": "newStream",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2727,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 2735,
                        "src": "460:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2729,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "streamAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 2735,
                        "src": "483:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2728,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "483:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2731,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2735,
                        "src": "506:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "506:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2733,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2735,
                        "src": "521:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:79:14"
                  },
                  "src": "444:95:14"
                },
                {
                  "body": {
                    "id": 2782,
                    "nodeType": "Block",
                    "src": "680:227:14",
                    "statements": [
                      {
                        "assignments": [
                          2753
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2753,
                            "mutability": "mutable",
                            "name": "streamer",
                            "nodeType": "VariableDeclaration",
                            "scope": 2782,
                            "src": "699:17:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Streamer_$3261",
                              "typeString": "contract Streamer"
                            },
                            "typeName": {
                              "id": 2752,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2751,
                                "name": "Streamer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3261,
                                "src": "699:8:14"
                              },
                              "referencedDeclaration": 3261,
                              "src": "699:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3261",
                                "typeString": "contract Streamer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2764,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2757,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2738,
                              "src": "732:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              }
                            },
                            {
                              "id": 2758,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2740,
                              "src": "738:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2759,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2742,
                              "src": "749:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2760,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2700,
                              "src": "757:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2761,
                              "name": "_flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2744,
                              "src": "764:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            {
                              "id": 2762,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2746,
                              "src": "775:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                "typeString": "contract ISuperfluid"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 2756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "719:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$2287_$_t_address_$_t_address_$_t_address_$_t_int96_$_t_string_memory_ptr_$returns$_t_contract$_Streamer_$3261_$",
                              "typeString": "function (contract ISuperfluid,address,address,address,int96,string memory) returns (contract Streamer)"
                            },
                            "typeName": {
                              "id": 2755,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2754,
                                "name": "Streamer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3261,
                                "src": "723:8:14"
                              },
                              "referencedDeclaration": 3261,
                              "src": "723:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3261",
                                "typeString": "contract Streamer"
                              }
                            }
                          },
                          "id": 2763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:62:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Streamer_$3261",
                            "typeString": "contract Streamer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "699:82:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2768,
                              "name": "streamer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2753,
                              "src": "815:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Streamer_$3261",
                                "typeString": "contract Streamer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Streamer_$3261",
                                "typeString": "contract Streamer"
                              }
                            ],
                            "expression": {
                              "id": 2765,
                              "name": "streamers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2725,
                              "src": "800:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_storage",
                                "typeString": "contract Streamer[] storage ref"
                              }
                            },
                            "id": 2767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "800:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Streamer_$3261_$returns$__$",
                              "typeString": "function (contract Streamer)"
                            }
                          },
                          "id": 2769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2770,
                        "nodeType": "ExpressionStatement",
                        "src": "800:24:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2772,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "850:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "850:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2776,
                                  "name": "streamer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2753,
                                  "src": "870:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                ],
                                "id": 2775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "862:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2774,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "862:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "862:17:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2778,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2742,
                              "src": "881:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2779,
                              "name": "_receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2740,
                              "src": "889:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2771,
                            "name": "newStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2735,
                            "src": "840:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address,address)"
                            }
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "840:59:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2781,
                        "nodeType": "EmitStatement",
                        "src": "835:64:14"
                      }
                    ]
                  },
                  "functionSelector": "a32c47c4",
                  "id": 2783,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2749,
                      "modifierName": {
                        "id": 2748,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2711,
                        "src": "670:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "670:9:14"
                    }
                  ],
                  "name": "createNewStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2738,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "570:16:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2737,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2736,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "570:11:14"
                          },
                          "referencedDeclaration": 2287,
                          "src": "570:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2740,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "588:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2742,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "607:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2741,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "607:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2744,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "623:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2743,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "623:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2746,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 2783,
                        "src": "640:21:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2745,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "569:93:14"
                  },
                  "returnParameters": {
                    "id": 2750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "680:0:14"
                  },
                  "scope": 2794,
                  "src": "545:362:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2792,
                    "nodeType": "Block",
                    "src": "992:33:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2790,
                          "name": "streamers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2725,
                          "src": "1009:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_storage",
                            "typeString": "contract Streamer[] storage ref"
                          }
                        },
                        "functionReturnParameters": 2789,
                        "id": 2791,
                        "nodeType": "Return",
                        "src": "1002:16:14"
                      }
                    ]
                  },
                  "functionSelector": "962a4948",
                  "id": 2793,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllStreamers",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2784,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "937:2:14"
                  },
                  "returnParameters": {
                    "id": 2789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2788,
                        "mutability": "mutable",
                        "name": "_streamers",
                        "nodeType": "VariableDeclaration",
                        "scope": 2793,
                        "src": "962:28:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_memory_ptr",
                          "typeString": "contract Streamer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2786,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2785,
                              "name": "Streamer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 3261,
                              "src": "962:8:14"
                            },
                            "referencedDeclaration": 3261,
                            "src": "962:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Streamer_$3261",
                              "typeString": "contract Streamer"
                            }
                          },
                          "id": 2787,
                          "nodeType": "ArrayTypeName",
                          "src": "962:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Streamer_$3261_$dyn_storage_ptr",
                            "typeString": "contract Streamer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "961:30:14"
                  },
                  "scope": 2794,
                  "src": "913:112:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2795,
              "src": "223:805:14"
            }
          ],
          "src": "32:996:14"
        },
        "id": 14
      },
      "contracts/ControllerFactory.sol": {
        "ast": {
          "absolutePath": "contracts/ControllerFactory.sol",
          "exportedSymbols": {
            "Controller": [
              2794
            ],
            "ControllerFactory": [
              2893
            ]
          },
          "id": 2894,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2796,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:15"
            },
            {
              "absolutePath": "contracts/Controller.sol",
              "file": "./Controller.sol",
              "id": 2798,
              "nodeType": "ImportDirective",
              "scope": 2894,
              "sourceUnit": 2795,
              "src": "61:46:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2797,
                    "name": "Controller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "70:10:15",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                2794
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2893,
              "linearizedBaseContracts": [
                2893
              ],
              "name": "ControllerFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "controllers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2893,
                  "src": "153:39:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 2801,
                    "keyType": {
                      "id": 2799,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "161:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "153:27:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 2800,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "172:7:15",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "id": 2808,
                  "name": "newController",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2804,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 2808,
                        "src": "221:21:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2803,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "221:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2806,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "controller",
                        "nodeType": "VariableDeclaration",
                        "scope": 2808,
                        "src": "244:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "244:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "220:43:15"
                  },
                  "src": "201:63:15"
                },
                {
                  "body": {
                    "id": 2853,
                    "nodeType": "Block",
                    "src": "307:286:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2812,
                                  "name": "controllers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2802,
                                  "src": "328:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 2815,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2813,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "340:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "340:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "328:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 2818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "363:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "355:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2816,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "355:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "355:12:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "328:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520616c7265616479206f776e206120636f6e74726f6c6c6572",
                              "id": 2821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "369:30:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb",
                                "typeString": "literal_string \"You already own a controller\""
                              },
                              "value": "You already own a controller"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea87fad8b9e2706e3d91e5b2a9c357a2db9ee5f3fb46cfe5445ce30f3ebea5fb",
                                "typeString": "literal_string \"You already own a controller\""
                              }
                            ],
                            "id": 2811,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "320:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "320:80:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2823,
                        "nodeType": "ExpressionStatement",
                        "src": "320:80:15"
                      },
                      {
                        "assignments": [
                          2826
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2826,
                            "mutability": "mutable",
                            "name": "controller",
                            "nodeType": "VariableDeclaration",
                            "scope": 2853,
                            "src": "413:21:15",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$2794",
                              "typeString": "contract Controller"
                            },
                            "typeName": {
                              "id": 2825,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2824,
                                "name": "Controller",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2794,
                                "src": "413:10:15"
                              },
                              "referencedDeclaration": 2794,
                              "src": "413:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Controller_$2794",
                                "typeString": "contract Controller"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2833,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2830,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "452:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "452:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "437:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Controller_$2794_$",
                              "typeString": "function (address) returns (contract Controller)"
                            },
                            "typeName": {
                              "id": 2828,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2827,
                                "name": "Controller",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2794,
                                "src": "441:10:15"
                              },
                              "referencedDeclaration": 2794,
                              "src": "441:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Controller_$2794",
                                "typeString": "contract Controller"
                              }
                            }
                          },
                          "id": 2832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "437:26:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Controller_$2794",
                            "typeString": "contract Controller"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "413:50:15"
                      },
                      {
                        "expression": {
                          "id": 2842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2834,
                              "name": "controllers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2802,
                              "src": "476:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 2837,
                            "indexExpression": {
                              "expression": {
                                "id": 2835,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "488:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "488:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "476:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2840,
                                "name": "controller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2826,
                                "src": "510:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Controller_$2794",
                                  "typeString": "contract Controller"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Controller_$2794",
                                  "typeString": "contract Controller"
                                }
                              ],
                              "id": 2839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "502:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "502:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "502:19:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "476:45:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2843,
                        "nodeType": "ExpressionStatement",
                        "src": "476:45:15"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2845,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "553:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "553:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2849,
                                  "name": "controller",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2826,
                                  "src": "573:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Controller_$2794",
                                    "typeString": "contract Controller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Controller_$2794",
                                    "typeString": "contract Controller"
                                  }
                                ],
                                "id": 2848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "565:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2847,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "565:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "565:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2844,
                            "name": "newController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2808,
                            "src": "539:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 2851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "539:46:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2852,
                        "nodeType": "EmitStatement",
                        "src": "534:51:15"
                      }
                    ]
                  },
                  "functionSelector": "7cc9788e",
                  "id": 2854,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deployController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "297:2:15"
                  },
                  "returnParameters": {
                    "id": 2810,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "307:0:15"
                  },
                  "scope": 2893,
                  "src": "272:321:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2864,
                    "nodeType": "Block",
                    "src": "668:49:15",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 2859,
                            "name": "controllers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2802,
                            "src": "686:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 2862,
                          "indexExpression": {
                            "expression": {
                              "id": 2860,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "698:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "698:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "686:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2858,
                        "id": 2863,
                        "nodeType": "Return",
                        "src": "679:30:15"
                      }
                    ]
                  },
                  "functionSelector": "3018205f",
                  "id": 2865,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2855,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "623:2:15"
                  },
                  "returnParameters": {
                    "id": 2858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2857,
                        "mutability": "mutable",
                        "name": "controller",
                        "nodeType": "VariableDeclaration",
                        "scope": 2865,
                        "src": "648:18:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "647:20:15"
                  },
                  "scope": 2893,
                  "src": "601:116:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2891,
                    "nodeType": "Block",
                    "src": "764:146:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2869,
                                  "name": "controllers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2802,
                                  "src": "783:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 2872,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2870,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "795:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "795:10:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "783:23:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307830",
                                    "id": 2875,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "818:3:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "810:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2873,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "810:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "810:12:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "783:39:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f7520646f6e2774206f776e206120636f6e74726f6c6c6572",
                              "id": 2878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "824:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f",
                                "typeString": "literal_string \"You don't own a controller\""
                              },
                              "value": "You don't own a controller"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68809d01b48ca89bcf3f94a95d7b6ffb3372929acf68e435228a6a26ea0eda2f",
                                "typeString": "literal_string \"You don't own a controller\""
                              }
                            ],
                            "id": 2868,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "775:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "775:78:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2880,
                        "nodeType": "ExpressionStatement",
                        "src": "775:78:15"
                      },
                      {
                        "expression": {
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2881,
                              "name": "controllers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2802,
                              "src": "864:11:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 2884,
                            "indexExpression": {
                              "expression": {
                                "id": 2882,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "876:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "876:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "864:23:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "307830",
                                "id": 2887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "898:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0x0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "890:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2885,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "890:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "890:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "864:38:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2890,
                        "nodeType": "ExpressionStatement",
                        "src": "864:38:15"
                      }
                    ]
                  },
                  "functionSelector": "111f1f60",
                  "id": 2892,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deactivateController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2866,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "754:2:15"
                  },
                  "returnParameters": {
                    "id": 2867,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "764:0:15"
                  },
                  "scope": 2893,
                  "src": "725:185:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2894,
              "src": "111:802:15"
            }
          ],
          "src": "33:880:15"
        },
        "id": 15
      },
      "contracts/Streamer.sol": {
        "ast": {
          "absolutePath": "contracts/Streamer.sol",
          "exportedSymbols": {
            "CFAv1Library": [
              756
            ],
            "ContextDefinitions": [
              1142
            ],
            "IConstantFlowAgreementV1": [
              927
            ],
            "ISuperAgreement": [
              1276
            ],
            "ISuperApp": [
              1390
            ],
            "ISuperToken": [
              1744
            ],
            "ISuperfluid": [
              2287
            ],
            "Streamer": [
              3261
            ],
            "SuperAppDefinitions": [
              1066
            ]
          },
          "id": 3262,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2895,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:16"
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/apps/CFAv1Library.sol",
              "id": 2897,
              "nodeType": "ImportDirective",
              "scope": 3262,
              "sourceUnit": 757,
              "src": "61:108:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2896,
                    "name": "CFAv1Library",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "75:12:16",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
              "id": 2904,
              "nodeType": "ImportDirective",
              "scope": 3262,
              "sourceUnit": 2288,
              "src": "173:231:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2898,
                    "name": "ISuperfluid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "188:11:16",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2899,
                    "name": "ISuperToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "206:11:16",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2900,
                    "name": "ISuperApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "224:9:16",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2901,
                    "name": "ISuperAgreement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "240:15:16",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2902,
                    "name": "ContextDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "262:18:16",
                    "typeDescriptions": {}
                  }
                },
                {
                  "foreign": {
                    "id": 2903,
                    "name": "SuperAppDefinitions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "287:19:16",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
              "id": 2906,
              "nodeType": "ImportDirective",
              "scope": 3262,
              "sourceUnit": 928,
              "src": "408:149:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2905,
                    "name": "IConstantFlowAgreementV1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "src": "422:24:16",
                    "typeDescriptions": {}
                  }
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3261,
              "linearizedBaseContracts": [
                3261
              ],
              "name": "Streamer",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "ca13bf65",
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "618:21:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 2907,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fc0c546a",
                  "id": 2911,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "677:24:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$1744",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 2910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2909,
                      "name": "ISuperToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1744,
                      "src": "677:11:16"
                    },
                    "referencedDeclaration": 1744,
                    "src": "677:11:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$1744",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f7260d3e",
                  "id": 2913,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "748:23:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "02fb0c5e",
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "active",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "806:18:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2914,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "06fdde03",
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "831:18:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "831:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "858:13:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2929,
                    "nodeType": "Block",
                    "src": "899:59:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2922,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "918:3:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "918:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2924,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2919,
                                "src": "932:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "918:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 2921,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "910:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 2926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "910:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2927,
                        "nodeType": "ExpressionStatement",
                        "src": "910:28:16"
                      },
                      {
                        "id": 2928,
                        "nodeType": "PlaceholderStatement",
                        "src": "949:1:16"
                      }
                    ]
                  },
                  "id": 2930,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2920,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "899:0:16"
                  },
                  "src": "880:78:16",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "id": 2934,
                  "libraryName": {
                    "id": 2931,
                    "name": "CFAv1Library",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 756,
                    "src": "1007:12:16"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1001:45:16",
                  "typeName": {
                    "id": 2933,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2932,
                      "name": "CFAv1Library.InitData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 251,
                      "src": "1024:21:16"
                    },
                    "referencedDeclaration": 251,
                    "src": "1024:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                      "typeString": "struct CFAv1Library.InitData"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "d3112b2e",
                  "id": 2937,
                  "mutability": "mutable",
                  "name": "cfaV1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3261,
                  "src": "1087:34:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitData_$251_storage",
                    "typeString": "struct CFAv1Library.InitData"
                  },
                  "typeName": {
                    "id": 2936,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2935,
                      "name": "CFAv1Library.InitData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 251,
                      "src": "1087:21:16"
                    },
                    "referencedDeclaration": 251,
                    "src": "1087:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitData_$251_storage_ptr",
                      "typeString": "struct CFAv1Library.InitData"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2997,
                    "nodeType": "Block",
                    "src": "1253:630:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2953,
                            "name": "cfaV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2937,
                            "src": "1328:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitData_$251_storage",
                              "typeString": "struct CFAv1Library.InitData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2956,
                                "name": "host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2940,
                                "src": "1372:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                                                "id": 2963,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1585:60:16",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                                  "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                                                },
                                                "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                                                  "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                                                }
                                              ],
                                              "id": 2962,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "1575:9:16",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 2964,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1575:71:16",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2960,
                                            "name": "host",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2940,
                                            "src": "1526:4:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                              "typeString": "contract ISuperfluid"
                                            }
                                          },
                                          "id": 2961,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getAgreementClass",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1930,
                                          "src": "1526:22:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_ISuperAgreement_$1276_$",
                                            "typeString": "function (bytes32) view external returns (contract ISuperAgreement)"
                                          }
                                        },
                                        "id": 2965,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1526:143:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                                          "typeString": "contract ISuperAgreement"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ISuperAgreement_$1276",
                                          "typeString": "contract ISuperAgreement"
                                        }
                                      ],
                                      "id": 2959,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1518:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2958,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1518:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1518:152:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2957,
                                  "name": "IConstantFlowAgreementV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 927,
                                  "src": "1475:24:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IConstantFlowAgreementV1_$927_$",
                                    "typeString": "type(contract IConstantFlowAgreementV1)"
                                  }
                                },
                                "id": 2967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1475:214:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                                  "typeString": "contract ISuperfluid"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IConstantFlowAgreementV1_$927",
                                  "typeString": "contract IConstantFlowAgreementV1"
                                }
                              ],
                              "expression": {
                                "id": 2954,
                                "name": "CFAv1Library",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 756,
                                "src": "1336:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_CFAv1Library_$756_$",
                                  "typeString": "type(library CFAv1Library)"
                                }
                              },
                              "id": 2955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "InitData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 251,
                              "src": "1336:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_InitData_$251_storage_ptr_$",
                                "typeString": "type(struct CFAv1Library.InitData storage pointer)"
                              }
                            },
                            "id": 2968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1336:364:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitData_$251_memory_ptr",
                              "typeString": "struct CFAv1Library.InitData memory"
                            }
                          },
                          "src": "1328:372:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$251_storage",
                            "typeString": "struct CFAv1Library.InitData storage ref"
                          }
                        },
                        "id": 2970,
                        "nodeType": "ExpressionStatement",
                        "src": "1328:372:16"
                      },
                      {
                        "expression": {
                          "id": 2973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2971,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2913,
                            "src": "1713:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2972,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2942,
                            "src": "1724:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1713:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2974,
                        "nodeType": "ExpressionStatement",
                        "src": "1713:20:16"
                      },
                      {
                        "expression": {
                          "id": 2979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2975,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2911,
                            "src": "1744:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1744",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2977,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2944,
                                "src": "1764:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2976,
                              "name": "ISuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1744,
                              "src": "1752:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISuperToken_$1744_$",
                                "typeString": "type(contract ISuperToken)"
                              }
                            },
                            "id": 2978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1752:19:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$1744",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "src": "1744:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 2980,
                        "nodeType": "ExpressionStatement",
                        "src": "1744:27:16"
                      },
                      {
                        "expression": {
                          "id": 2983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2981,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "1782:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2982,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "1790:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1782:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2984,
                        "nodeType": "ExpressionStatement",
                        "src": "1782:14:16"
                      },
                      {
                        "expression": {
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2985,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2908,
                            "src": "1807:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2986,
                            "name": "_flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2948,
                            "src": "1818:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "1807:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 2988,
                        "nodeType": "ExpressionStatement",
                        "src": "1807:20:16"
                      },
                      {
                        "expression": {
                          "id": 2991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2989,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "1838:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2990,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2950,
                            "src": "1845:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1838:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 2992,
                        "nodeType": "ExpressionStatement",
                        "src": "1838:12:16"
                      },
                      {
                        "expression": {
                          "id": 2995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2993,
                            "name": "active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "1861:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1870:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1861:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2996,
                        "nodeType": "ExpressionStatement",
                        "src": "1861:14:16"
                      }
                    ]
                  },
                  "id": 2998,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2951,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2940,
                        "mutability": "mutable",
                        "name": "host",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1146:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                          "typeString": "contract ISuperfluid"
                        },
                        "typeName": {
                          "id": 2939,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2938,
                            "name": "ISuperfluid",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2287,
                            "src": "1146:11:16"
                          },
                          "referencedDeclaration": 2287,
                          "src": "1146:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$2287",
                            "typeString": "contract ISuperfluid"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2942,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1164:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2944,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1183:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2943,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1183:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2946,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1199:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2948,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1215:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 2947,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1215:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2950,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "1232:19:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2949,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1232:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1145:107:16"
                  },
                  "returnParameters": {
                    "id": 2952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1253:0:16"
                  },
                  "scope": 3261,
                  "src": "1134:749:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3023,
                    "nodeType": "Block",
                    "src": "1964:128:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 3009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3007,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2913,
                            "src": "1979:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3008,
                            "name": "_receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3000,
                            "src": "1990:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1979:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3010,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:20:16"
                      },
                      {
                        "expression": {
                          "id": 3013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3011,
                            "name": "flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2908,
                            "src": "2010:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3012,
                            "name": "_flowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3002,
                            "src": "2021:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "2010:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 3014,
                        "nodeType": "ExpressionStatement",
                        "src": "2010:20:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3018,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "2058:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3019,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "2068:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            {
                              "id": 3020,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2908,
                              "src": "2075:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "id": 3015,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "2041:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$251_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3017,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 367,
                            "src": "2041:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$251_storage_ptr_$_t_address_$_t_contract$_ISuperfluidToken_$2658_$_t_int96_$returns$__$bound_to$_t_struct$_InitData_$251_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,contract ISuperfluidToken,int96)"
                            }
                          },
                          "id": 3021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2041:43:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3022,
                        "nodeType": "ExpressionStatement",
                        "src": "2041:43:16"
                      }
                    ]
                  },
                  "functionSelector": "cca3a90e",
                  "id": 3024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3005,
                      "modifierName": {
                        "id": 3004,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2930,
                        "src": "1954:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1954:9:16"
                    }
                  ],
                  "name": "editStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3000,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 3024,
                        "src": "1911:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2999,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1911:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3002,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 3024,
                        "src": "1930:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 3001,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1930:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1910:36:16"
                  },
                  "returnParameters": {
                    "id": 3006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1964:0:16"
                  },
                  "scope": 3261,
                  "src": "1891:201:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3064,
                    "nodeType": "Block",
                    "src": "2141:252:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3030,
                                "name": "active",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "2160:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 3031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2170:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "2160:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "612073747265616d20697320616c7265616479206f70656e",
                              "id": 3033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2177:26:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080",
                                "typeString": "literal_string \"a stream is already open\""
                              },
                              "value": "a stream is already open"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_22e515a52011dfe221afcb68b8019369fe39155f5a82aadc66a28b52beca9080",
                                "typeString": "literal_string \"a stream is already open\""
                              }
                            ],
                            "id": 3029,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2152:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2152:52:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3035,
                        "nodeType": "ExpressionStatement",
                        "src": "2152:52:16"
                      },
                      {
                        "expression": {
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3036,
                            "name": "active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "2215:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2224:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2215:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3039,
                        "nodeType": "ExpressionStatement",
                        "src": "2215:13:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3045,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2271:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Streamer_$3261",
                                          "typeString": "contract Streamer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Streamer_$3261",
                                          "typeString": "contract Streamer"
                                        }
                                      ],
                                      "id": 3044,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2263:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3043,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2263:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3046,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2263:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3041,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2911,
                                    "src": "2247:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 3042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1470,
                                  "src": "2247:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2247:30:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 3050,
                                    "name": "flowRate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2908,
                                    "src": "2288:8:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  ],
                                  "id": 3049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2281:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint96_$",
                                    "typeString": "type(uint96)"
                                  },
                                  "typeName": {
                                    "id": 3048,
                                    "name": "uint96",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2281:6:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2281:16:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "2247:50:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682062616c616e6365206465706f73697465642e",
                              "id": 3053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2299:31:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e",
                                "typeString": "literal_string \"Not enough balance deposited.\""
                              },
                              "value": "Not enough balance deposited."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bd234d20d013bcbf52036e90c695d6aab819aa2b8428d21e1cb7359a92f7b91e",
                                "typeString": "literal_string \"Not enough balance deposited.\""
                              }
                            ],
                            "id": 3040,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2239:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2239:92:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3055,
                        "nodeType": "ExpressionStatement",
                        "src": "2239:92:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3059,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "2359:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3060,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "2369:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            {
                              "id": 3061,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2908,
                              "src": "2376:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "id": 3056,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "2342:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$251_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 289,
                            "src": "2342:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$251_storage_ptr_$_t_address_$_t_contract$_ISuperfluidToken_$2658_$_t_int96_$returns$__$bound_to$_t_struct$_InitData_$251_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,contract ISuperfluidToken,int96)"
                            }
                          },
                          "id": 3062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2342:43:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3063,
                        "nodeType": "ExpressionStatement",
                        "src": "2342:43:16"
                      }
                    ]
                  },
                  "functionSelector": "ffe5c552",
                  "id": 3065,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3027,
                      "modifierName": {
                        "id": 3026,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2930,
                        "src": "2131:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2131:9:16"
                    }
                  ],
                  "name": "openStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2121:2:16"
                  },
                  "returnParameters": {
                    "id": 3028,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2141:0:16"
                  },
                  "scope": 3261,
                  "src": "2102:291:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3100,
                    "nodeType": "Block",
                    "src": "2441:200:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3071,
                                "name": "active",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "2460:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 3072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2470:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "2460:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7468652073747265616d206973206e6f74206f70656e",
                              "id": 3074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2476:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10",
                                "typeString": "literal_string \"the stream is not open\""
                              },
                              "value": "the stream is not open"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c2aa69ea16d7c07d16eb3427b8bfbeaba430c0e784025e8742411694a195fd10",
                                "typeString": "literal_string \"the stream is not open\""
                              }
                            ],
                            "id": 3070,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2452:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2452:49:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3076,
                        "nodeType": "ExpressionStatement",
                        "src": "2452:49:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3080,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2529:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2529:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3082,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "2541:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3083,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "2551:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            ],
                            "expression": {
                              "id": 3077,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "2512:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$251_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3079,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 445,
                            "src": "2512:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$251_storage_ptr_$_t_address_$_t_address_$_t_contract$_ISuperfluidToken_$2658_$returns$__$bound_to$_t_struct$_InitData_$251_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,address,contract ISuperfluidToken)"
                            }
                          },
                          "id": 3084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2512:45:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3085,
                        "nodeType": "ExpressionStatement",
                        "src": "2512:45:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3091,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2601:4:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Streamer_$3261",
                                        "typeString": "contract Streamer"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Streamer_$3261",
                                        "typeString": "contract Streamer"
                                      }
                                    ],
                                    "id": 3090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2593:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3089,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2593:7:16",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2593:13:16",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 3087,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2911,
                                  "src": "2577:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                    "typeString": "contract ISuperToken"
                                  }
                                },
                                "id": 3088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1470,
                                "src": "2577:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 3093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2577:30:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3086,
                            "name": "withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3204,
                            "src": "2568:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2568:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3095,
                        "nodeType": "ExpressionStatement",
                        "src": "2568:40:16"
                      },
                      {
                        "expression": {
                          "id": 3098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3096,
                            "name": "active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "2619:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2628:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2619:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3099,
                        "nodeType": "ExpressionStatement",
                        "src": "2619:14:16"
                      }
                    ]
                  },
                  "functionSelector": "9dad9382",
                  "id": 3101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3068,
                      "modifierName": {
                        "id": 3067,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2930,
                        "src": "2431:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2431:9:16"
                    }
                  ],
                  "name": "closeStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2421:2:16"
                  },
                  "returnParameters": {
                    "id": 3069,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2441:0:16"
                  },
                  "scope": 3261,
                  "src": "2401:240:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3125,
                    "nodeType": "Block",
                    "src": "2690:123:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3107,
                                "name": "active",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2915,
                                "src": "2709:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 3108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2719:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "2709:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 3106,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2701:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 3110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:23:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3111,
                        "nodeType": "ExpressionStatement",
                        "src": "2701:23:16"
                      },
                      {
                        "expression": {
                          "id": 3114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3112,
                            "name": "active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2915,
                            "src": "2735:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2744:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2735:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3115,
                        "nodeType": "ExpressionStatement",
                        "src": "2735:14:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2777:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2777:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3121,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "2789:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3122,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "2799:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            ],
                            "expression": {
                              "id": 3116,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2937,
                              "src": "2760:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitData_$251_storage",
                                "typeString": "struct CFAv1Library.InitData storage ref"
                              }
                            },
                            "id": 3118,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 445,
                            "src": "2760:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_InitData_$251_storage_ptr_$_t_address_$_t_address_$_t_contract$_ISuperfluidToken_$2658_$returns$__$bound_to$_t_struct$_InitData_$251_storage_ptr_$",
                              "typeString": "function (struct CFAv1Library.InitData storage pointer,address,address,contract ISuperfluidToken)"
                            }
                          },
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2760:45:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3124,
                        "nodeType": "ExpressionStatement",
                        "src": "2760:45:16"
                      }
                    ]
                  },
                  "functionSelector": "b87fe774",
                  "id": 3126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3104,
                      "modifierName": {
                        "id": 3103,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2930,
                        "src": "2680:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2680:9:16"
                    }
                  ],
                  "name": "pauseStream",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3102,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2670:2:16"
                  },
                  "returnParameters": {
                    "id": 3105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2690:0:16"
                  },
                  "scope": 3261,
                  "src": "2650:163:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3144,
                    "nodeType": "Block",
                    "src": "2878:75:16",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3135,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2920:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Streamer_$3261",
                                      "typeString": "contract Streamer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Streamer_$3261",
                                      "typeString": "contract Streamer"
                                    }
                                  ],
                                  "id": 3134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2912:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3133,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2912:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2912:13:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3131,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2911,
                                "src": "2896:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              "id": 3132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1470,
                              "src": "2896:15:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 3137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2896:30:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 3140,
                                "name": "flowRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2908,
                                "src": "2936:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              ],
                              "id": 3139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2929:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 3138,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "2929:6:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2929:16:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "2896:49:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3130,
                        "id": 3143,
                        "nodeType": "Return",
                        "src": "2889:56:16"
                      }
                    ]
                  },
                  "functionSelector": "b9146161",
                  "id": 3145,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStreamerETA",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2844:2:16"
                  },
                  "returnParameters": {
                    "id": 3130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3129,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 3145,
                        "src": "2869:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3128,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2869:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2868:9:16"
                  },
                  "scope": 3261,
                  "src": "2821:132:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3170,
                    "nodeType": "Block",
                    "src": "3016:143:16",
                    "statements": [
                      {
                        "assignments": [
                          3153
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3153,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3170,
                            "src": "3029:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3152,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3029:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3164,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3156,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3063:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3063:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3160,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3083:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                ],
                                "id": 3159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3075:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3158,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3075:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3075:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3162,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3147,
                              "src": "3090:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3154,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "3044:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 3155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1520,
                            "src": "3044:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:54:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3029:69:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3166,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3153,
                              "src": "3117:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c65642e",
                              "id": 3167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3126:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              },
                              "value": "Token transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              }
                            ],
                            "id": 3165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3109:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3109:42:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3169,
                        "nodeType": "ExpressionStatement",
                        "src": "3109:42:16"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 3171,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3150,
                      "modifierName": {
                        "id": 3149,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2930,
                        "src": "3006:9:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3006:9:16"
                    }
                  ],
                  "name": "deposit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3147,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3171,
                        "src": "2982:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2981:17:16"
                  },
                  "returnParameters": {
                    "id": 3151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3016:0:16"
                  },
                  "scope": 3261,
                  "src": "2965:194:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3203,
                    "nodeType": "Block",
                    "src": "3209:206:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3181,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3252:4:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Streamer_$3261",
                                          "typeString": "contract Streamer"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Streamer_$3261",
                                          "typeString": "contract Streamer"
                                        }
                                      ],
                                      "id": 3180,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3244:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3179,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3244:7:16",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3182,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3244:13:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3177,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2911,
                                    "src": "3228:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 3178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1470,
                                  "src": "3228:15:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3228:30:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3184,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3173,
                                "src": "3262:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3228:41:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742066756e64732e",
                              "id": 3186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3271:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                "typeString": "literal_string \"Insufficient funds.\""
                              },
                              "value": "Insufficient funds."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
                                "typeString": "literal_string \"Insufficient funds.\""
                              }
                            ],
                            "id": 3176,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3220:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3220:73:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3188,
                        "nodeType": "ExpressionStatement",
                        "src": "3220:73:16"
                      },
                      {
                        "assignments": [
                          3190
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3190,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 3203,
                            "src": "3304:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3189,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3304:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3197,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3193,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3334:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3334:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3195,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3173,
                              "src": "3346:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3191,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "3319:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 3192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1482,
                            "src": "3319:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3319:35:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3304:50:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3199,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3190,
                              "src": "3373:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c65642e",
                              "id": 3200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3382:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              },
                              "value": "Token transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e545223bb79d8456d66fa5a98897abb42bb4807111f004a120200da3b7e292c5",
                                "typeString": "literal_string \"Token transfer failed.\""
                              }
                            ],
                            "id": 3198,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3365:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:42:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3202,
                        "nodeType": "ExpressionStatement",
                        "src": "3365:42:16"
                      }
                    ]
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 3204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3173,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 3204,
                        "src": "3185:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3185:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3184:17:16"
                  },
                  "returnParameters": {
                    "id": 3175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:16"
                  },
                  "scope": 3261,
                  "src": "3167:248:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3217,
                    "nodeType": "Block",
                    "src": "3484:56:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3213,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3526:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                ],
                                "id": 3212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3518:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3211,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3518:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3518:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3209,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "3502:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 3210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1470,
                            "src": "3502:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3502:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3208,
                        "id": 3216,
                        "nodeType": "Return",
                        "src": "3495:37:16"
                      }
                    ]
                  },
                  "functionSelector": "12065fe0",
                  "id": 3218,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3442:2:16"
                  },
                  "returnParameters": {
                    "id": 3208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3207,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 3218,
                        "src": "3467:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3467:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3466:17:16"
                  },
                  "scope": 3261,
                  "src": "3423:117:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3249,
                    "nodeType": "Block",
                    "src": "3718:109:16",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 3236,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2908,
                              "src": "3737:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            {
                              "id": 3237,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2911,
                              "src": "3747:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$1744",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            {
                              "id": 3238,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2913,
                              "src": "3754:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3239,
                              "name": "active",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2915,
                              "src": "3764:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 3240,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2917,
                              "src": "3772:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3241,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3778:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                },
                                "id": 3242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3218,
                                "src": "3778:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 3243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3778:17:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 3244,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3797:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Streamer_$3261",
                                    "typeString": "contract Streamer"
                                  }
                                },
                                "id": 3245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getStreamerETA",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3145,
                                "src": "3797:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 3246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3797:21:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3247,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3736:83:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int96_$_t_contract$_ISuperToken_$1744_$_t_address_$_t_bool_$_t_string_storage_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(int96,contract ISuperToken,address,bool,string storage ref,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 3235,
                        "id": 3248,
                        "nodeType": "Return",
                        "src": "3729:90:16"
                      }
                    ]
                  },
                  "functionSelector": "5a096b2f",
                  "id": 3250,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStreamData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3570:2:16"
                  },
                  "returnParameters": {
                    "id": 3235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3221,
                        "mutability": "mutable",
                        "name": "_flowRate",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3595:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        "typeName": {
                          "id": 3220,
                          "name": "int96",
                          "nodeType": "ElementaryTypeName",
                          "src": "3595:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3224,
                        "mutability": "mutable",
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3612:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$1744",
                          "typeString": "contract ISuperToken"
                        },
                        "typeName": {
                          "id": 3223,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3222,
                            "name": "ISuperToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1744,
                            "src": "3612:11:16"
                          },
                          "referencedDeclaration": 1744,
                          "src": "3612:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$1744",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3226,
                        "mutability": "mutable",
                        "name": "_receiver",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3632:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3632:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3228,
                        "mutability": "mutable",
                        "name": "_active",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3651:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3227,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3651:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3230,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3665:19:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3229,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3665:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3232,
                        "mutability": "mutable",
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3686:16:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3686:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3234,
                        "mutability": "mutable",
                        "name": "_eta",
                        "nodeType": "VariableDeclaration",
                        "scope": 3250,
                        "src": "3704:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3704:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3594:123:16"
                  },
                  "scope": 3261,
                  "src": "3548:279:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3259,
                    "nodeType": "Block",
                    "src": "3882:31:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 3257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3255,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2917,
                            "src": "3893:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3256,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3252,
                            "src": "3900:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "3893:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 3258,
                        "nodeType": "ExpressionStatement",
                        "src": "3893:12:16"
                      }
                    ]
                  },
                  "functionSelector": "c47f0027",
                  "id": 3260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setName",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3252,
                        "mutability": "mutable",
                        "name": "_name",
                        "nodeType": "VariableDeclaration",
                        "scope": 3260,
                        "src": "3852:21:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3251,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3852:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3851:23:16"
                  },
                  "returnParameters": {
                    "id": 3254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3882:0:16"
                  },
                  "scope": 3261,
                  "src": "3835:78:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3262,
              "src": "565:3351:16"
            }
          ],
          "src": "33:3883:16"
        },
        "id": 16
      }
    }
  }
}
